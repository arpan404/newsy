{"version":3,"file":"index.js","sources":["../src/useInterval.ts","../src/utils.ts","../src/index.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react'\n\n/** keep typescript happy */\nconst noop = () => {}\n\nexport function useInterval(\n  callback: () => void,\n  delay: number | null | false,\n  immediate?: boolean\n) {\n  const savedCallback = useRef(noop)\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  })\n\n  // Execute callback if immediate is set.\n  useEffect(() => {\n    if (!immediate) return\n    if (delay === null || delay === false) return\n    savedCallback.current()\n  }, [immediate])\n\n  // Set up the interval.\n  useEffect(() => {\n    if (delay === null || delay === false) return undefined\n    const tick = () => savedCallback.current()\n    const id = setInterval(tick, delay)\n    return () => clearInterval(id)\n  }, [delay])\n}\n\nexport default useInterval\n","export function randomInt(min: number, max: number): number {\n  // @ts-ignore\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n","import * as React from 'react'\nimport {\n  CSSProperties,\n  useEffect,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n} from 'react'\nimport { useInterval } from './useInterval'\nimport { randomInt } from './utils'\n\ntype IProps = {\n  progress?: number\n  color?: string\n  shadow?: boolean\n  background?: string\n  height?: number\n  onLoaderFinished?: () => void\n  className?: string\n  containerClassName?: string\n  loaderSpeed?: number\n  transitionTime?: number\n  waitingTime?: number\n  style?: CSSProperties\n  containerStyle?: CSSProperties\n  shadowStyle?: CSSProperties\n}\n\nexport type LoadingBarRef = {\n  continuousStart: (startingValue: number, refreshRate: number) => void\n  staticStart: (startingValue: number) => void\n  complete: () => void;\n}\n\nconst LoadingBar = forwardRef<LoadingBarRef, IProps>(\n  (\n    {\n      progress,\n      height = 2,\n      className = '',\n      color = 'red',\n      background = 'transparent',\n      onLoaderFinished,\n      transitionTime = 300,\n      loaderSpeed = 500,\n      waitingTime = 1000,\n      shadow = true,\n      containerStyle = {},\n      style = {},\n      shadowStyle: shadowStyleProp = {},\n      containerClassName = ''\n    },\n    ref\n  ) => {\n    const isMounted = useRef(false);\n    const [localProgress, localProgressSet] = useState<number>(0)\n    const [pressedContinuous, setPressedContinuous] = useState<{\n      active: boolean\n      startingValue: number\n      refreshRate: number\n    }>({ active: false, startingValue: 20, refreshRate: 1000 })\n    const [usingProps, setUsingProps] = useState(false)\n\n    const [pressedStaticStart, setStaticStartPressed] = useState<{\n      active: boolean\n      value: number\n    }>({ active: false, value: 20 })\n\n    const initialLoaderStyle: CSSProperties = {\n      height: '100%',\n      background: color,\n      transition: `all ${loaderSpeed}ms ease`,\n      width: '0%',\n    }\n\n    const loaderContainerStyle: CSSProperties = {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      height,\n      background,\n      zIndex: 99999999999,\n      width: 100 + '%',\n    }\n\n    const initialShadowStyles: CSSProperties = {\n      boxShadow: `0 0 10px ${color}, 0 0 10px ${color}`,\n      width: '5%',\n      opacity: 1,\n      position: 'absolute',\n      height: '100%',\n      transition: `all ${loaderSpeed}ms ease`,\n      transform: 'rotate(3deg) translate(0px, -4px)',\n      left: '-10rem',\n    }\n\n    const [loaderStyle, loaderStyleSet] = useState<CSSProperties>(\n      initialLoaderStyle\n    )\n    const [shadowStyle, shadowStyleSet] = useState<CSSProperties>(\n      initialShadowStyles\n    )\n\n    useEffect(() => {\n      isMounted.current = true;\n      return () => {\n        isMounted.current = false;\n      }\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n      continuousStart(startingValue: number, refreshRate: number = 1000) {\n        if (pressedStaticStart.active) return\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n\n        const val = startingValue || randomInt(10, 20)\n        setPressedContinuous({\n          active: true,\n          refreshRate,\n          startingValue,\n        })\n        localProgressSet(val)\n        checkIfFull(val)\n      },\n      staticStart(startingValue: number) {\n        if (pressedContinuous.active) return\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n\n        const val = startingValue || randomInt(30, 50)\n        setStaticStartPressed({\n          active: true,\n          value: val,\n        })\n        localProgressSet(val)\n        checkIfFull(val)\n      },\n      complete() {\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n        localProgressSet(100)\n        checkIfFull(100)\n      },\n    }))\n\n    useEffect(() => {\n      loaderStyleSet({\n        ...loaderStyle,\n        background: color,\n      })\n\n      shadowStyleSet({\n        ...shadowStyle,\n        boxShadow: `0 0 10px ${color}, 0 0 5px ${color}`,\n      })\n    }, [color])\n\n    useEffect(() => {\n      if (ref) {\n        if (ref && progress !== undefined) {\n          console.warn(\n            'react-top-loading-bar: You can\\'t use both controlling by props and ref methods to control the bar! Please use only props or only ref methods! Ref methods will override props if \"ref\" property is available.'\n          )\n          return\n        }\n        checkIfFull(localProgress)\n        setUsingProps(false)\n      } else {\n        if (progress) checkIfFull(progress)\n\n        setUsingProps(true)\n      }\n    }, [progress])\n\n    const checkIfFull = (_progress: number) => {\n      if (_progress >= 100) {\n        // now it should wait a little bit\n        loaderStyleSet({\n          ...loaderStyle,\n          width: '100%',\n        })\n        if (shadow) {\n          shadowStyleSet({\n            ...shadowStyle,\n            left: _progress - 10 + '%',\n          })\n        }\n\n        setTimeout(() => {\n          if (!isMounted.current) {\n            return;\n          }\n          // now it can fade out\n          loaderStyleSet({\n            ...loaderStyle,\n            opacity: 0,\n            width: '100%',\n            transition: `all ${transitionTime}ms ease-out`,\n            color: color,\n          })\n\n          setTimeout(() => {\n            if (!isMounted.current) {\n              return;\n            }\n            // here we wait for it to fade\n            if (pressedContinuous.active) {\n              // if we have continous loader just ending, we kill it and reset it\n              setPressedContinuous({\n                ...pressedContinuous,\n                active: false,\n              })\n              localProgressSet(0)\n              checkIfFull(0)\n            }\n\n            if (pressedStaticStart.active) {\n              setStaticStartPressed({\n                ...pressedStaticStart,\n                active: false,\n              })\n              localProgressSet(0)\n              checkIfFull(0)\n            }\n\n            if (onLoaderFinished) onLoaderFinished()\n            localProgressSet(0)\n            checkIfFull(0)\n          }, transitionTime)\n        }, waitingTime)\n      } else {\n        loaderStyleSet((_loaderStyle) => {\n          return {\n            ..._loaderStyle,\n            width: _progress + '%',\n            opacity: 1,\n            transition: _progress > 0 ? `all ${loaderSpeed}ms ease` : '',\n          }\n        })\n\n        if (shadow) {\n          shadowStyleSet({\n            ...shadowStyle,\n            left: _progress - 5.5 + '%',\n            transition: _progress > 0 ? `all ${loaderSpeed}ms ease` : '',\n          })\n        }\n      }\n    }\n\n    useInterval(\n      () => {\n        const random = randomInt(10, 20)\n\n        if (localProgress + random < 90) {\n          localProgressSet(localProgress + random)\n          checkIfFull(localProgress + random)\n        }\n      },\n      pressedContinuous.active ? pressedContinuous.refreshRate : null\n    )\n\n    return (\n      <div className={containerClassName} style={{...loaderContainerStyle, ...containerStyle}}>\n        <div className={className} style={{...loaderStyle, ...style}}>\n          {shadow ? <div style={{...shadowStyle, ...shadowStyleProp}} /> : null}\n        </div>\n      </div>\n    )\n  }\n)\n\nexport {\n  IProps,\n}\n\nexport default LoadingBar\n"],"names":["noop","useInterval","callback","delay","immediate","savedCallback","useRef","useEffect","current","undefined","tick","id","setInterval","clearInterval","randomInt","min","max","Math","floor","random","LoadingBar","forwardRef","ref","progress","height","className","color","background","onLoaderFinished","transitionTime","loaderSpeed","waitingTime","shadow","containerStyle","style","shadowStyle","shadowStyleProp","containerClassName","isMounted","useState","localProgress","localProgressSet","active","startingValue","refreshRate","pressedContinuous","setPressedContinuous","usingProps","setUsingProps","value","pressedStaticStart","setStaticStartPressed","initialLoaderStyle","transition","width","loaderContainerStyle","position","top","left","zIndex","initialShadowStyles","boxShadow","opacity","transform","loaderStyle","loaderStyleSet","shadowStyleSet","useImperativeHandle","continuousStart","console","warn","val","checkIfFull","staticStart","complete","_progress","setTimeout","_loaderStyle","React"],"mappings":"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"}