{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n\nconst memoize = require(\"./memoize\");\n/** @typedef {import(\"../serialization/BinaryMiddleware\").MEASURE_END_OPERATION_TYPE} MEASURE_END_OPERATION */\n\n/** @typedef {import(\"../serialization/BinaryMiddleware\").MEASURE_START_OPERATION_TYPE} MEASURE_START_OPERATION */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\n/** @typedef {import(\"../serialization/Serializer\")} Serializer */\n\n\nconst getBinaryMiddleware = memoize(() => require(\"../serialization/BinaryMiddleware\"));\nconst getObjectMiddleware = memoize(() => require(\"../serialization/ObjectMiddleware\"));\nconst getSingleItemMiddleware = memoize(() => require(\"../serialization/SingleItemMiddleware\"));\nconst getSerializer = memoize(() => require(\"../serialization/Serializer\"));\nconst getSerializerMiddleware = memoize(() => require(\"../serialization/SerializerMiddleware\"));\nconst getBinaryMiddlewareInstance = memoize(() => new (getBinaryMiddleware())());\nconst registerSerializers = memoize(() => {\n  require(\"./registerExternalSerializer\"); // Load internal paths with a relative require\n  // This allows bundling all internal serializers\n\n\n  const internalSerializables = require(\"./internalSerializables\");\n\n  getObjectMiddleware().registerLoader(/^webpack\\/lib\\//, req => {\n    const loader = internalSerializables[req.slice(\"webpack/lib/\".length)];\n\n    if (loader) {\n      loader();\n    } else {\n      console.warn(`${req} not found in internalSerializables`);\n    }\n\n    return true;\n  });\n});\n/** @type {Serializer} */\n\nlet buffersSerializer; // Expose serialization API\n\nmodule.exports = {\n  get register() {\n    return getObjectMiddleware().register;\n  },\n\n  get registerLoader() {\n    return getObjectMiddleware().registerLoader;\n  },\n\n  get registerNotSerializable() {\n    return getObjectMiddleware().registerNotSerializable;\n  },\n\n  get NOT_SERIALIZABLE() {\n    return getObjectMiddleware().NOT_SERIALIZABLE;\n  },\n\n  /** @type {MEASURE_START_OPERATION} */\n  get MEASURE_START_OPERATION() {\n    return getBinaryMiddleware().MEASURE_START_OPERATION;\n  },\n\n  /** @type {MEASURE_END_OPERATION} */\n  get MEASURE_END_OPERATION() {\n    return getBinaryMiddleware().MEASURE_END_OPERATION;\n  },\n\n  get buffersSerializer() {\n    if (buffersSerializer !== undefined) return buffersSerializer;\n    registerSerializers();\n    const Serializer = getSerializer();\n    const binaryMiddleware = getBinaryMiddlewareInstance();\n    const SerializerMiddleware = getSerializerMiddleware();\n    const SingleItemMiddleware = getSingleItemMiddleware();\n    return buffersSerializer = new Serializer([new SingleItemMiddleware(), new (getObjectMiddleware())(context => {\n      if (context.write) {\n        context.writeLazy = value => {\n          context.write(SerializerMiddleware.createLazy(value, binaryMiddleware));\n        };\n      }\n    }, \"md4\"), binaryMiddleware]);\n  },\n\n  createFileSerializer: (fs, hashFunction) => {\n    registerSerializers();\n    const Serializer = getSerializer();\n\n    const FileMiddleware = require(\"../serialization/FileMiddleware\");\n\n    const fileMiddleware = new FileMiddleware(fs, hashFunction);\n    const binaryMiddleware = getBinaryMiddlewareInstance();\n    const SerializerMiddleware = getSerializerMiddleware();\n    const SingleItemMiddleware = getSingleItemMiddleware();\n    return new Serializer([new SingleItemMiddleware(), new (getObjectMiddleware())(context => {\n      if (context.write) {\n        context.writeLazy = value => {\n          context.write(SerializerMiddleware.createLazy(value, binaryMiddleware));\n        };\n\n        context.writeSeparate = (value, options) => {\n          const lazy = SerializerMiddleware.createLazy(value, fileMiddleware, options);\n          context.write(lazy);\n          return lazy;\n        };\n      }\n    }, hashFunction), binaryMiddleware, fileMiddleware]);\n  }\n};","map":{"version":3,"names":["memoize","require","getBinaryMiddleware","getObjectMiddleware","getSingleItemMiddleware","getSerializer","getSerializerMiddleware","getBinaryMiddlewareInstance","registerSerializers","internalSerializables","registerLoader","req","loader","slice","length","console","warn","buffersSerializer","module","exports","register","registerNotSerializable","NOT_SERIALIZABLE","MEASURE_START_OPERATION","MEASURE_END_OPERATION","undefined","Serializer","binaryMiddleware","SerializerMiddleware","SingleItemMiddleware","context","write","writeLazy","value","createLazy","createFileSerializer","fs","hashFunction","FileMiddleware","fileMiddleware","writeSeparate","options","lazy"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/util/serialization.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst memoize = require(\"./memoize\");\n\n/** @typedef {import(\"../serialization/BinaryMiddleware\").MEASURE_END_OPERATION_TYPE} MEASURE_END_OPERATION */\n/** @typedef {import(\"../serialization/BinaryMiddleware\").MEASURE_START_OPERATION_TYPE} MEASURE_START_OPERATION */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"../serialization/Serializer\")} Serializer */\n\nconst getBinaryMiddleware = memoize(() =>\n\trequire(\"../serialization/BinaryMiddleware\")\n);\nconst getObjectMiddleware = memoize(() =>\n\trequire(\"../serialization/ObjectMiddleware\")\n);\nconst getSingleItemMiddleware = memoize(() =>\n\trequire(\"../serialization/SingleItemMiddleware\")\n);\nconst getSerializer = memoize(() => require(\"../serialization/Serializer\"));\nconst getSerializerMiddleware = memoize(() =>\n\trequire(\"../serialization/SerializerMiddleware\")\n);\n\nconst getBinaryMiddlewareInstance = memoize(\n\t() => new (getBinaryMiddleware())()\n);\n\nconst registerSerializers = memoize(() => {\n\trequire(\"./registerExternalSerializer\");\n\n\t// Load internal paths with a relative require\n\t// This allows bundling all internal serializers\n\tconst internalSerializables = require(\"./internalSerializables\");\n\tgetObjectMiddleware().registerLoader(/^webpack\\/lib\\//, req => {\n\t\tconst loader = internalSerializables[req.slice(\"webpack/lib/\".length)];\n\t\tif (loader) {\n\t\t\tloader();\n\t\t} else {\n\t\t\tconsole.warn(`${req} not found in internalSerializables`);\n\t\t}\n\t\treturn true;\n\t});\n});\n\n/** @type {Serializer} */\nlet buffersSerializer;\n\n// Expose serialization API\nmodule.exports = {\n\tget register() {\n\t\treturn getObjectMiddleware().register;\n\t},\n\tget registerLoader() {\n\t\treturn getObjectMiddleware().registerLoader;\n\t},\n\tget registerNotSerializable() {\n\t\treturn getObjectMiddleware().registerNotSerializable;\n\t},\n\tget NOT_SERIALIZABLE() {\n\t\treturn getObjectMiddleware().NOT_SERIALIZABLE;\n\t},\n\t/** @type {MEASURE_START_OPERATION} */\n\tget MEASURE_START_OPERATION() {\n\t\treturn getBinaryMiddleware().MEASURE_START_OPERATION;\n\t},\n\t/** @type {MEASURE_END_OPERATION} */\n\tget MEASURE_END_OPERATION() {\n\t\treturn getBinaryMiddleware().MEASURE_END_OPERATION;\n\t},\n\tget buffersSerializer() {\n\t\tif (buffersSerializer !== undefined) return buffersSerializer;\n\t\tregisterSerializers();\n\t\tconst Serializer = getSerializer();\n\t\tconst binaryMiddleware = getBinaryMiddlewareInstance();\n\t\tconst SerializerMiddleware = getSerializerMiddleware();\n\t\tconst SingleItemMiddleware = getSingleItemMiddleware();\n\t\treturn (buffersSerializer = new Serializer([\n\t\t\tnew SingleItemMiddleware(),\n\t\t\tnew (getObjectMiddleware())(context => {\n\t\t\t\tif (context.write) {\n\t\t\t\t\tcontext.writeLazy = value => {\n\t\t\t\t\t\tcontext.write(\n\t\t\t\t\t\t\tSerializerMiddleware.createLazy(value, binaryMiddleware)\n\t\t\t\t\t\t);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}, \"md4\"),\n\t\t\tbinaryMiddleware\n\t\t]));\n\t},\n\tcreateFileSerializer: (fs, hashFunction) => {\n\t\tregisterSerializers();\n\t\tconst Serializer = getSerializer();\n\t\tconst FileMiddleware = require(\"../serialization/FileMiddleware\");\n\t\tconst fileMiddleware = new FileMiddleware(fs, hashFunction);\n\t\tconst binaryMiddleware = getBinaryMiddlewareInstance();\n\t\tconst SerializerMiddleware = getSerializerMiddleware();\n\t\tconst SingleItemMiddleware = getSingleItemMiddleware();\n\t\treturn new Serializer([\n\t\t\tnew SingleItemMiddleware(),\n\t\t\tnew (getObjectMiddleware())(context => {\n\t\t\t\tif (context.write) {\n\t\t\t\t\tcontext.writeLazy = value => {\n\t\t\t\t\t\tcontext.write(\n\t\t\t\t\t\t\tSerializerMiddleware.createLazy(value, binaryMiddleware)\n\t\t\t\t\t\t);\n\t\t\t\t\t};\n\t\t\t\t\tcontext.writeSeparate = (value, options) => {\n\t\t\t\t\t\tconst lazy = SerializerMiddleware.createLazy(\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\tfileMiddleware,\n\t\t\t\t\t\t\toptions\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcontext.write(lazy);\n\t\t\t\t\t\treturn lazy;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}, hashFunction),\n\t\t\tbinaryMiddleware,\n\t\t\tfileMiddleware\n\t\t]);\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}