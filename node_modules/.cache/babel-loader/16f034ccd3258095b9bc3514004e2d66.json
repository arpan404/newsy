{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ContextDependency = require(\"./ContextDependency\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../Dependency\")} Dependency */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n\nclass ContextDependencyTemplateAsId extends ContextDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, _ref) {\n    let {\n      runtimeTemplate,\n      moduleGraph,\n      chunkGraph,\n      runtimeRequirements\n    } = _ref;\n    const dep =\n    /** @type {ContextDependency} */\n    dependency;\n    const moduleExports = runtimeTemplate.moduleExports({\n      module: moduleGraph.getModule(dep),\n      chunkGraph,\n      request: dep.request,\n      weak: dep.weak,\n      runtimeRequirements\n    });\n\n    if (moduleGraph.getModule(dep)) {\n      if (dep.valueRange) {\n        if (Array.isArray(dep.replaces)) {\n          for (let i = 0; i < dep.replaces.length; i++) {\n            const rep = dep.replaces[i];\n            source.replace(rep.range[0], rep.range[1] - 1, rep.value);\n          }\n        }\n\n        source.replace(dep.valueRange[1], dep.range[1] - 1, \")\");\n        source.replace(dep.range[0], dep.valueRange[0] - 1, `${moduleExports}.resolve(`);\n      } else {\n        source.replace(dep.range[0], dep.range[1] - 1, `${moduleExports}.resolve`);\n      }\n    } else {\n      source.replace(dep.range[0], dep.range[1] - 1, moduleExports);\n    }\n  }\n\n}\n\nmodule.exports = ContextDependencyTemplateAsId;","map":{"version":3,"names":["ContextDependency","require","ContextDependencyTemplateAsId","Template","apply","dependency","source","runtimeTemplate","moduleGraph","chunkGraph","runtimeRequirements","dep","moduleExports","module","getModule","request","weak","valueRange","Array","isArray","replaces","i","length","rep","replace","range","value","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/dependencies/ContextDependencyTemplateAsId.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ContextDependency = require(\"./ContextDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\nclass ContextDependencyTemplateAsId extends ContextDependency.Template {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(\n\t\tdependency,\n\t\tsource,\n\t\t{ runtimeTemplate, moduleGraph, chunkGraph, runtimeRequirements }\n\t) {\n\t\tconst dep = /** @type {ContextDependency} */ (dependency);\n\t\tconst moduleExports = runtimeTemplate.moduleExports({\n\t\t\tmodule: moduleGraph.getModule(dep),\n\t\t\tchunkGraph,\n\t\t\trequest: dep.request,\n\t\t\tweak: dep.weak,\n\t\t\truntimeRequirements\n\t\t});\n\n\t\tif (moduleGraph.getModule(dep)) {\n\t\t\tif (dep.valueRange) {\n\t\t\t\tif (Array.isArray(dep.replaces)) {\n\t\t\t\t\tfor (let i = 0; i < dep.replaces.length; i++) {\n\t\t\t\t\t\tconst rep = dep.replaces[i];\n\t\t\t\t\t\tsource.replace(rep.range[0], rep.range[1] - 1, rep.value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsource.replace(dep.valueRange[1], dep.range[1] - 1, \")\");\n\t\t\t\tsource.replace(\n\t\t\t\t\tdep.range[0],\n\t\t\t\t\tdep.valueRange[0] - 1,\n\t\t\t\t\t`${moduleExports}.resolve(`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tsource.replace(\n\t\t\t\t\tdep.range[0],\n\t\t\t\t\tdep.range[1] - 1,\n\t\t\t\t\t`${moduleExports}.resolve`\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tsource.replace(dep.range[0], dep.range[1] - 1, moduleExports);\n\t\t}\n\t}\n}\nmodule.exports = ContextDependencyTemplateAsId;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAAjC;AAEA;;AACA;;AACA;;;AAEA,MAAMC,6BAAN,SAA4CF,iBAAiB,CAACG,QAA9D,CAAuE;EACtE;AACD;AACA;AACA;AACA;AACA;EACCC,KAAK,CACJC,UADI,EAEJC,MAFI,QAIH;IAAA,IADD;MAAEC,eAAF;MAAmBC,WAAnB;MAAgCC,UAAhC;MAA4CC;IAA5C,CACC;IACD,MAAMC,GAAG;IAAG;IAAkCN,UAA9C;IACA,MAAMO,aAAa,GAAGL,eAAe,CAACK,aAAhB,CAA8B;MACnDC,MAAM,EAAEL,WAAW,CAACM,SAAZ,CAAsBH,GAAtB,CAD2C;MAEnDF,UAFmD;MAGnDM,OAAO,EAAEJ,GAAG,CAACI,OAHsC;MAInDC,IAAI,EAAEL,GAAG,CAACK,IAJyC;MAKnDN;IALmD,CAA9B,CAAtB;;IAQA,IAAIF,WAAW,CAACM,SAAZ,CAAsBH,GAAtB,CAAJ,EAAgC;MAC/B,IAAIA,GAAG,CAACM,UAAR,EAAoB;QACnB,IAAIC,KAAK,CAACC,OAAN,CAAcR,GAAG,CAACS,QAAlB,CAAJ,EAAiC;UAChC,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,GAAG,CAACS,QAAJ,CAAaE,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;YAC7C,MAAME,GAAG,GAAGZ,GAAG,CAACS,QAAJ,CAAaC,CAAb,CAAZ;YACAf,MAAM,CAACkB,OAAP,CAAeD,GAAG,CAACE,KAAJ,CAAU,CAAV,CAAf,EAA6BF,GAAG,CAACE,KAAJ,CAAU,CAAV,IAAe,CAA5C,EAA+CF,GAAG,CAACG,KAAnD;UACA;QACD;;QACDpB,MAAM,CAACkB,OAAP,CAAeb,GAAG,CAACM,UAAJ,CAAe,CAAf,CAAf,EAAkCN,GAAG,CAACc,KAAJ,CAAU,CAAV,IAAe,CAAjD,EAAoD,GAApD;QACAnB,MAAM,CAACkB,OAAP,CACCb,GAAG,CAACc,KAAJ,CAAU,CAAV,CADD,EAECd,GAAG,CAACM,UAAJ,CAAe,CAAf,IAAoB,CAFrB,EAGE,GAAEL,aAAc,WAHlB;MAKA,CAbD,MAaO;QACNN,MAAM,CAACkB,OAAP,CACCb,GAAG,CAACc,KAAJ,CAAU,CAAV,CADD,EAECd,GAAG,CAACc,KAAJ,CAAU,CAAV,IAAe,CAFhB,EAGE,GAAEb,aAAc,UAHlB;MAKA;IACD,CArBD,MAqBO;MACNN,MAAM,CAACkB,OAAP,CAAeb,GAAG,CAACc,KAAJ,CAAU,CAAV,CAAf,EAA6Bd,GAAG,CAACc,KAAJ,CAAU,CAAV,IAAe,CAA5C,EAA+Cb,aAA/C;IACA;EACD;;AA7CqE;;AA+CvEC,MAAM,CAACc,OAAP,GAAiBzB,6BAAjB"},"metadata":{},"sourceType":"script"}