{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  ConcatSource,\n  PrefixSource\n} = require(\"webpack-sources\");\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").Output} OutputOptions */\n\n/** @typedef {import(\"./Chunk\")} Chunk */\n\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"./CodeGenerationResults\")} CodeGenerationResults */\n\n/** @typedef {import(\"./Compilation\").AssetInfo} AssetInfo */\n\n/** @typedef {import(\"./Compilation\").PathData} PathData */\n\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n\n/** @typedef {import(\"./Module\")} Module */\n\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"./ModuleTemplate\")} ModuleTemplate */\n\n/** @typedef {import(\"./RuntimeModule\")} RuntimeModule */\n\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n\n/** @typedef {import(\"./javascript/JavascriptModulesPlugin\").ChunkRenderContext} ChunkRenderContext */\n\n/** @typedef {import(\"./javascript/JavascriptModulesPlugin\").RenderContext} RenderContext */\n\n\nconst START_LOWERCASE_ALPHABET_CODE = \"a\".charCodeAt(0);\nconst START_UPPERCASE_ALPHABET_CODE = \"A\".charCodeAt(0);\nconst DELTA_A_TO_Z = \"z\".charCodeAt(0) - START_LOWERCASE_ALPHABET_CODE + 1;\nconst NUMBER_OF_IDENTIFIER_START_CHARS = DELTA_A_TO_Z * 2 + 2; // a-z A-Z _ $\n\nconst NUMBER_OF_IDENTIFIER_CONTINUATION_CHARS = NUMBER_OF_IDENTIFIER_START_CHARS + 10; // a-z A-Z _ $ 0-9\n\nconst FUNCTION_CONTENT_REGEX = /^function\\s?\\(\\)\\s?\\{\\r?\\n?|\\r?\\n?\\}$/g;\nconst INDENT_MULTILINE_REGEX = /^\\t/gm;\nconst LINE_SEPARATOR_REGEX = /\\r?\\n/g;\nconst IDENTIFIER_NAME_REPLACE_REGEX = /^([^a-zA-Z$_])/;\nconst IDENTIFIER_ALPHA_NUMERIC_NAME_REPLACE_REGEX = /[^a-zA-Z0-9$]+/g;\nconst COMMENT_END_REGEX = /\\*\\//g;\nconst PATH_NAME_NORMALIZE_REPLACE_REGEX = /[^a-zA-Z0-9_!§$()=\\-^°]+/g;\nconst MATCH_PADDED_HYPHENS_REPLACE_REGEX = /^-|-$/g;\n/**\n * @typedef {Object} RenderManifestOptions\n * @property {Chunk} chunk the chunk used to render\n * @property {string} hash\n * @property {string} fullHash\n * @property {OutputOptions} outputOptions\n * @property {CodeGenerationResults} codeGenerationResults\n * @property {{javascript: ModuleTemplate}} moduleTemplates\n * @property {DependencyTemplates} dependencyTemplates\n * @property {RuntimeTemplate} runtimeTemplate\n * @property {ModuleGraph} moduleGraph\n * @property {ChunkGraph} chunkGraph\n */\n\n/** @typedef {RenderManifestEntryTemplated | RenderManifestEntryStatic} RenderManifestEntry */\n\n/**\n * @typedef {Object} RenderManifestEntryTemplated\n * @property {function(): Source} render\n * @property {string | function(PathData, AssetInfo=): string} filenameTemplate\n * @property {PathData=} pathOptions\n * @property {AssetInfo=} info\n * @property {string} identifier\n * @property {string=} hash\n * @property {boolean=} auxiliary\n */\n\n/**\n * @typedef {Object} RenderManifestEntryStatic\n * @property {function(): Source} render\n * @property {string} filename\n * @property {AssetInfo} info\n * @property {string} identifier\n * @property {string=} hash\n * @property {boolean=} auxiliary\n */\n\n/**\n * @typedef {Object} HasId\n * @property {number | string} id\n */\n\n/**\n * @typedef {function(Module, number): boolean} ModuleFilterPredicate\n */\n\nclass Template {\n  /**\n   *\n   * @param {Function} fn a runtime function (.runtime.js) \"template\"\n   * @returns {string} the updated and normalized function string\n   */\n  static getFunctionContent(fn) {\n    return fn.toString().replace(FUNCTION_CONTENT_REGEX, \"\").replace(INDENT_MULTILINE_REGEX, \"\").replace(LINE_SEPARATOR_REGEX, \"\\n\");\n  }\n  /**\n   * @param {string} str the string converted to identifier\n   * @returns {string} created identifier\n   */\n\n\n  static toIdentifier(str) {\n    if (typeof str !== \"string\") return \"\";\n    return str.replace(IDENTIFIER_NAME_REPLACE_REGEX, \"_$1\").replace(IDENTIFIER_ALPHA_NUMERIC_NAME_REPLACE_REGEX, \"_\");\n  }\n  /**\n   *\n   * @param {string} str string to be converted to commented in bundle code\n   * @returns {string} returns a commented version of string\n   */\n\n\n  static toComment(str) {\n    if (!str) return \"\";\n    return `/*! ${str.replace(COMMENT_END_REGEX, \"* /\")} */`;\n  }\n  /**\n   *\n   * @param {string} str string to be converted to \"normal comment\"\n   * @returns {string} returns a commented version of string\n   */\n\n\n  static toNormalComment(str) {\n    if (!str) return \"\";\n    return `/* ${str.replace(COMMENT_END_REGEX, \"* /\")} */`;\n  }\n  /**\n   * @param {string} str string path to be normalized\n   * @returns {string} normalized bundle-safe path\n   */\n\n\n  static toPath(str) {\n    if (typeof str !== \"string\") return \"\";\n    return str.replace(PATH_NAME_NORMALIZE_REPLACE_REGEX, \"-\").replace(MATCH_PADDED_HYPHENS_REPLACE_REGEX, \"\");\n  } // map number to a single character a-z, A-Z or multiple characters if number is too big\n\n  /**\n   * @param {number} n number to convert to ident\n   * @returns {string} returns single character ident\n   */\n\n\n  static numberToIdentifier(n) {\n    if (n >= NUMBER_OF_IDENTIFIER_START_CHARS) {\n      // use multiple letters\n      return Template.numberToIdentifier(n % NUMBER_OF_IDENTIFIER_START_CHARS) + Template.numberToIdentifierContinuation(Math.floor(n / NUMBER_OF_IDENTIFIER_START_CHARS));\n    } // lower case\n\n\n    if (n < DELTA_A_TO_Z) {\n      return String.fromCharCode(START_LOWERCASE_ALPHABET_CODE + n);\n    }\n\n    n -= DELTA_A_TO_Z; // upper case\n\n    if (n < DELTA_A_TO_Z) {\n      return String.fromCharCode(START_UPPERCASE_ALPHABET_CODE + n);\n    }\n\n    if (n === DELTA_A_TO_Z) return \"_\";\n    return \"$\";\n  }\n  /**\n   * @param {number} n number to convert to ident\n   * @returns {string} returns single character ident\n   */\n\n\n  static numberToIdentifierContinuation(n) {\n    if (n >= NUMBER_OF_IDENTIFIER_CONTINUATION_CHARS) {\n      // use multiple letters\n      return Template.numberToIdentifierContinuation(n % NUMBER_OF_IDENTIFIER_CONTINUATION_CHARS) + Template.numberToIdentifierContinuation(Math.floor(n / NUMBER_OF_IDENTIFIER_CONTINUATION_CHARS));\n    } // lower case\n\n\n    if (n < DELTA_A_TO_Z) {\n      return String.fromCharCode(START_LOWERCASE_ALPHABET_CODE + n);\n    }\n\n    n -= DELTA_A_TO_Z; // upper case\n\n    if (n < DELTA_A_TO_Z) {\n      return String.fromCharCode(START_UPPERCASE_ALPHABET_CODE + n);\n    }\n\n    n -= DELTA_A_TO_Z; // numbers\n\n    if (n < 10) {\n      return `${n}`;\n    }\n\n    if (n === 10) return \"_\";\n    return \"$\";\n  }\n  /**\n   *\n   * @param {string | string[]} s string to convert to identity\n   * @returns {string} converted identity\n   */\n\n\n  static indent(s) {\n    if (Array.isArray(s)) {\n      return s.map(Template.indent).join(\"\\n\");\n    } else {\n      const str = s.trimRight();\n      if (!str) return \"\";\n      const ind = str[0] === \"\\n\" ? \"\" : \"\\t\";\n      return ind + str.replace(/\\n([^\\n])/g, \"\\n\\t$1\");\n    }\n  }\n  /**\n   *\n   * @param {string|string[]} s string to create prefix for\n   * @param {string} prefix prefix to compose\n   * @returns {string} returns new prefix string\n   */\n\n\n  static prefix(s, prefix) {\n    const str = Template.asString(s).trim();\n    if (!str) return \"\";\n    const ind = str[0] === \"\\n\" ? \"\" : prefix;\n    return ind + str.replace(/\\n([^\\n])/g, \"\\n\" + prefix + \"$1\");\n  }\n  /**\n   *\n   * @param {string|string[]} str string or string collection\n   * @returns {string} returns a single string from array\n   */\n\n\n  static asString(str) {\n    if (Array.isArray(str)) {\n      return str.join(\"\\n\");\n    }\n\n    return str;\n  }\n  /**\n   * @typedef {Object} WithId\n   * @property {string|number} id\n   */\n\n  /**\n   * @param {WithId[]} modules a collection of modules to get array bounds for\n   * @returns {[number, number] | false} returns the upper and lower array bounds\n   * or false if not every module has a number based id\n   */\n\n\n  static getModulesArrayBounds(modules) {\n    let maxId = -Infinity;\n    let minId = Infinity;\n\n    for (const module of modules) {\n      const moduleId = module.id;\n      if (typeof moduleId !== \"number\") return false;\n      if (maxId < moduleId) maxId = moduleId;\n      if (minId > moduleId) minId = moduleId;\n    }\n\n    if (minId < 16 + (\"\" + minId).length) {\n      // add minId x ',' instead of 'Array(minId).concat(…)'\n      minId = 0;\n    } // start with -1 because the first module needs no comma\n\n\n    let objectOverhead = -1;\n\n    for (const module of modules) {\n      // module id + colon + comma\n      objectOverhead += `${module.id}`.length + 2;\n    } // number of commas, or when starting non-zero the length of Array(minId).concat()\n\n\n    const arrayOverhead = minId === 0 ? maxId : 16 + `${minId}`.length + maxId;\n    return arrayOverhead < objectOverhead ? [minId, maxId] : false;\n  }\n  /**\n   * @param {ChunkRenderContext} renderContext render context\n   * @param {Module[]} modules modules to render (should be ordered by identifier)\n   * @param {function(Module): Source} renderModule function to render a module\n   * @param {string=} prefix applying prefix strings\n   * @returns {Source} rendered chunk modules in a Source object\n   */\n\n\n  static renderChunkModules(renderContext, modules, renderModule) {\n    let prefix = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n    const {\n      chunkGraph\n    } = renderContext;\n    var source = new ConcatSource();\n\n    if (modules.length === 0) {\n      return null;\n    }\n    /** @type {{id: string|number, source: Source|string}[]} */\n\n\n    const allModules = modules.map(module => {\n      return {\n        id: chunkGraph.getModuleId(module),\n        source: renderModule(module) || \"false\"\n      };\n    });\n    const bounds = Template.getModulesArrayBounds(allModules);\n\n    if (bounds) {\n      // Render a spare array\n      const minId = bounds[0];\n      const maxId = bounds[1];\n\n      if (minId !== 0) {\n        source.add(`Array(${minId}).concat(`);\n      }\n\n      source.add(\"[\\n\");\n      /** @type {Map<string|number, {id: string|number, source: Source|string}>} */\n\n      const modules = new Map();\n\n      for (const module of allModules) {\n        modules.set(module.id, module);\n      }\n\n      for (let idx = minId; idx <= maxId; idx++) {\n        const module = modules.get(idx);\n\n        if (idx !== minId) {\n          source.add(\",\\n\");\n        }\n\n        source.add(`/* ${idx} */`);\n\n        if (module) {\n          source.add(\"\\n\");\n          source.add(module.source);\n        }\n      }\n\n      source.add(\"\\n\" + prefix + \"]\");\n\n      if (minId !== 0) {\n        source.add(\")\");\n      }\n    } else {\n      // Render an object\n      source.add(\"{\\n\");\n\n      for (let i = 0; i < allModules.length; i++) {\n        const module = allModules[i];\n\n        if (i !== 0) {\n          source.add(\",\\n\");\n        }\n\n        source.add(`\\n/***/ ${JSON.stringify(module.id)}:\\n`);\n        source.add(module.source);\n      }\n\n      source.add(`\\n\\n${prefix}}`);\n    }\n\n    return source;\n  }\n  /**\n   * @param {RuntimeModule[]} runtimeModules array of runtime modules in order\n   * @param {RenderContext & { codeGenerationResults?: CodeGenerationResults }} renderContext render context\n   * @returns {Source} rendered runtime modules in a Source object\n   */\n\n\n  static renderRuntimeModules(runtimeModules, renderContext) {\n    const source = new ConcatSource();\n\n    for (const module of runtimeModules) {\n      const codeGenerationResults = renderContext.codeGenerationResults;\n      let runtimeSource;\n\n      if (codeGenerationResults) {\n        runtimeSource = codeGenerationResults.getSource(module, renderContext.chunk.runtime, \"runtime\");\n      } else {\n        const codeGenResult = module.codeGeneration({\n          chunkGraph: renderContext.chunkGraph,\n          dependencyTemplates: renderContext.dependencyTemplates,\n          moduleGraph: renderContext.moduleGraph,\n          runtimeTemplate: renderContext.runtimeTemplate,\n          runtime: renderContext.chunk.runtime,\n          codeGenerationResults\n        });\n        if (!codeGenResult) continue;\n        runtimeSource = codeGenResult.sources.get(\"runtime\");\n      }\n\n      if (runtimeSource) {\n        source.add(Template.toNormalComment(module.identifier()) + \"\\n\");\n\n        if (!module.shouldIsolate()) {\n          source.add(runtimeSource);\n          source.add(\"\\n\\n\");\n        } else if (renderContext.runtimeTemplate.supportsArrowFunction()) {\n          source.add(\"(() => {\\n\");\n          source.add(new PrefixSource(\"\\t\", runtimeSource));\n          source.add(\"\\n})();\\n\\n\");\n        } else {\n          source.add(\"!function() {\\n\");\n          source.add(new PrefixSource(\"\\t\", runtimeSource));\n          source.add(\"\\n}();\\n\\n\");\n        }\n      }\n    }\n\n    return source;\n  }\n  /**\n   * @param {RuntimeModule[]} runtimeModules array of runtime modules in order\n   * @param {RenderContext} renderContext render context\n   * @returns {Source} rendered chunk runtime modules in a Source object\n   */\n\n\n  static renderChunkRuntimeModules(runtimeModules, renderContext) {\n    return new PrefixSource(\"/******/ \", new ConcatSource(\"function(__webpack_require__) { // webpackRuntimeModules\\n\", this.renderRuntimeModules(runtimeModules, renderContext), \"}\\n\"));\n  }\n\n}\n\nmodule.exports = Template;\nmodule.exports.NUMBER_OF_IDENTIFIER_START_CHARS = NUMBER_OF_IDENTIFIER_START_CHARS;\nmodule.exports.NUMBER_OF_IDENTIFIER_CONTINUATION_CHARS = NUMBER_OF_IDENTIFIER_CONTINUATION_CHARS;","map":{"version":3,"names":["ConcatSource","PrefixSource","require","START_LOWERCASE_ALPHABET_CODE","charCodeAt","START_UPPERCASE_ALPHABET_CODE","DELTA_A_TO_Z","NUMBER_OF_IDENTIFIER_START_CHARS","NUMBER_OF_IDENTIFIER_CONTINUATION_CHARS","FUNCTION_CONTENT_REGEX","INDENT_MULTILINE_REGEX","LINE_SEPARATOR_REGEX","IDENTIFIER_NAME_REPLACE_REGEX","IDENTIFIER_ALPHA_NUMERIC_NAME_REPLACE_REGEX","COMMENT_END_REGEX","PATH_NAME_NORMALIZE_REPLACE_REGEX","MATCH_PADDED_HYPHENS_REPLACE_REGEX","Template","getFunctionContent","fn","toString","replace","toIdentifier","str","toComment","toNormalComment","toPath","numberToIdentifier","n","numberToIdentifierContinuation","Math","floor","String","fromCharCode","indent","s","Array","isArray","map","join","trimRight","ind","prefix","asString","trim","getModulesArrayBounds","modules","maxId","Infinity","minId","module","moduleId","id","length","objectOverhead","arrayOverhead","renderChunkModules","renderContext","renderModule","chunkGraph","source","allModules","getModuleId","bounds","add","Map","set","idx","get","i","JSON","stringify","renderRuntimeModules","runtimeModules","codeGenerationResults","runtimeSource","getSource","chunk","runtime","codeGenResult","codeGeneration","dependencyTemplates","moduleGraph","runtimeTemplate","sources","identifier","shouldIsolate","supportsArrowFunction","renderChunkRuntimeModules","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/Template.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource, PrefixSource } = require(\"webpack-sources\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/WebpackOptions\").Output} OutputOptions */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./CodeGenerationResults\")} CodeGenerationResults */\n/** @typedef {import(\"./Compilation\").AssetInfo} AssetInfo */\n/** @typedef {import(\"./Compilation\").PathData} PathData */\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./ModuleTemplate\")} ModuleTemplate */\n/** @typedef {import(\"./RuntimeModule\")} RuntimeModule */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./javascript/JavascriptModulesPlugin\").ChunkRenderContext} ChunkRenderContext */\n/** @typedef {import(\"./javascript/JavascriptModulesPlugin\").RenderContext} RenderContext */\n\nconst START_LOWERCASE_ALPHABET_CODE = \"a\".charCodeAt(0);\nconst START_UPPERCASE_ALPHABET_CODE = \"A\".charCodeAt(0);\nconst DELTA_A_TO_Z = \"z\".charCodeAt(0) - START_LOWERCASE_ALPHABET_CODE + 1;\nconst NUMBER_OF_IDENTIFIER_START_CHARS = DELTA_A_TO_Z * 2 + 2; // a-z A-Z _ $\nconst NUMBER_OF_IDENTIFIER_CONTINUATION_CHARS =\n\tNUMBER_OF_IDENTIFIER_START_CHARS + 10; // a-z A-Z _ $ 0-9\nconst FUNCTION_CONTENT_REGEX = /^function\\s?\\(\\)\\s?\\{\\r?\\n?|\\r?\\n?\\}$/g;\nconst INDENT_MULTILINE_REGEX = /^\\t/gm;\nconst LINE_SEPARATOR_REGEX = /\\r?\\n/g;\nconst IDENTIFIER_NAME_REPLACE_REGEX = /^([^a-zA-Z$_])/;\nconst IDENTIFIER_ALPHA_NUMERIC_NAME_REPLACE_REGEX = /[^a-zA-Z0-9$]+/g;\nconst COMMENT_END_REGEX = /\\*\\//g;\nconst PATH_NAME_NORMALIZE_REPLACE_REGEX = /[^a-zA-Z0-9_!§$()=\\-^°]+/g;\nconst MATCH_PADDED_HYPHENS_REPLACE_REGEX = /^-|-$/g;\n\n/**\n * @typedef {Object} RenderManifestOptions\n * @property {Chunk} chunk the chunk used to render\n * @property {string} hash\n * @property {string} fullHash\n * @property {OutputOptions} outputOptions\n * @property {CodeGenerationResults} codeGenerationResults\n * @property {{javascript: ModuleTemplate}} moduleTemplates\n * @property {DependencyTemplates} dependencyTemplates\n * @property {RuntimeTemplate} runtimeTemplate\n * @property {ModuleGraph} moduleGraph\n * @property {ChunkGraph} chunkGraph\n */\n\n/** @typedef {RenderManifestEntryTemplated | RenderManifestEntryStatic} RenderManifestEntry */\n\n/**\n * @typedef {Object} RenderManifestEntryTemplated\n * @property {function(): Source} render\n * @property {string | function(PathData, AssetInfo=): string} filenameTemplate\n * @property {PathData=} pathOptions\n * @property {AssetInfo=} info\n * @property {string} identifier\n * @property {string=} hash\n * @property {boolean=} auxiliary\n */\n\n/**\n * @typedef {Object} RenderManifestEntryStatic\n * @property {function(): Source} render\n * @property {string} filename\n * @property {AssetInfo} info\n * @property {string} identifier\n * @property {string=} hash\n * @property {boolean=} auxiliary\n */\n\n/**\n * @typedef {Object} HasId\n * @property {number | string} id\n */\n\n/**\n * @typedef {function(Module, number): boolean} ModuleFilterPredicate\n */\n\nclass Template {\n\t/**\n\t *\n\t * @param {Function} fn a runtime function (.runtime.js) \"template\"\n\t * @returns {string} the updated and normalized function string\n\t */\n\tstatic getFunctionContent(fn) {\n\t\treturn fn\n\t\t\t.toString()\n\t\t\t.replace(FUNCTION_CONTENT_REGEX, \"\")\n\t\t\t.replace(INDENT_MULTILINE_REGEX, \"\")\n\t\t\t.replace(LINE_SEPARATOR_REGEX, \"\\n\");\n\t}\n\n\t/**\n\t * @param {string} str the string converted to identifier\n\t * @returns {string} created identifier\n\t */\n\tstatic toIdentifier(str) {\n\t\tif (typeof str !== \"string\") return \"\";\n\t\treturn str\n\t\t\t.replace(IDENTIFIER_NAME_REPLACE_REGEX, \"_$1\")\n\t\t\t.replace(IDENTIFIER_ALPHA_NUMERIC_NAME_REPLACE_REGEX, \"_\");\n\t}\n\t/**\n\t *\n\t * @param {string} str string to be converted to commented in bundle code\n\t * @returns {string} returns a commented version of string\n\t */\n\tstatic toComment(str) {\n\t\tif (!str) return \"\";\n\t\treturn `/*! ${str.replace(COMMENT_END_REGEX, \"* /\")} */`;\n\t}\n\n\t/**\n\t *\n\t * @param {string} str string to be converted to \"normal comment\"\n\t * @returns {string} returns a commented version of string\n\t */\n\tstatic toNormalComment(str) {\n\t\tif (!str) return \"\";\n\t\treturn `/* ${str.replace(COMMENT_END_REGEX, \"* /\")} */`;\n\t}\n\n\t/**\n\t * @param {string} str string path to be normalized\n\t * @returns {string} normalized bundle-safe path\n\t */\n\tstatic toPath(str) {\n\t\tif (typeof str !== \"string\") return \"\";\n\t\treturn str\n\t\t\t.replace(PATH_NAME_NORMALIZE_REPLACE_REGEX, \"-\")\n\t\t\t.replace(MATCH_PADDED_HYPHENS_REPLACE_REGEX, \"\");\n\t}\n\n\t// map number to a single character a-z, A-Z or multiple characters if number is too big\n\t/**\n\t * @param {number} n number to convert to ident\n\t * @returns {string} returns single character ident\n\t */\n\tstatic numberToIdentifier(n) {\n\t\tif (n >= NUMBER_OF_IDENTIFIER_START_CHARS) {\n\t\t\t// use multiple letters\n\t\t\treturn (\n\t\t\t\tTemplate.numberToIdentifier(n % NUMBER_OF_IDENTIFIER_START_CHARS) +\n\t\t\t\tTemplate.numberToIdentifierContinuation(\n\t\t\t\t\tMath.floor(n / NUMBER_OF_IDENTIFIER_START_CHARS)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t// lower case\n\t\tif (n < DELTA_A_TO_Z) {\n\t\t\treturn String.fromCharCode(START_LOWERCASE_ALPHABET_CODE + n);\n\t\t}\n\t\tn -= DELTA_A_TO_Z;\n\n\t\t// upper case\n\t\tif (n < DELTA_A_TO_Z) {\n\t\t\treturn String.fromCharCode(START_UPPERCASE_ALPHABET_CODE + n);\n\t\t}\n\n\t\tif (n === DELTA_A_TO_Z) return \"_\";\n\t\treturn \"$\";\n\t}\n\n\t/**\n\t * @param {number} n number to convert to ident\n\t * @returns {string} returns single character ident\n\t */\n\tstatic numberToIdentifierContinuation(n) {\n\t\tif (n >= NUMBER_OF_IDENTIFIER_CONTINUATION_CHARS) {\n\t\t\t// use multiple letters\n\t\t\treturn (\n\t\t\t\tTemplate.numberToIdentifierContinuation(\n\t\t\t\t\tn % NUMBER_OF_IDENTIFIER_CONTINUATION_CHARS\n\t\t\t\t) +\n\t\t\t\tTemplate.numberToIdentifierContinuation(\n\t\t\t\t\tMath.floor(n / NUMBER_OF_IDENTIFIER_CONTINUATION_CHARS)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t// lower case\n\t\tif (n < DELTA_A_TO_Z) {\n\t\t\treturn String.fromCharCode(START_LOWERCASE_ALPHABET_CODE + n);\n\t\t}\n\t\tn -= DELTA_A_TO_Z;\n\n\t\t// upper case\n\t\tif (n < DELTA_A_TO_Z) {\n\t\t\treturn String.fromCharCode(START_UPPERCASE_ALPHABET_CODE + n);\n\t\t}\n\t\tn -= DELTA_A_TO_Z;\n\n\t\t// numbers\n\t\tif (n < 10) {\n\t\t\treturn `${n}`;\n\t\t}\n\n\t\tif (n === 10) return \"_\";\n\t\treturn \"$\";\n\t}\n\n\t/**\n\t *\n\t * @param {string | string[]} s string to convert to identity\n\t * @returns {string} converted identity\n\t */\n\tstatic indent(s) {\n\t\tif (Array.isArray(s)) {\n\t\t\treturn s.map(Template.indent).join(\"\\n\");\n\t\t} else {\n\t\t\tconst str = s.trimRight();\n\t\t\tif (!str) return \"\";\n\t\t\tconst ind = str[0] === \"\\n\" ? \"\" : \"\\t\";\n\t\t\treturn ind + str.replace(/\\n([^\\n])/g, \"\\n\\t$1\");\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {string|string[]} s string to create prefix for\n\t * @param {string} prefix prefix to compose\n\t * @returns {string} returns new prefix string\n\t */\n\tstatic prefix(s, prefix) {\n\t\tconst str = Template.asString(s).trim();\n\t\tif (!str) return \"\";\n\t\tconst ind = str[0] === \"\\n\" ? \"\" : prefix;\n\t\treturn ind + str.replace(/\\n([^\\n])/g, \"\\n\" + prefix + \"$1\");\n\t}\n\n\t/**\n\t *\n\t * @param {string|string[]} str string or string collection\n\t * @returns {string} returns a single string from array\n\t */\n\tstatic asString(str) {\n\t\tif (Array.isArray(str)) {\n\t\t\treturn str.join(\"\\n\");\n\t\t}\n\t\treturn str;\n\t}\n\n\t/**\n\t * @typedef {Object} WithId\n\t * @property {string|number} id\n\t */\n\n\t/**\n\t * @param {WithId[]} modules a collection of modules to get array bounds for\n\t * @returns {[number, number] | false} returns the upper and lower array bounds\n\t * or false if not every module has a number based id\n\t */\n\tstatic getModulesArrayBounds(modules) {\n\t\tlet maxId = -Infinity;\n\t\tlet minId = Infinity;\n\t\tfor (const module of modules) {\n\t\t\tconst moduleId = module.id;\n\t\t\tif (typeof moduleId !== \"number\") return false;\n\t\t\tif (maxId < moduleId) maxId = moduleId;\n\t\t\tif (minId > moduleId) minId = moduleId;\n\t\t}\n\t\tif (minId < 16 + (\"\" + minId).length) {\n\t\t\t// add minId x ',' instead of 'Array(minId).concat(…)'\n\t\t\tminId = 0;\n\t\t}\n\t\t// start with -1 because the first module needs no comma\n\t\tlet objectOverhead = -1;\n\t\tfor (const module of modules) {\n\t\t\t// module id + colon + comma\n\t\t\tobjectOverhead += `${module.id}`.length + 2;\n\t\t}\n\t\t// number of commas, or when starting non-zero the length of Array(minId).concat()\n\t\tconst arrayOverhead = minId === 0 ? maxId : 16 + `${minId}`.length + maxId;\n\t\treturn arrayOverhead < objectOverhead ? [minId, maxId] : false;\n\t}\n\n\t/**\n\t * @param {ChunkRenderContext} renderContext render context\n\t * @param {Module[]} modules modules to render (should be ordered by identifier)\n\t * @param {function(Module): Source} renderModule function to render a module\n\t * @param {string=} prefix applying prefix strings\n\t * @returns {Source} rendered chunk modules in a Source object\n\t */\n\tstatic renderChunkModules(renderContext, modules, renderModule, prefix = \"\") {\n\t\tconst { chunkGraph } = renderContext;\n\t\tvar source = new ConcatSource();\n\t\tif (modules.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\t/** @type {{id: string|number, source: Source|string}[]} */\n\t\tconst allModules = modules.map(module => {\n\t\t\treturn {\n\t\t\t\tid: chunkGraph.getModuleId(module),\n\t\t\t\tsource: renderModule(module) || \"false\"\n\t\t\t};\n\t\t});\n\t\tconst bounds = Template.getModulesArrayBounds(allModules);\n\t\tif (bounds) {\n\t\t\t// Render a spare array\n\t\t\tconst minId = bounds[0];\n\t\t\tconst maxId = bounds[1];\n\t\t\tif (minId !== 0) {\n\t\t\t\tsource.add(`Array(${minId}).concat(`);\n\t\t\t}\n\t\t\tsource.add(\"[\\n\");\n\t\t\t/** @type {Map<string|number, {id: string|number, source: Source|string}>} */\n\t\t\tconst modules = new Map();\n\t\t\tfor (const module of allModules) {\n\t\t\t\tmodules.set(module.id, module);\n\t\t\t}\n\t\t\tfor (let idx = minId; idx <= maxId; idx++) {\n\t\t\t\tconst module = modules.get(idx);\n\t\t\t\tif (idx !== minId) {\n\t\t\t\t\tsource.add(\",\\n\");\n\t\t\t\t}\n\t\t\t\tsource.add(`/* ${idx} */`);\n\t\t\t\tif (module) {\n\t\t\t\t\tsource.add(\"\\n\");\n\t\t\t\t\tsource.add(module.source);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource.add(\"\\n\" + prefix + \"]\");\n\t\t\tif (minId !== 0) {\n\t\t\t\tsource.add(\")\");\n\t\t\t}\n\t\t} else {\n\t\t\t// Render an object\n\t\t\tsource.add(\"{\\n\");\n\t\t\tfor (let i = 0; i < allModules.length; i++) {\n\t\t\t\tconst module = allModules[i];\n\t\t\t\tif (i !== 0) {\n\t\t\t\t\tsource.add(\",\\n\");\n\t\t\t\t}\n\t\t\t\tsource.add(`\\n/***/ ${JSON.stringify(module.id)}:\\n`);\n\t\t\t\tsource.add(module.source);\n\t\t\t}\n\t\t\tsource.add(`\\n\\n${prefix}}`);\n\t\t}\n\t\treturn source;\n\t}\n\n\t/**\n\t * @param {RuntimeModule[]} runtimeModules array of runtime modules in order\n\t * @param {RenderContext & { codeGenerationResults?: CodeGenerationResults }} renderContext render context\n\t * @returns {Source} rendered runtime modules in a Source object\n\t */\n\tstatic renderRuntimeModules(runtimeModules, renderContext) {\n\t\tconst source = new ConcatSource();\n\t\tfor (const module of runtimeModules) {\n\t\t\tconst codeGenerationResults = renderContext.codeGenerationResults;\n\t\t\tlet runtimeSource;\n\t\t\tif (codeGenerationResults) {\n\t\t\t\truntimeSource = codeGenerationResults.getSource(\n\t\t\t\t\tmodule,\n\t\t\t\t\trenderContext.chunk.runtime,\n\t\t\t\t\t\"runtime\"\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconst codeGenResult = module.codeGeneration({\n\t\t\t\t\tchunkGraph: renderContext.chunkGraph,\n\t\t\t\t\tdependencyTemplates: renderContext.dependencyTemplates,\n\t\t\t\t\tmoduleGraph: renderContext.moduleGraph,\n\t\t\t\t\truntimeTemplate: renderContext.runtimeTemplate,\n\t\t\t\t\truntime: renderContext.chunk.runtime,\n\t\t\t\t\tcodeGenerationResults\n\t\t\t\t});\n\t\t\t\tif (!codeGenResult) continue;\n\t\t\t\truntimeSource = codeGenResult.sources.get(\"runtime\");\n\t\t\t}\n\t\t\tif (runtimeSource) {\n\t\t\t\tsource.add(Template.toNormalComment(module.identifier()) + \"\\n\");\n\t\t\t\tif (!module.shouldIsolate()) {\n\t\t\t\t\tsource.add(runtimeSource);\n\t\t\t\t\tsource.add(\"\\n\\n\");\n\t\t\t\t} else if (renderContext.runtimeTemplate.supportsArrowFunction()) {\n\t\t\t\t\tsource.add(\"(() => {\\n\");\n\t\t\t\t\tsource.add(new PrefixSource(\"\\t\", runtimeSource));\n\t\t\t\t\tsource.add(\"\\n})();\\n\\n\");\n\t\t\t\t} else {\n\t\t\t\t\tsource.add(\"!function() {\\n\");\n\t\t\t\t\tsource.add(new PrefixSource(\"\\t\", runtimeSource));\n\t\t\t\t\tsource.add(\"\\n}();\\n\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn source;\n\t}\n\n\t/**\n\t * @param {RuntimeModule[]} runtimeModules array of runtime modules in order\n\t * @param {RenderContext} renderContext render context\n\t * @returns {Source} rendered chunk runtime modules in a Source object\n\t */\n\tstatic renderChunkRuntimeModules(runtimeModules, renderContext) {\n\t\treturn new PrefixSource(\n\t\t\t\"/******/ \",\n\t\t\tnew ConcatSource(\n\t\t\t\t\"function(__webpack_require__) { // webpackRuntimeModules\\n\",\n\t\t\t\tthis.renderRuntimeModules(runtimeModules, renderContext),\n\t\t\t\t\"}\\n\"\n\t\t\t)\n\t\t);\n\t}\n}\n\nmodule.exports = Template;\nmodule.exports.NUMBER_OF_IDENTIFIER_START_CHARS =\n\tNUMBER_OF_IDENTIFIER_START_CHARS;\nmodule.exports.NUMBER_OF_IDENTIFIER_CONTINUATION_CHARS =\n\tNUMBER_OF_IDENTIFIER_CONTINUATION_CHARS;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAM;EAAEA,YAAF;EAAgBC;AAAhB,IAAiCC,OAAO,CAAC,iBAAD,CAA9C;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAEA,MAAMC,6BAA6B,GAAG,IAAIC,UAAJ,CAAe,CAAf,CAAtC;AACA,MAAMC,6BAA6B,GAAG,IAAID,UAAJ,CAAe,CAAf,CAAtC;AACA,MAAME,YAAY,GAAG,IAAIF,UAAJ,CAAe,CAAf,IAAoBD,6BAApB,GAAoD,CAAzE;AACA,MAAMI,gCAAgC,GAAGD,YAAY,GAAG,CAAf,GAAmB,CAA5D,C,CAA+D;;AAC/D,MAAME,uCAAuC,GAC5CD,gCAAgC,GAAG,EADpC,C,CACwC;;AACxC,MAAME,sBAAsB,GAAG,wCAA/B;AACA,MAAMC,sBAAsB,GAAG,OAA/B;AACA,MAAMC,oBAAoB,GAAG,QAA7B;AACA,MAAMC,6BAA6B,GAAG,gBAAtC;AACA,MAAMC,2CAA2C,GAAG,iBAApD;AACA,MAAMC,iBAAiB,GAAG,OAA1B;AACA,MAAMC,iCAAiC,GAAG,2BAA1C;AACA,MAAMC,kCAAkC,GAAG,QAA3C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAMC,QAAN,CAAe;EACd;AACD;AACA;AACA;AACA;EAC0B,OAAlBC,kBAAkB,CAACC,EAAD,EAAK;IAC7B,OAAOA,EAAE,CACPC,QADK,GAELC,OAFK,CAEGZ,sBAFH,EAE2B,EAF3B,EAGLY,OAHK,CAGGX,sBAHH,EAG2B,EAH3B,EAILW,OAJK,CAIGV,oBAJH,EAIyB,IAJzB,CAAP;EAKA;EAED;AACD;AACA;AACA;;;EACoB,OAAZW,YAAY,CAACC,GAAD,EAAM;IACxB,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B,OAAO,EAAP;IAC7B,OAAOA,GAAG,CACRF,OADK,CACGT,6BADH,EACkC,KADlC,EAELS,OAFK,CAEGR,2CAFH,EAEgD,GAFhD,CAAP;EAGA;EACD;AACD;AACA;AACA;AACA;;;EACiB,OAATW,SAAS,CAACD,GAAD,EAAM;IACrB,IAAI,CAACA,GAAL,EAAU,OAAO,EAAP;IACV,OAAQ,OAAMA,GAAG,CAACF,OAAJ,CAAYP,iBAAZ,EAA+B,KAA/B,CAAsC,KAApD;EACA;EAED;AACD;AACA;AACA;AACA;;;EACuB,OAAfW,eAAe,CAACF,GAAD,EAAM;IAC3B,IAAI,CAACA,GAAL,EAAU,OAAO,EAAP;IACV,OAAQ,MAAKA,GAAG,CAACF,OAAJ,CAAYP,iBAAZ,EAA+B,KAA/B,CAAsC,KAAnD;EACA;EAED;AACD;AACA;AACA;;;EACc,OAANY,MAAM,CAACH,GAAD,EAAM;IAClB,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B,OAAO,EAAP;IAC7B,OAAOA,GAAG,CACRF,OADK,CACGN,iCADH,EACsC,GADtC,EAELM,OAFK,CAEGL,kCAFH,EAEuC,EAFvC,CAAP;EAGA,CArDa,CAuDd;;EACA;AACD;AACA;AACA;;;EAC0B,OAAlBW,kBAAkB,CAACC,CAAD,EAAI;IAC5B,IAAIA,CAAC,IAAIrB,gCAAT,EAA2C;MAC1C;MACA,OACCU,QAAQ,CAACU,kBAAT,CAA4BC,CAAC,GAAGrB,gCAAhC,IACAU,QAAQ,CAACY,8BAAT,CACCC,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAGrB,gCAAf,CADD,CAFD;IAMA,CAT2B,CAW5B;;;IACA,IAAIqB,CAAC,GAAGtB,YAAR,EAAsB;MACrB,OAAO0B,MAAM,CAACC,YAAP,CAAoB9B,6BAA6B,GAAGyB,CAApD,CAAP;IACA;;IACDA,CAAC,IAAItB,YAAL,CAf4B,CAiB5B;;IACA,IAAIsB,CAAC,GAAGtB,YAAR,EAAsB;MACrB,OAAO0B,MAAM,CAACC,YAAP,CAAoB5B,6BAA6B,GAAGuB,CAApD,CAAP;IACA;;IAED,IAAIA,CAAC,KAAKtB,YAAV,EAAwB,OAAO,GAAP;IACxB,OAAO,GAAP;EACA;EAED;AACD;AACA;AACA;;;EACsC,OAA9BuB,8BAA8B,CAACD,CAAD,EAAI;IACxC,IAAIA,CAAC,IAAIpB,uCAAT,EAAkD;MACjD;MACA,OACCS,QAAQ,CAACY,8BAAT,CACCD,CAAC,GAAGpB,uCADL,IAGAS,QAAQ,CAACY,8BAAT,CACCC,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAGpB,uCAAf,CADD,CAJD;IAQA,CAXuC,CAaxC;;;IACA,IAAIoB,CAAC,GAAGtB,YAAR,EAAsB;MACrB,OAAO0B,MAAM,CAACC,YAAP,CAAoB9B,6BAA6B,GAAGyB,CAApD,CAAP;IACA;;IACDA,CAAC,IAAItB,YAAL,CAjBwC,CAmBxC;;IACA,IAAIsB,CAAC,GAAGtB,YAAR,EAAsB;MACrB,OAAO0B,MAAM,CAACC,YAAP,CAAoB5B,6BAA6B,GAAGuB,CAApD,CAAP;IACA;;IACDA,CAAC,IAAItB,YAAL,CAvBwC,CAyBxC;;IACA,IAAIsB,CAAC,GAAG,EAAR,EAAY;MACX,OAAQ,GAAEA,CAAE,EAAZ;IACA;;IAED,IAAIA,CAAC,KAAK,EAAV,EAAc,OAAO,GAAP;IACd,OAAO,GAAP;EACA;EAED;AACD;AACA;AACA;AACA;;;EACc,OAANM,MAAM,CAACC,CAAD,EAAI;IAChB,IAAIC,KAAK,CAACC,OAAN,CAAcF,CAAd,CAAJ,EAAsB;MACrB,OAAOA,CAAC,CAACG,GAAF,CAAMrB,QAAQ,CAACiB,MAAf,EAAuBK,IAAvB,CAA4B,IAA5B,CAAP;IACA,CAFD,MAEO;MACN,MAAMhB,GAAG,GAAGY,CAAC,CAACK,SAAF,EAAZ;MACA,IAAI,CAACjB,GAAL,EAAU,OAAO,EAAP;MACV,MAAMkB,GAAG,GAAGlB,GAAG,CAAC,CAAD,CAAH,KAAW,IAAX,GAAkB,EAAlB,GAAuB,IAAnC;MACA,OAAOkB,GAAG,GAAGlB,GAAG,CAACF,OAAJ,CAAY,YAAZ,EAA0B,QAA1B,CAAb;IACA;EACD;EAED;AACD;AACA;AACA;AACA;AACA;;;EACc,OAANqB,MAAM,CAACP,CAAD,EAAIO,MAAJ,EAAY;IACxB,MAAMnB,GAAG,GAAGN,QAAQ,CAAC0B,QAAT,CAAkBR,CAAlB,EAAqBS,IAArB,EAAZ;IACA,IAAI,CAACrB,GAAL,EAAU,OAAO,EAAP;IACV,MAAMkB,GAAG,GAAGlB,GAAG,CAAC,CAAD,CAAH,KAAW,IAAX,GAAkB,EAAlB,GAAuBmB,MAAnC;IACA,OAAOD,GAAG,GAAGlB,GAAG,CAACF,OAAJ,CAAY,YAAZ,EAA0B,OAAOqB,MAAP,GAAgB,IAA1C,CAAb;EACA;EAED;AACD;AACA;AACA;AACA;;;EACgB,OAARC,QAAQ,CAACpB,GAAD,EAAM;IACpB,IAAIa,KAAK,CAACC,OAAN,CAAcd,GAAd,CAAJ,EAAwB;MACvB,OAAOA,GAAG,CAACgB,IAAJ,CAAS,IAAT,CAAP;IACA;;IACD,OAAOhB,GAAP;EACA;EAED;AACD;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;;;EAC6B,OAArBsB,qBAAqB,CAACC,OAAD,EAAU;IACrC,IAAIC,KAAK,GAAG,CAACC,QAAb;IACA,IAAIC,KAAK,GAAGD,QAAZ;;IACA,KAAK,MAAME,MAAX,IAAqBJ,OAArB,EAA8B;MAC7B,MAAMK,QAAQ,GAAGD,MAAM,CAACE,EAAxB;MACA,IAAI,OAAOD,QAAP,KAAoB,QAAxB,EAAkC,OAAO,KAAP;MAClC,IAAIJ,KAAK,GAAGI,QAAZ,EAAsBJ,KAAK,GAAGI,QAAR;MACtB,IAAIF,KAAK,GAAGE,QAAZ,EAAsBF,KAAK,GAAGE,QAAR;IACtB;;IACD,IAAIF,KAAK,GAAG,KAAK,CAAC,KAAKA,KAAN,EAAaI,MAA9B,EAAsC;MACrC;MACAJ,KAAK,GAAG,CAAR;IACA,CAZoC,CAarC;;;IACA,IAAIK,cAAc,GAAG,CAAC,CAAtB;;IACA,KAAK,MAAMJ,MAAX,IAAqBJ,OAArB,EAA8B;MAC7B;MACAQ,cAAc,IAAK,GAAEJ,MAAM,CAACE,EAAG,EAAb,CAAeC,MAAf,GAAwB,CAA1C;IACA,CAlBoC,CAmBrC;;;IACA,MAAME,aAAa,GAAGN,KAAK,KAAK,CAAV,GAAcF,KAAd,GAAsB,KAAM,GAAEE,KAAM,EAAT,CAAWI,MAAhB,GAAyBN,KAArE;IACA,OAAOQ,aAAa,GAAGD,cAAhB,GAAiC,CAACL,KAAD,EAAQF,KAAR,CAAjC,GAAkD,KAAzD;EACA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;;;EAC0B,OAAlBS,kBAAkB,CAACC,aAAD,EAAgBX,OAAhB,EAAyBY,YAAzB,EAAoD;IAAA,IAAbhB,MAAa,uEAAJ,EAAI;IAC5E,MAAM;MAAEiB;IAAF,IAAiBF,aAAvB;IACA,IAAIG,MAAM,GAAG,IAAI5D,YAAJ,EAAb;;IACA,IAAI8C,OAAO,CAACO,MAAR,KAAmB,CAAvB,EAA0B;MACzB,OAAO,IAAP;IACA;IACD;;;IACA,MAAMQ,UAAU,GAAGf,OAAO,CAACR,GAAR,CAAYY,MAAM,IAAI;MACxC,OAAO;QACNE,EAAE,EAAEO,UAAU,CAACG,WAAX,CAAuBZ,MAAvB,CADE;QAENU,MAAM,EAAEF,YAAY,CAACR,MAAD,CAAZ,IAAwB;MAF1B,CAAP;IAIA,CALkB,CAAnB;IAMA,MAAMa,MAAM,GAAG9C,QAAQ,CAAC4B,qBAAT,CAA+BgB,UAA/B,CAAf;;IACA,IAAIE,MAAJ,EAAY;MACX;MACA,MAAMd,KAAK,GAAGc,MAAM,CAAC,CAAD,CAApB;MACA,MAAMhB,KAAK,GAAGgB,MAAM,CAAC,CAAD,CAApB;;MACA,IAAId,KAAK,KAAK,CAAd,EAAiB;QAChBW,MAAM,CAACI,GAAP,CAAY,SAAQf,KAAM,WAA1B;MACA;;MACDW,MAAM,CAACI,GAAP,CAAW,KAAX;MACA;;MACA,MAAMlB,OAAO,GAAG,IAAImB,GAAJ,EAAhB;;MACA,KAAK,MAAMf,MAAX,IAAqBW,UAArB,EAAiC;QAChCf,OAAO,CAACoB,GAAR,CAAYhB,MAAM,CAACE,EAAnB,EAAuBF,MAAvB;MACA;;MACD,KAAK,IAAIiB,GAAG,GAAGlB,KAAf,EAAsBkB,GAAG,IAAIpB,KAA7B,EAAoCoB,GAAG,EAAvC,EAA2C;QAC1C,MAAMjB,MAAM,GAAGJ,OAAO,CAACsB,GAAR,CAAYD,GAAZ,CAAf;;QACA,IAAIA,GAAG,KAAKlB,KAAZ,EAAmB;UAClBW,MAAM,CAACI,GAAP,CAAW,KAAX;QACA;;QACDJ,MAAM,CAACI,GAAP,CAAY,MAAKG,GAAI,KAArB;;QACA,IAAIjB,MAAJ,EAAY;UACXU,MAAM,CAACI,GAAP,CAAW,IAAX;UACAJ,MAAM,CAACI,GAAP,CAAWd,MAAM,CAACU,MAAlB;QACA;MACD;;MACDA,MAAM,CAACI,GAAP,CAAW,OAAOtB,MAAP,GAAgB,GAA3B;;MACA,IAAIO,KAAK,KAAK,CAAd,EAAiB;QAChBW,MAAM,CAACI,GAAP,CAAW,GAAX;MACA;IACD,CA5BD,MA4BO;MACN;MACAJ,MAAM,CAACI,GAAP,CAAW,KAAX;;MACA,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,UAAU,CAACR,MAA/B,EAAuCgB,CAAC,EAAxC,EAA4C;QAC3C,MAAMnB,MAAM,GAAGW,UAAU,CAACQ,CAAD,CAAzB;;QACA,IAAIA,CAAC,KAAK,CAAV,EAAa;UACZT,MAAM,CAACI,GAAP,CAAW,KAAX;QACA;;QACDJ,MAAM,CAACI,GAAP,CAAY,WAAUM,IAAI,CAACC,SAAL,CAAerB,MAAM,CAACE,EAAtB,CAA0B,KAAhD;QACAQ,MAAM,CAACI,GAAP,CAAWd,MAAM,CAACU,MAAlB;MACA;;MACDA,MAAM,CAACI,GAAP,CAAY,OAAMtB,MAAO,GAAzB;IACA;;IACD,OAAOkB,MAAP;EACA;EAED;AACD;AACA;AACA;AACA;;;EAC4B,OAApBY,oBAAoB,CAACC,cAAD,EAAiBhB,aAAjB,EAAgC;IAC1D,MAAMG,MAAM,GAAG,IAAI5D,YAAJ,EAAf;;IACA,KAAK,MAAMkD,MAAX,IAAqBuB,cAArB,EAAqC;MACpC,MAAMC,qBAAqB,GAAGjB,aAAa,CAACiB,qBAA5C;MACA,IAAIC,aAAJ;;MACA,IAAID,qBAAJ,EAA2B;QAC1BC,aAAa,GAAGD,qBAAqB,CAACE,SAAtB,CACf1B,MADe,EAEfO,aAAa,CAACoB,KAAd,CAAoBC,OAFL,EAGf,SAHe,CAAhB;MAKA,CAND,MAMO;QACN,MAAMC,aAAa,GAAG7B,MAAM,CAAC8B,cAAP,CAAsB;UAC3CrB,UAAU,EAAEF,aAAa,CAACE,UADiB;UAE3CsB,mBAAmB,EAAExB,aAAa,CAACwB,mBAFQ;UAG3CC,WAAW,EAAEzB,aAAa,CAACyB,WAHgB;UAI3CC,eAAe,EAAE1B,aAAa,CAAC0B,eAJY;UAK3CL,OAAO,EAAErB,aAAa,CAACoB,KAAd,CAAoBC,OALc;UAM3CJ;QAN2C,CAAtB,CAAtB;QAQA,IAAI,CAACK,aAAL,EAAoB;QACpBJ,aAAa,GAAGI,aAAa,CAACK,OAAd,CAAsBhB,GAAtB,CAA0B,SAA1B,CAAhB;MACA;;MACD,IAAIO,aAAJ,EAAmB;QAClBf,MAAM,CAACI,GAAP,CAAW/C,QAAQ,CAACQ,eAAT,CAAyByB,MAAM,CAACmC,UAAP,EAAzB,IAAgD,IAA3D;;QACA,IAAI,CAACnC,MAAM,CAACoC,aAAP,EAAL,EAA6B;UAC5B1B,MAAM,CAACI,GAAP,CAAWW,aAAX;UACAf,MAAM,CAACI,GAAP,CAAW,MAAX;QACA,CAHD,MAGO,IAAIP,aAAa,CAAC0B,eAAd,CAA8BI,qBAA9B,EAAJ,EAA2D;UACjE3B,MAAM,CAACI,GAAP,CAAW,YAAX;UACAJ,MAAM,CAACI,GAAP,CAAW,IAAI/D,YAAJ,CAAiB,IAAjB,EAAuB0E,aAAvB,CAAX;UACAf,MAAM,CAACI,GAAP,CAAW,aAAX;QACA,CAJM,MAIA;UACNJ,MAAM,CAACI,GAAP,CAAW,iBAAX;UACAJ,MAAM,CAACI,GAAP,CAAW,IAAI/D,YAAJ,CAAiB,IAAjB,EAAuB0E,aAAvB,CAAX;UACAf,MAAM,CAACI,GAAP,CAAW,YAAX;QACA;MACD;IACD;;IACD,OAAOJ,MAAP;EACA;EAED;AACD;AACA;AACA;AACA;;;EACiC,OAAzB4B,yBAAyB,CAACf,cAAD,EAAiBhB,aAAjB,EAAgC;IAC/D,OAAO,IAAIxD,YAAJ,CACN,WADM,EAEN,IAAID,YAAJ,CACC,4DADD,EAEC,KAAKwE,oBAAL,CAA0BC,cAA1B,EAA0ChB,aAA1C,CAFD,EAGC,KAHD,CAFM,CAAP;EAQA;;AArUa;;AAwUfP,MAAM,CAACuC,OAAP,GAAiBxE,QAAjB;AACAiC,MAAM,CAACuC,OAAP,CAAelF,gCAAf,GACCA,gCADD;AAEA2C,MAAM,CAACuC,OAAP,CAAejF,uCAAf,GACCA,uCADD"},"metadata":{},"sourceType":"script"}