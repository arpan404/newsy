{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst parseJson = require(\"json-parse-even-better-errors\");\n\nconst {\n  getContext,\n  runLoaders\n} = require(\"loader-runner\");\n\nconst querystring = require(\"querystring\");\n\nconst {\n  HookMap,\n  SyncHook,\n  AsyncSeriesBailHook\n} = require(\"tapable\");\n\nconst {\n  CachedSource,\n  OriginalSource,\n  RawSource,\n  SourceMapSource\n} = require(\"webpack-sources\");\n\nconst Compilation = require(\"./Compilation\");\n\nconst HookWebpackError = require(\"./HookWebpackError\");\n\nconst Module = require(\"./Module\");\n\nconst ModuleBuildError = require(\"./ModuleBuildError\");\n\nconst ModuleError = require(\"./ModuleError\");\n\nconst ModuleGraphConnection = require(\"./ModuleGraphConnection\");\n\nconst ModuleParseError = require(\"./ModuleParseError\");\n\nconst ModuleWarning = require(\"./ModuleWarning\");\n\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\n\nconst UnhandledSchemeError = require(\"./UnhandledSchemeError\");\n\nconst WebpackError = require(\"./WebpackError\");\n\nconst formatLocation = require(\"./formatLocation\");\n\nconst LazySet = require(\"./util/LazySet\");\n\nconst {\n  isSubset\n} = require(\"./util/SetHelpers\");\n\nconst {\n  getScheme\n} = require(\"./util/URLAbsoluteSpecifier\");\n\nconst {\n  compareLocations,\n  concatComparators,\n  compareSelect,\n  keepOriginalOrder\n} = require(\"./util/comparators\");\n\nconst createHash = require(\"./util/createHash\");\n\nconst {\n  createFakeHook\n} = require(\"./util/deprecation\");\n\nconst {\n  join\n} = require(\"./util/fs\");\n\nconst {\n  contextify,\n  absolutify,\n  makePathsRelative\n} = require(\"./util/identifier\");\n\nconst makeSerializable = require(\"./util/makeSerializable\");\n\nconst memoize = require(\"./util/memoize\");\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"../declarations/LoaderContext\").NormalModuleLoaderContext} NormalModuleLoaderContext */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").Mode} Mode */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n\n/** @typedef {import(\"./Generator\")} Generator */\n\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n\n/** @typedef {import(\"./Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n\n/** @typedef {import(\"./Module\").LibIdentOptions} LibIdentOptions */\n\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"./ModuleGraphConnection\").ConnectionState} ConnectionState */\n\n/** @typedef {import(\"./NormalModuleFactory\")} NormalModuleFactory */\n\n/** @typedef {import(\"./Parser\")} Parser */\n\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n\n/** @typedef {import(\"./logging/Logger\").Logger} WebpackLogger */\n\n/** @typedef {import(\"./util/Hash\")} Hash */\n\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @typedef {Object} SourceMap\n * @property {number} version\n * @property {string[]} sources\n * @property {string} mappings\n * @property {string=} file\n * @property {string=} sourceRoot\n * @property {string[]=} sourcesContent\n * @property {string[]=} names\n */\n\n\nconst getInvalidDependenciesModuleWarning = memoize(() => require(\"./InvalidDependenciesModuleWarning\"));\nconst getValidate = memoize(() => require(\"schema-utils\").validate);\nconst ABSOLUTE_PATH_REGEX = /^([a-zA-Z]:\\\\|\\\\\\\\|\\/)/;\n/**\n * @typedef {Object} LoaderItem\n * @property {string} loader\n * @property {any} options\n * @property {string?} ident\n * @property {string?} type\n */\n\n/**\n * @param {string} context absolute context path\n * @param {string} source a source path\n * @param {Object=} associatedObjectForCache an object to which the cache will be attached\n * @returns {string} new source path\n */\n\nconst contextifySourceUrl = (context, source, associatedObjectForCache) => {\n  if (source.startsWith(\"webpack://\")) return source;\n  return `webpack://${makePathsRelative(context, source, associatedObjectForCache)}`;\n};\n/**\n * @param {string} context absolute context path\n * @param {SourceMap} sourceMap a source map\n * @param {Object=} associatedObjectForCache an object to which the cache will be attached\n * @returns {SourceMap} new source map\n */\n\n\nconst contextifySourceMap = (context, sourceMap, associatedObjectForCache) => {\n  if (!Array.isArray(sourceMap.sources)) return sourceMap;\n  const {\n    sourceRoot\n  } = sourceMap;\n  /** @type {function(string): string} */\n\n  const mapper = !sourceRoot ? source => source : sourceRoot.endsWith(\"/\") ? source => source.startsWith(\"/\") ? `${sourceRoot.slice(0, -1)}${source}` : `${sourceRoot}${source}` : source => source.startsWith(\"/\") ? `${sourceRoot}${source}` : `${sourceRoot}/${source}`;\n  const newSources = sourceMap.sources.map(source => contextifySourceUrl(context, mapper(source), associatedObjectForCache));\n  return { ...sourceMap,\n    file: \"x\",\n    sourceRoot: undefined,\n    sources: newSources\n  };\n};\n/**\n * @param {string | Buffer} input the input\n * @returns {string} the converted string\n */\n\n\nconst asString = input => {\n  if (Buffer.isBuffer(input)) {\n    return input.toString(\"utf-8\");\n  }\n\n  return input;\n};\n/**\n * @param {string | Buffer} input the input\n * @returns {Buffer} the converted buffer\n */\n\n\nconst asBuffer = input => {\n  if (!Buffer.isBuffer(input)) {\n    return Buffer.from(input, \"utf-8\");\n  }\n\n  return input;\n};\n\nclass NonErrorEmittedError extends WebpackError {\n  constructor(error) {\n    super();\n    this.name = \"NonErrorEmittedError\";\n    this.message = \"(Emitted value instead of an instance of Error) \" + error;\n  }\n\n}\n\nmakeSerializable(NonErrorEmittedError, \"webpack/lib/NormalModule\", \"NonErrorEmittedError\");\n/**\n * @typedef {Object} NormalModuleCompilationHooks\n * @property {SyncHook<[object, NormalModule]>} loader\n * @property {SyncHook<[LoaderItem[], NormalModule, object]>} beforeLoaders\n * @property {SyncHook<[NormalModule]>} beforeParse\n * @property {SyncHook<[NormalModule]>} beforeSnapshot\n * @property {HookMap<AsyncSeriesBailHook<[string, NormalModule], string | Buffer>>} readResourceForScheme\n * @property {HookMap<AsyncSeriesBailHook<[object], string | Buffer>>} readResource\n * @property {AsyncSeriesBailHook<[NormalModule, NeedBuildContext], boolean>} needBuild\n */\n\n/**\n * @typedef {Object} NormalModuleCreateData\n * @property {string=} layer an optional layer in which the module is\n * @property {string} type module type\n * @property {string} request request string\n * @property {string} userRequest request intended by user (without loaders from config)\n * @property {string} rawRequest request without resolving\n * @property {LoaderItem[]} loaders list of loaders\n * @property {string} resource path + query of the real resource\n * @property {Record<string, any>=} resourceResolveData resource resolve data\n * @property {string} context context directory for resolving\n * @property {string=} matchResource path + query of the matched resource (virtual)\n * @property {Parser} parser the parser used\n * @property {Record<string, any>=} parserOptions the options of the parser used\n * @property {Generator} generator the generator used\n * @property {Record<string, any>=} generatorOptions the options of the generator used\n * @property {ResolveOptions=} resolveOptions options used for resolving requests from this module\n */\n\n/** @type {WeakMap<Compilation, NormalModuleCompilationHooks>} */\n\nconst compilationHooksMap = new WeakMap();\n\nclass NormalModule extends Module {\n  /**\n   * @param {Compilation} compilation the compilation\n   * @returns {NormalModuleCompilationHooks} the attached hooks\n   */\n  static getCompilationHooks(compilation) {\n    if (!(compilation instanceof Compilation)) {\n      throw new TypeError(\"The 'compilation' argument must be an instance of Compilation\");\n    }\n\n    let hooks = compilationHooksMap.get(compilation);\n\n    if (hooks === undefined) {\n      hooks = {\n        loader: new SyncHook([\"loaderContext\", \"module\"]),\n        beforeLoaders: new SyncHook([\"loaders\", \"module\", \"loaderContext\"]),\n        beforeParse: new SyncHook([\"module\"]),\n        beforeSnapshot: new SyncHook([\"module\"]),\n        // TODO webpack 6 deprecate\n        readResourceForScheme: new HookMap(scheme => {\n          const hook = hooks.readResource.for(scheme);\n          return createFakeHook(\n          /** @type {AsyncSeriesBailHook<[string, NormalModule], string | Buffer>} */\n          {\n            tap: (options, fn) => hook.tap(options, loaderContext => fn(loaderContext.resource, loaderContext._module)),\n            tapAsync: (options, fn) => hook.tapAsync(options, (loaderContext, callback) => fn(loaderContext.resource, loaderContext._module, callback)),\n            tapPromise: (options, fn) => hook.tapPromise(options, loaderContext => fn(loaderContext.resource, loaderContext._module))\n          });\n        }),\n        readResource: new HookMap(() => new AsyncSeriesBailHook([\"loaderContext\"])),\n        needBuild: new AsyncSeriesBailHook([\"module\", \"context\"])\n      };\n      compilationHooksMap.set(compilation, hooks);\n    }\n\n    return hooks;\n  }\n  /**\n   * @param {NormalModuleCreateData} options options object\n   */\n\n\n  constructor(_ref) {\n    let {\n      layer,\n      type,\n      request,\n      userRequest,\n      rawRequest,\n      loaders,\n      resource,\n      resourceResolveData,\n      context,\n      matchResource,\n      parser,\n      parserOptions,\n      generator,\n      generatorOptions,\n      resolveOptions\n    } = _ref;\n    super(type, context || getContext(resource), layer); // Info from Factory\n\n    /** @type {string} */\n\n    this.request = request;\n    /** @type {string} */\n\n    this.userRequest = userRequest;\n    /** @type {string} */\n\n    this.rawRequest = rawRequest;\n    /** @type {boolean} */\n\n    this.binary = /^(asset|webassembly)\\b/.test(type);\n    /** @type {Parser} */\n\n    this.parser = parser;\n    this.parserOptions = parserOptions;\n    /** @type {Generator} */\n\n    this.generator = generator;\n    this.generatorOptions = generatorOptions;\n    /** @type {string} */\n\n    this.resource = resource;\n    this.resourceResolveData = resourceResolveData;\n    /** @type {string | undefined} */\n\n    this.matchResource = matchResource;\n    /** @type {LoaderItem[]} */\n\n    this.loaders = loaders;\n\n    if (resolveOptions !== undefined) {\n      // already declared in super class\n      this.resolveOptions = resolveOptions;\n    } // Info from Build\n\n    /** @type {(WebpackError | null)=} */\n\n\n    this.error = null;\n    /** @private @type {Source=} */\n\n    this._source = null;\n    /** @private @type {Map<string, number> | undefined} **/\n\n    this._sourceSizes = undefined;\n    /** @private @type {Set<string>} */\n\n    this._sourceTypes = undefined; // Cache\n\n    this._lastSuccessfulBuildMeta = {};\n    this._forceBuild = true;\n    this._isEvaluatingSideEffects = false;\n    /** @type {WeakSet<ModuleGraph> | undefined} */\n\n    this._addedSideEffectsBailout = undefined;\n  }\n  /**\n   * @returns {string} a unique identifier of the module\n   */\n\n\n  identifier() {\n    if (this.layer === null) {\n      if (this.type === \"javascript/auto\") {\n        return this.request;\n      } else {\n        return `${this.type}|${this.request}`;\n      }\n    } else {\n      return `${this.type}|${this.request}|${this.layer}`;\n    }\n  }\n  /**\n   * @param {RequestShortener} requestShortener the request shortener\n   * @returns {string} a user readable identifier of the module\n   */\n\n\n  readableIdentifier(requestShortener) {\n    return requestShortener.shorten(this.userRequest);\n  }\n  /**\n   * @param {LibIdentOptions} options options\n   * @returns {string | null} an identifier for library inclusion\n   */\n\n\n  libIdent(options) {\n    let ident = contextify(options.context, this.userRequest, options.associatedObjectForCache);\n    if (this.layer) ident = `(${this.layer})/${ident}`;\n    return ident;\n  }\n  /**\n   * @returns {string | null} absolute path which should be used for condition matching (usually the resource path)\n   */\n\n\n  nameForCondition() {\n    const resource = this.matchResource || this.resource;\n    const idx = resource.indexOf(\"?\");\n    if (idx >= 0) return resource.slice(0, idx);\n    return resource;\n  }\n  /**\n   * Assuming this module is in the cache. Update the (cached) module with\n   * the fresh module from the factory. Usually updates internal references\n   * and properties.\n   * @param {Module} module fresh module\n   * @returns {void}\n   */\n\n\n  updateCacheModule(module) {\n    super.updateCacheModule(module);\n    const m =\n    /** @type {NormalModule} */\n    module;\n    this.binary = m.binary;\n    this.request = m.request;\n    this.userRequest = m.userRequest;\n    this.rawRequest = m.rawRequest;\n    this.parser = m.parser;\n    this.parserOptions = m.parserOptions;\n    this.generator = m.generator;\n    this.generatorOptions = m.generatorOptions;\n    this.resource = m.resource;\n    this.resourceResolveData = m.resourceResolveData;\n    this.context = m.context;\n    this.matchResource = m.matchResource;\n    this.loaders = m.loaders;\n  }\n  /**\n   * Assuming this module is in the cache. Remove internal references to allow freeing some memory.\n   */\n\n\n  cleanupForCache() {\n    // Make sure to cache types and sizes before cleanup when this module has been built\n    // They are accessed by the stats and we don't want them to crash after cleanup\n    // TODO reconsider this for webpack 6\n    if (this.buildInfo) {\n      if (this._sourceTypes === undefined) this.getSourceTypes();\n\n      for (const type of this._sourceTypes) {\n        this.size(type);\n      }\n    }\n\n    super.cleanupForCache();\n    this.parser = undefined;\n    this.parserOptions = undefined;\n    this.generator = undefined;\n    this.generatorOptions = undefined;\n  }\n  /**\n   * Module should be unsafe cached. Get data that's needed for that.\n   * This data will be passed to restoreFromUnsafeCache later.\n   * @returns {object} cached data\n   */\n\n\n  getUnsafeCacheData() {\n    const data = super.getUnsafeCacheData();\n    data.parserOptions = this.parserOptions;\n    data.generatorOptions = this.generatorOptions;\n    return data;\n  }\n\n  restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n    this._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n  }\n  /**\n   * restore unsafe cache data\n   * @param {object} unsafeCacheData data from getUnsafeCacheData\n   * @param {NormalModuleFactory} normalModuleFactory the normal module factory handling the unsafe caching\n   */\n\n\n  _restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n    super._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n\n    this.parserOptions = unsafeCacheData.parserOptions;\n    this.parser = normalModuleFactory.getParser(this.type, this.parserOptions);\n    this.generatorOptions = unsafeCacheData.generatorOptions;\n    this.generator = normalModuleFactory.getGenerator(this.type, this.generatorOptions); // we assume the generator behaves identically and keep cached sourceTypes/Sizes\n  }\n  /**\n   * @param {string} context the compilation context\n   * @param {string} name the asset name\n   * @param {string} content the content\n   * @param {string | TODO} sourceMap an optional source map\n   * @param {Object=} associatedObjectForCache object for caching\n   * @returns {Source} the created source\n   */\n\n\n  createSourceForAsset(context, name, content, sourceMap, associatedObjectForCache) {\n    if (sourceMap) {\n      if (typeof sourceMap === \"string\" && (this.useSourceMap || this.useSimpleSourceMap)) {\n        return new OriginalSource(content, contextifySourceUrl(context, sourceMap, associatedObjectForCache));\n      }\n\n      if (this.useSourceMap) {\n        return new SourceMapSource(content, name, contextifySourceMap(context, sourceMap, associatedObjectForCache));\n      }\n    }\n\n    return new RawSource(content);\n  }\n  /**\n   * @param {ResolverWithOptions} resolver a resolver\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {InputFileSystem} fs file system from reading\n   * @param {NormalModuleCompilationHooks} hooks the hooks\n   * @returns {NormalModuleLoaderContext} loader context\n   */\n\n\n  _createLoaderContext(resolver, options, compilation, fs, hooks) {\n    const {\n      requestShortener\n    } = compilation.runtimeTemplate;\n\n    const getCurrentLoaderName = () => {\n      const currentLoader = this.getCurrentLoader(loaderContext);\n      if (!currentLoader) return \"(not in loader scope)\";\n      return requestShortener.shorten(currentLoader.loader);\n    };\n\n    const getResolveContext = () => {\n      return {\n        fileDependencies: {\n          add: d => loaderContext.addDependency(d)\n        },\n        contextDependencies: {\n          add: d => loaderContext.addContextDependency(d)\n        },\n        missingDependencies: {\n          add: d => loaderContext.addMissingDependency(d)\n        }\n      };\n    };\n\n    const getAbsolutify = memoize(() => absolutify.bindCache(compilation.compiler.root));\n    const getAbsolutifyInContext = memoize(() => absolutify.bindContextCache(this.context, compilation.compiler.root));\n    const getContextify = memoize(() => contextify.bindCache(compilation.compiler.root));\n    const getContextifyInContext = memoize(() => contextify.bindContextCache(this.context, compilation.compiler.root));\n    const utils = {\n      absolutify: (context, request) => {\n        return context === this.context ? getAbsolutifyInContext()(request) : getAbsolutify()(context, request);\n      },\n      contextify: (context, request) => {\n        return context === this.context ? getContextifyInContext()(request) : getContextify()(context, request);\n      },\n      createHash: type => {\n        return createHash(type || compilation.outputOptions.hashFunction);\n      }\n    };\n    const loaderContext = {\n      version: 2,\n      getOptions: schema => {\n        const loader = this.getCurrentLoader(loaderContext);\n        let {\n          options\n        } = loader;\n\n        if (typeof options === \"string\") {\n          if (options.startsWith(\"{\") && options.endsWith(\"}\")) {\n            try {\n              options = parseJson(options);\n            } catch (e) {\n              throw new Error(`Cannot parse string options: ${e.message}`);\n            }\n          } else {\n            options = querystring.parse(options, \"&\", \"=\", {\n              maxKeys: 0\n            });\n          }\n        }\n\n        if (options === null || options === undefined) {\n          options = {};\n        }\n\n        if (schema) {\n          let name = \"Loader\";\n          let baseDataPath = \"options\";\n          let match;\n\n          if (schema.title && (match = /^(.+) (.+)$/.exec(schema.title))) {\n            [, name, baseDataPath] = match;\n          }\n\n          getValidate()(schema, options, {\n            name,\n            baseDataPath\n          });\n        }\n\n        return options;\n      },\n      emitWarning: warning => {\n        if (!(warning instanceof Error)) {\n          warning = new NonErrorEmittedError(warning);\n        }\n\n        this.addWarning(new ModuleWarning(warning, {\n          from: getCurrentLoaderName()\n        }));\n      },\n      emitError: error => {\n        if (!(error instanceof Error)) {\n          error = new NonErrorEmittedError(error);\n        }\n\n        this.addError(new ModuleError(error, {\n          from: getCurrentLoaderName()\n        }));\n      },\n      getLogger: name => {\n        const currentLoader = this.getCurrentLoader(loaderContext);\n        return compilation.getLogger(() => [currentLoader && currentLoader.loader, name, this.identifier()].filter(Boolean).join(\"|\"));\n      },\n\n      resolve(context, request, callback) {\n        resolver.resolve({}, context, request, getResolveContext(), callback);\n      },\n\n      getResolve(options) {\n        const child = options ? resolver.withOptions(options) : resolver;\n        return (context, request, callback) => {\n          if (callback) {\n            child.resolve({}, context, request, getResolveContext(), callback);\n          } else {\n            return new Promise((resolve, reject) => {\n              child.resolve({}, context, request, getResolveContext(), (err, result) => {\n                if (err) reject(err);else resolve(result);\n              });\n            });\n          }\n        };\n      },\n\n      emitFile: (name, content, sourceMap, assetInfo) => {\n        if (!this.buildInfo.assets) {\n          this.buildInfo.assets = Object.create(null);\n          this.buildInfo.assetsInfo = new Map();\n        }\n\n        this.buildInfo.assets[name] = this.createSourceForAsset(options.context, name, content, sourceMap, compilation.compiler.root);\n        this.buildInfo.assetsInfo.set(name, assetInfo);\n      },\n      addBuildDependency: dep => {\n        if (this.buildInfo.buildDependencies === undefined) {\n          this.buildInfo.buildDependencies = new LazySet();\n        }\n\n        this.buildInfo.buildDependencies.add(dep);\n      },\n      utils,\n      rootContext: options.context,\n      webpack: true,\n      sourceMap: !!this.useSourceMap,\n      mode: options.mode || \"production\",\n      _module: this,\n      _compilation: compilation,\n      _compiler: compilation.compiler,\n      fs: fs\n    };\n    Object.assign(loaderContext, options.loader);\n    hooks.loader.call(loaderContext, this);\n    return loaderContext;\n  }\n\n  getCurrentLoader(loaderContext) {\n    let index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : loaderContext.loaderIndex;\n\n    if (this.loaders && this.loaders.length && index < this.loaders.length && index >= 0 && this.loaders[index]) {\n      return this.loaders[index];\n    }\n\n    return null;\n  }\n  /**\n   * @param {string} context the compilation context\n   * @param {string | Buffer} content the content\n   * @param {string | TODO} sourceMap an optional source map\n   * @param {Object=} associatedObjectForCache object for caching\n   * @returns {Source} the created source\n   */\n\n\n  createSource(context, content, sourceMap, associatedObjectForCache) {\n    if (Buffer.isBuffer(content)) {\n      return new RawSource(content);\n    } // if there is no identifier return raw source\n\n\n    if (!this.identifier) {\n      return new RawSource(content);\n    } // from here on we assume we have an identifier\n\n\n    const identifier = this.identifier();\n\n    if (this.useSourceMap && sourceMap) {\n      return new SourceMapSource(content, contextifySourceUrl(context, identifier, associatedObjectForCache), contextifySourceMap(context, sourceMap, associatedObjectForCache));\n    }\n\n    if (this.useSourceMap || this.useSimpleSourceMap) {\n      return new OriginalSource(content, contextifySourceUrl(context, identifier, associatedObjectForCache));\n    }\n\n    return new RawSource(content);\n  }\n  /**\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {ResolverWithOptions} resolver the resolver\n   * @param {InputFileSystem} fs the file system\n   * @param {NormalModuleCompilationHooks} hooks the hooks\n   * @param {function((WebpackError | null)=): void} callback callback function\n   * @returns {void}\n   */\n\n\n  _doBuild(options, compilation, resolver, fs, hooks, callback) {\n    const loaderContext = this._createLoaderContext(resolver, options, compilation, fs, hooks);\n\n    const processResult = (err, result) => {\n      if (err) {\n        if (!(err instanceof Error)) {\n          err = new NonErrorEmittedError(err);\n        }\n\n        const currentLoader = this.getCurrentLoader(loaderContext);\n        const error = new ModuleBuildError(err, {\n          from: currentLoader && compilation.runtimeTemplate.requestShortener.shorten(currentLoader.loader)\n        });\n        return callback(error);\n      }\n\n      const source = result[0];\n      const sourceMap = result.length >= 1 ? result[1] : null;\n      const extraInfo = result.length >= 2 ? result[2] : null;\n\n      if (!Buffer.isBuffer(source) && typeof source !== \"string\") {\n        const currentLoader = this.getCurrentLoader(loaderContext, 0);\n        const err = new Error(`Final loader (${currentLoader ? compilation.runtimeTemplate.requestShortener.shorten(currentLoader.loader) : \"unknown\"}) didn't return a Buffer or String`);\n        const error = new ModuleBuildError(err);\n        return callback(error);\n      }\n\n      this._source = this.createSource(options.context, this.binary ? asBuffer(source) : asString(source), sourceMap, compilation.compiler.root);\n      if (this._sourceSizes !== undefined) this._sourceSizes.clear();\n      this._ast = typeof extraInfo === \"object\" && extraInfo !== null && extraInfo.webpackAST !== undefined ? extraInfo.webpackAST : null;\n      return callback();\n    };\n\n    this.buildInfo.fileDependencies = new LazySet();\n    this.buildInfo.contextDependencies = new LazySet();\n    this.buildInfo.missingDependencies = new LazySet();\n    this.buildInfo.cacheable = true;\n\n    try {\n      hooks.beforeLoaders.call(this.loaders, this, loaderContext);\n    } catch (err) {\n      processResult(err);\n      return;\n    }\n\n    if (this.loaders.length > 0) {\n      this.buildInfo.buildDependencies = new LazySet();\n    }\n\n    runLoaders({\n      resource: this.resource,\n      loaders: this.loaders,\n      context: loaderContext,\n      processResource: (loaderContext, resourcePath, callback) => {\n        const resource = loaderContext.resource;\n        const scheme = getScheme(resource);\n        hooks.readResource.for(scheme).callAsync(loaderContext, (err, result) => {\n          if (err) return callback(err);\n\n          if (typeof result !== \"string\" && !result) {\n            return callback(new UnhandledSchemeError(scheme, resource));\n          }\n\n          return callback(null, result);\n        });\n      }\n    }, (err, result) => {\n      // Cleanup loaderContext to avoid leaking memory in ICs\n      loaderContext._compilation = loaderContext._compiler = loaderContext._module = loaderContext.fs = undefined;\n\n      if (!result) {\n        this.buildInfo.cacheable = false;\n        return processResult(err || new Error(\"No result from loader-runner processing\"), null);\n      }\n\n      this.buildInfo.fileDependencies.addAll(result.fileDependencies);\n      this.buildInfo.contextDependencies.addAll(result.contextDependencies);\n      this.buildInfo.missingDependencies.addAll(result.missingDependencies);\n\n      for (const loader of this.loaders) {\n        this.buildInfo.buildDependencies.add(loader.loader);\n      }\n\n      this.buildInfo.cacheable = this.buildInfo.cacheable && result.cacheable;\n      processResult(err, result.result);\n    });\n  }\n  /**\n   * @param {WebpackError} error the error\n   * @returns {void}\n   */\n\n\n  markModuleAsErrored(error) {\n    // Restore build meta from successful build to keep importing state\n    this.buildMeta = { ...this._lastSuccessfulBuildMeta\n    };\n    this.error = error;\n    this.addError(error);\n  }\n\n  applyNoParseRule(rule, content) {\n    // must start with \"rule\" if rule is a string\n    if (typeof rule === \"string\") {\n      return content.startsWith(rule);\n    }\n\n    if (typeof rule === \"function\") {\n      return rule(content);\n    } // we assume rule is a regexp\n\n\n    return rule.test(content);\n  } // check if module should not be parsed\n  // returns \"true\" if the module should !not! be parsed\n  // returns \"false\" if the module !must! be parsed\n\n\n  shouldPreventParsing(noParseRule, request) {\n    // if no noParseRule exists, return false\n    // the module !must! be parsed.\n    if (!noParseRule) {\n      return false;\n    } // we only have one rule to check\n\n\n    if (!Array.isArray(noParseRule)) {\n      // returns \"true\" if the module is !not! to be parsed\n      return this.applyNoParseRule(noParseRule, request);\n    }\n\n    for (let i = 0; i < noParseRule.length; i++) {\n      const rule = noParseRule[i]; // early exit on first truthy match\n      // this module is !not! to be parsed\n\n      if (this.applyNoParseRule(rule, request)) {\n        return true;\n      }\n    } // no match found, so this module !should! be parsed\n\n\n    return false;\n  }\n\n  _initBuildHash(compilation) {\n    const hash = createHash(compilation.outputOptions.hashFunction);\n\n    if (this._source) {\n      hash.update(\"source\");\n\n      this._source.updateHash(hash);\n    }\n\n    hash.update(\"meta\");\n    hash.update(JSON.stringify(this.buildMeta));\n    this.buildInfo.hash =\n    /** @type {string} */\n    hash.digest(\"hex\");\n  }\n  /**\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {ResolverWithOptions} resolver the resolver\n   * @param {InputFileSystem} fs the file system\n   * @param {function(WebpackError=): void} callback callback function\n   * @returns {void}\n   */\n\n\n  build(options, compilation, resolver, fs, callback) {\n    this._forceBuild = false;\n    this._source = null;\n    if (this._sourceSizes !== undefined) this._sourceSizes.clear();\n    this._sourceTypes = undefined;\n    this._ast = null;\n    this.error = null;\n    this.clearWarningsAndErrors();\n    this.clearDependenciesAndBlocks();\n    this.buildMeta = {};\n    this.buildInfo = {\n      cacheable: false,\n      parsed: true,\n      fileDependencies: undefined,\n      contextDependencies: undefined,\n      missingDependencies: undefined,\n      buildDependencies: undefined,\n      valueDependencies: undefined,\n      hash: undefined,\n      assets: undefined,\n      assetsInfo: undefined\n    };\n    const startTime = compilation.compiler.fsStartTime || Date.now();\n    const hooks = NormalModule.getCompilationHooks(compilation);\n    return this._doBuild(options, compilation, resolver, fs, hooks, err => {\n      // if we have an error mark module as failed and exit\n      if (err) {\n        this.markModuleAsErrored(err);\n\n        this._initBuildHash(compilation);\n\n        return callback();\n      }\n\n      const handleParseError = e => {\n        const source = this._source.source();\n\n        const loaders = this.loaders.map(item => contextify(options.context, item.loader, compilation.compiler.root));\n        const error = new ModuleParseError(source, e, loaders, this.type);\n        this.markModuleAsErrored(error);\n\n        this._initBuildHash(compilation);\n\n        return callback();\n      };\n\n      const handleParseResult = result => {\n        this.dependencies.sort(concatComparators(compareSelect(a => a.loc, compareLocations), keepOriginalOrder(this.dependencies)));\n\n        this._initBuildHash(compilation);\n\n        this._lastSuccessfulBuildMeta = this.buildMeta;\n        return handleBuildDone();\n      };\n\n      const handleBuildDone = () => {\n        try {\n          hooks.beforeSnapshot.call(this);\n        } catch (err) {\n          this.markModuleAsErrored(err);\n          return callback();\n        }\n\n        const snapshotOptions = compilation.options.snapshot.module;\n\n        if (!this.buildInfo.cacheable || !snapshotOptions) {\n          return callback();\n        } // add warning for all non-absolute paths in fileDependencies, etc\n        // This makes it easier to find problems with watching and/or caching\n\n\n        let nonAbsoluteDependencies = undefined;\n\n        const checkDependencies = deps => {\n          for (const dep of deps) {\n            if (!ABSOLUTE_PATH_REGEX.test(dep)) {\n              if (nonAbsoluteDependencies === undefined) nonAbsoluteDependencies = new Set();\n              nonAbsoluteDependencies.add(dep);\n              deps.delete(dep);\n\n              try {\n                const depWithoutGlob = dep.replace(/[\\\\/]?\\*.*$/, \"\");\n                const absolute = join(compilation.fileSystemInfo.fs, this.context, depWithoutGlob);\n\n                if (absolute !== dep && ABSOLUTE_PATH_REGEX.test(absolute)) {\n                  (depWithoutGlob !== dep ? this.buildInfo.contextDependencies : deps).add(absolute);\n                }\n              } catch (e) {// ignore\n              }\n            }\n          }\n        };\n\n        checkDependencies(this.buildInfo.fileDependencies);\n        checkDependencies(this.buildInfo.missingDependencies);\n        checkDependencies(this.buildInfo.contextDependencies);\n\n        if (nonAbsoluteDependencies !== undefined) {\n          const InvalidDependenciesModuleWarning = getInvalidDependenciesModuleWarning();\n          this.addWarning(new InvalidDependenciesModuleWarning(this, nonAbsoluteDependencies));\n        } // convert file/context/missingDependencies into filesystem snapshot\n\n\n        compilation.fileSystemInfo.createSnapshot(startTime, this.buildInfo.fileDependencies, this.buildInfo.contextDependencies, this.buildInfo.missingDependencies, snapshotOptions, (err, snapshot) => {\n          if (err) {\n            this.markModuleAsErrored(err);\n            return;\n          }\n\n          this.buildInfo.fileDependencies = undefined;\n          this.buildInfo.contextDependencies = undefined;\n          this.buildInfo.missingDependencies = undefined;\n          this.buildInfo.snapshot = snapshot;\n          return callback();\n        });\n      };\n\n      try {\n        hooks.beforeParse.call(this);\n      } catch (err) {\n        this.markModuleAsErrored(err);\n\n        this._initBuildHash(compilation);\n\n        return callback();\n      } // check if this module should !not! be parsed.\n      // if so, exit here;\n\n\n      const noParseRule = options.module && options.module.noParse;\n\n      if (this.shouldPreventParsing(noParseRule, this.request)) {\n        // We assume that we need module and exports\n        this.buildInfo.parsed = false;\n\n        this._initBuildHash(compilation);\n\n        return handleBuildDone();\n      }\n\n      let result;\n\n      try {\n        const source = this._source.source();\n\n        result = this.parser.parse(this._ast || source, {\n          source,\n          current: this,\n          module: this,\n          compilation: compilation,\n          options: options\n        });\n      } catch (e) {\n        handleParseError(e);\n        return;\n      }\n\n      handleParseResult(result);\n    });\n  }\n  /**\n   * @param {ConcatenationBailoutReasonContext} context context\n   * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n   */\n\n\n  getConcatenationBailoutReason(context) {\n    return this.generator.getConcatenationBailoutReason(this, context);\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @returns {ConnectionState} how this module should be connected to referencing modules when consumed for side-effects only\n   */\n\n\n  getSideEffectsConnectionState(moduleGraph) {\n    if (this.factoryMeta !== undefined) {\n      if (this.factoryMeta.sideEffectFree) return false;\n      if (this.factoryMeta.sideEffectFree === false) return true;\n    }\n\n    if (this.buildMeta !== undefined && this.buildMeta.sideEffectFree) {\n      if (this._isEvaluatingSideEffects) return ModuleGraphConnection.CIRCULAR_CONNECTION;\n      this._isEvaluatingSideEffects = true;\n      /** @type {ConnectionState} */\n\n      let current = false;\n\n      for (const dep of this.dependencies) {\n        const state = dep.getModuleEvaluationSideEffectsState(moduleGraph);\n\n        if (state === true) {\n          if (this._addedSideEffectsBailout === undefined ? (this._addedSideEffectsBailout = new WeakSet(), true) : !this._addedSideEffectsBailout.has(moduleGraph)) {\n            this._addedSideEffectsBailout.add(moduleGraph);\n\n            moduleGraph.getOptimizationBailout(this).push(() => `Dependency (${dep.type}) with side effects at ${formatLocation(dep.loc)}`);\n          }\n\n          this._isEvaluatingSideEffects = false;\n          return true;\n        } else if (state !== ModuleGraphConnection.CIRCULAR_CONNECTION) {\n          current = ModuleGraphConnection.addConnectionStates(current, state);\n        }\n      }\n\n      this._isEvaluatingSideEffects = false; // When caching is implemented here, make sure to not cache when\n      // at least one circular connection was in the loop above\n\n      return current;\n    } else {\n      return true;\n    }\n  }\n  /**\n   * @returns {Set<string>} types available (do not mutate)\n   */\n\n\n  getSourceTypes() {\n    if (this._sourceTypes === undefined) {\n      this._sourceTypes = this.generator.getTypes(this);\n    }\n\n    return this._sourceTypes;\n  }\n  /**\n   * @param {CodeGenerationContext} context context for code generation\n   * @returns {CodeGenerationResult} result\n   */\n\n\n  codeGeneration(_ref2) {\n    let {\n      dependencyTemplates,\n      runtimeTemplate,\n      moduleGraph,\n      chunkGraph,\n      runtime,\n      concatenationScope,\n      codeGenerationResults,\n      sourceTypes\n    } = _ref2;\n\n    /** @type {Set<string>} */\n    const runtimeRequirements = new Set();\n\n    if (!this.buildInfo.parsed) {\n      runtimeRequirements.add(RuntimeGlobals.module);\n      runtimeRequirements.add(RuntimeGlobals.exports);\n      runtimeRequirements.add(RuntimeGlobals.thisAsExports);\n    }\n    /** @type {Map<string, any>} */\n\n\n    let data;\n\n    const getData = () => {\n      if (data === undefined) data = new Map();\n      return data;\n    };\n\n    const sources = new Map();\n\n    for (const type of sourceTypes || chunkGraph.getModuleSourceTypes(this)) {\n      const source = this.error ? new RawSource(\"throw new Error(\" + JSON.stringify(this.error.message) + \");\") : this.generator.generate(this, {\n        dependencyTemplates,\n        runtimeTemplate,\n        moduleGraph,\n        chunkGraph,\n        runtimeRequirements,\n        runtime,\n        concatenationScope,\n        codeGenerationResults,\n        getData,\n        type\n      });\n\n      if (source) {\n        sources.set(type, new CachedSource(source));\n      }\n    }\n    /** @type {CodeGenerationResult} */\n\n\n    const resultEntry = {\n      sources,\n      runtimeRequirements,\n      data\n    };\n    return resultEntry;\n  }\n  /**\n   * @returns {Source | null} the original source for the module before webpack transformation\n   */\n\n\n  originalSource() {\n    return this._source;\n  }\n  /**\n   * @returns {void}\n   */\n\n\n  invalidateBuild() {\n    this._forceBuild = true;\n  }\n  /**\n   * @param {NeedBuildContext} context context info\n   * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n   * @returns {void}\n   */\n\n\n  needBuild(context, callback) {\n    const {\n      fileSystemInfo,\n      compilation,\n      valueCacheVersions\n    } = context; // build if enforced\n\n    if (this._forceBuild) return callback(null, true); // always try to build in case of an error\n\n    if (this.error) return callback(null, true); // always build when module is not cacheable\n\n    if (!this.buildInfo.cacheable) return callback(null, true); // build when there is no snapshot to check\n\n    if (!this.buildInfo.snapshot) return callback(null, true); // build when valueDependencies have changed\n\n    /** @type {Map<string, string | Set<string>>} */\n\n    const valueDependencies = this.buildInfo.valueDependencies;\n\n    if (valueDependencies) {\n      if (!valueCacheVersions) return callback(null, true);\n\n      for (const [key, value] of valueDependencies) {\n        if (value === undefined) return callback(null, true);\n        const current = valueCacheVersions.get(key);\n\n        if (value !== current && (typeof value === \"string\" || typeof current === \"string\" || current === undefined || !isSubset(value, current))) {\n          return callback(null, true);\n        }\n      }\n    } // check snapshot for validity\n\n\n    fileSystemInfo.checkSnapshotValid(this.buildInfo.snapshot, (err, valid) => {\n      if (err) return callback(err);\n      if (!valid) return callback(null, true);\n      const hooks = NormalModule.getCompilationHooks(compilation);\n      hooks.needBuild.callAsync(this, context, (err, needBuild) => {\n        if (err) {\n          return callback(HookWebpackError.makeWebpackError(err, \"NormalModule.getCompilationHooks().needBuild\"));\n        }\n\n        callback(null, !!needBuild);\n      });\n    });\n  }\n  /**\n   * @param {string=} type the source type for which the size should be estimated\n   * @returns {number} the estimated size of the module (must be non-zero)\n   */\n\n\n  size(type) {\n    const cachedSize = this._sourceSizes === undefined ? undefined : this._sourceSizes.get(type);\n\n    if (cachedSize !== undefined) {\n      return cachedSize;\n    }\n\n    const size = Math.max(1, this.generator.getSize(this, type));\n\n    if (this._sourceSizes === undefined) {\n      this._sourceSizes = new Map();\n    }\n\n    this._sourceSizes.set(type, size);\n\n    return size;\n  }\n  /**\n   * @param {LazySet<string>} fileDependencies set where file dependencies are added to\n   * @param {LazySet<string>} contextDependencies set where context dependencies are added to\n   * @param {LazySet<string>} missingDependencies set where missing dependencies are added to\n   * @param {LazySet<string>} buildDependencies set where build dependencies are added to\n   */\n\n\n  addCacheDependencies(fileDependencies, contextDependencies, missingDependencies, buildDependencies) {\n    const {\n      snapshot,\n      buildDependencies: buildDeps\n    } = this.buildInfo;\n\n    if (snapshot) {\n      fileDependencies.addAll(snapshot.getFileIterable());\n      contextDependencies.addAll(snapshot.getContextIterable());\n      missingDependencies.addAll(snapshot.getMissingIterable());\n    } else {\n      const {\n        fileDependencies: fileDeps,\n        contextDependencies: contextDeps,\n        missingDependencies: missingDeps\n      } = this.buildInfo;\n      if (fileDeps !== undefined) fileDependencies.addAll(fileDeps);\n      if (contextDeps !== undefined) contextDependencies.addAll(contextDeps);\n      if (missingDeps !== undefined) missingDependencies.addAll(missingDeps);\n    }\n\n    if (buildDeps !== undefined) {\n      buildDependencies.addAll(buildDeps);\n    }\n  }\n  /**\n   * @param {Hash} hash the hash used to track dependencies\n   * @param {UpdateHashContext} context context\n   * @returns {void}\n   */\n\n\n  updateHash(hash, context) {\n    hash.update(this.buildInfo.hash);\n    this.generator.updateHash(hash, {\n      module: this,\n      ...context\n    });\n    super.updateHash(hash, context);\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context; // deserialize\n\n    write(this._source);\n    write(this.error);\n    write(this._lastSuccessfulBuildMeta);\n    write(this._forceBuild);\n    super.serialize(context);\n  }\n\n  static deserialize(context) {\n    const obj = new NormalModule({\n      // will be deserialized by Module\n      layer: null,\n      type: \"\",\n      // will be filled by updateCacheModule\n      resource: \"\",\n      context: \"\",\n      request: null,\n      userRequest: null,\n      rawRequest: null,\n      loaders: null,\n      matchResource: null,\n      parser: null,\n      parserOptions: null,\n      generator: null,\n      generatorOptions: null,\n      resolveOptions: null\n    });\n    obj.deserialize(context);\n    return obj;\n  }\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this._source = read();\n    this.error = read();\n    this._lastSuccessfulBuildMeta = read();\n    this._forceBuild = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(NormalModule, \"webpack/lib/NormalModule\");\nmodule.exports = NormalModule;","map":{"version":3,"names":["parseJson","require","getContext","runLoaders","querystring","HookMap","SyncHook","AsyncSeriesBailHook","CachedSource","OriginalSource","RawSource","SourceMapSource","Compilation","HookWebpackError","Module","ModuleBuildError","ModuleError","ModuleGraphConnection","ModuleParseError","ModuleWarning","RuntimeGlobals","UnhandledSchemeError","WebpackError","formatLocation","LazySet","isSubset","getScheme","compareLocations","concatComparators","compareSelect","keepOriginalOrder","createHash","createFakeHook","join","contextify","absolutify","makePathsRelative","makeSerializable","memoize","getInvalidDependenciesModuleWarning","getValidate","validate","ABSOLUTE_PATH_REGEX","contextifySourceUrl","context","source","associatedObjectForCache","startsWith","contextifySourceMap","sourceMap","Array","isArray","sources","sourceRoot","mapper","endsWith","slice","newSources","map","file","undefined","asString","input","Buffer","isBuffer","toString","asBuffer","from","NonErrorEmittedError","constructor","error","name","message","compilationHooksMap","WeakMap","NormalModule","getCompilationHooks","compilation","TypeError","hooks","get","loader","beforeLoaders","beforeParse","beforeSnapshot","readResourceForScheme","scheme","hook","readResource","for","tap","options","fn","loaderContext","resource","_module","tapAsync","callback","tapPromise","needBuild","set","layer","type","request","userRequest","rawRequest","loaders","resourceResolveData","matchResource","parser","parserOptions","generator","generatorOptions","resolveOptions","binary","test","_source","_sourceSizes","_sourceTypes","_lastSuccessfulBuildMeta","_forceBuild","_isEvaluatingSideEffects","_addedSideEffectsBailout","identifier","readableIdentifier","requestShortener","shorten","libIdent","ident","nameForCondition","idx","indexOf","updateCacheModule","module","m","cleanupForCache","buildInfo","getSourceTypes","size","getUnsafeCacheData","data","restoreFromUnsafeCache","unsafeCacheData","normalModuleFactory","_restoreFromUnsafeCache","getParser","getGenerator","createSourceForAsset","content","useSourceMap","useSimpleSourceMap","_createLoaderContext","resolver","fs","runtimeTemplate","getCurrentLoaderName","currentLoader","getCurrentLoader","getResolveContext","fileDependencies","add","d","addDependency","contextDependencies","addContextDependency","missingDependencies","addMissingDependency","getAbsolutify","bindCache","compiler","root","getAbsolutifyInContext","bindContextCache","getContextify","getContextifyInContext","utils","outputOptions","hashFunction","version","getOptions","schema","e","Error","parse","maxKeys","baseDataPath","match","title","exec","emitWarning","warning","addWarning","emitError","addError","getLogger","filter","Boolean","resolve","getResolve","child","withOptions","Promise","reject","err","result","emitFile","assetInfo","assets","Object","create","assetsInfo","Map","addBuildDependency","dep","buildDependencies","rootContext","webpack","mode","_compilation","_compiler","assign","call","index","loaderIndex","length","createSource","_doBuild","processResult","extraInfo","clear","_ast","webpackAST","cacheable","processResource","resourcePath","callAsync","addAll","markModuleAsErrored","buildMeta","applyNoParseRule","rule","shouldPreventParsing","noParseRule","i","_initBuildHash","hash","update","updateHash","JSON","stringify","digest","build","clearWarningsAndErrors","clearDependenciesAndBlocks","parsed","valueDependencies","startTime","fsStartTime","Date","now","handleParseError","item","handleParseResult","dependencies","sort","a","loc","handleBuildDone","snapshotOptions","snapshot","nonAbsoluteDependencies","checkDependencies","deps","Set","delete","depWithoutGlob","replace","absolute","fileSystemInfo","InvalidDependenciesModuleWarning","createSnapshot","noParse","current","getConcatenationBailoutReason","getSideEffectsConnectionState","moduleGraph","factoryMeta","sideEffectFree","CIRCULAR_CONNECTION","state","getModuleEvaluationSideEffectsState","WeakSet","has","getOptimizationBailout","push","addConnectionStates","getTypes","codeGeneration","dependencyTemplates","chunkGraph","runtime","concatenationScope","codeGenerationResults","sourceTypes","runtimeRequirements","exports","thisAsExports","getData","getModuleSourceTypes","generate","resultEntry","originalSource","invalidateBuild","valueCacheVersions","key","value","checkSnapshotValid","valid","makeWebpackError","cachedSize","Math","max","getSize","addCacheDependencies","buildDeps","getFileIterable","getContextIterable","getMissingIterable","fileDeps","contextDeps","missingDeps","serialize","write","deserialize","obj","read"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/NormalModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst parseJson = require(\"json-parse-even-better-errors\");\nconst { getContext, runLoaders } = require(\"loader-runner\");\nconst querystring = require(\"querystring\");\nconst { HookMap, SyncHook, AsyncSeriesBailHook } = require(\"tapable\");\nconst {\n\tCachedSource,\n\tOriginalSource,\n\tRawSource,\n\tSourceMapSource\n} = require(\"webpack-sources\");\nconst Compilation = require(\"./Compilation\");\nconst HookWebpackError = require(\"./HookWebpackError\");\nconst Module = require(\"./Module\");\nconst ModuleBuildError = require(\"./ModuleBuildError\");\nconst ModuleError = require(\"./ModuleError\");\nconst ModuleGraphConnection = require(\"./ModuleGraphConnection\");\nconst ModuleParseError = require(\"./ModuleParseError\");\nconst ModuleWarning = require(\"./ModuleWarning\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst UnhandledSchemeError = require(\"./UnhandledSchemeError\");\nconst WebpackError = require(\"./WebpackError\");\nconst formatLocation = require(\"./formatLocation\");\nconst LazySet = require(\"./util/LazySet\");\nconst { isSubset } = require(\"./util/SetHelpers\");\nconst { getScheme } = require(\"./util/URLAbsoluteSpecifier\");\nconst {\n\tcompareLocations,\n\tconcatComparators,\n\tcompareSelect,\n\tkeepOriginalOrder\n} = require(\"./util/comparators\");\nconst createHash = require(\"./util/createHash\");\nconst { createFakeHook } = require(\"./util/deprecation\");\nconst { join } = require(\"./util/fs\");\nconst {\n\tcontextify,\n\tabsolutify,\n\tmakePathsRelative\n} = require(\"./util/identifier\");\nconst makeSerializable = require(\"./util/makeSerializable\");\nconst memoize = require(\"./util/memoize\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/LoaderContext\").NormalModuleLoaderContext} NormalModuleLoaderContext */\n/** @typedef {import(\"../declarations/WebpackOptions\").Mode} Mode */\n/** @typedef {import(\"../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"./Generator\")} Generator */\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"./Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"./NormalModuleFactory\")} NormalModuleFactory */\n/** @typedef {import(\"./Parser\")} Parser */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./logging/Logger\").Logger} WebpackLogger */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @typedef {Object} SourceMap\n * @property {number} version\n * @property {string[]} sources\n * @property {string} mappings\n * @property {string=} file\n * @property {string=} sourceRoot\n * @property {string[]=} sourcesContent\n * @property {string[]=} names\n */\n\nconst getInvalidDependenciesModuleWarning = memoize(() =>\n\trequire(\"./InvalidDependenciesModuleWarning\")\n);\nconst getValidate = memoize(() => require(\"schema-utils\").validate);\n\nconst ABSOLUTE_PATH_REGEX = /^([a-zA-Z]:\\\\|\\\\\\\\|\\/)/;\n\n/**\n * @typedef {Object} LoaderItem\n * @property {string} loader\n * @property {any} options\n * @property {string?} ident\n * @property {string?} type\n */\n\n/**\n * @param {string} context absolute context path\n * @param {string} source a source path\n * @param {Object=} associatedObjectForCache an object to which the cache will be attached\n * @returns {string} new source path\n */\nconst contextifySourceUrl = (context, source, associatedObjectForCache) => {\n\tif (source.startsWith(\"webpack://\")) return source;\n\treturn `webpack://${makePathsRelative(\n\t\tcontext,\n\t\tsource,\n\t\tassociatedObjectForCache\n\t)}`;\n};\n\n/**\n * @param {string} context absolute context path\n * @param {SourceMap} sourceMap a source map\n * @param {Object=} associatedObjectForCache an object to which the cache will be attached\n * @returns {SourceMap} new source map\n */\nconst contextifySourceMap = (context, sourceMap, associatedObjectForCache) => {\n\tif (!Array.isArray(sourceMap.sources)) return sourceMap;\n\tconst { sourceRoot } = sourceMap;\n\t/** @type {function(string): string} */\n\tconst mapper = !sourceRoot\n\t\t? source => source\n\t\t: sourceRoot.endsWith(\"/\")\n\t\t? source =>\n\t\t\t\tsource.startsWith(\"/\")\n\t\t\t\t\t? `${sourceRoot.slice(0, -1)}${source}`\n\t\t\t\t\t: `${sourceRoot}${source}`\n\t\t: source =>\n\t\t\t\tsource.startsWith(\"/\")\n\t\t\t\t\t? `${sourceRoot}${source}`\n\t\t\t\t\t: `${sourceRoot}/${source}`;\n\tconst newSources = sourceMap.sources.map(source =>\n\t\tcontextifySourceUrl(context, mapper(source), associatedObjectForCache)\n\t);\n\treturn {\n\t\t...sourceMap,\n\t\tfile: \"x\",\n\t\tsourceRoot: undefined,\n\t\tsources: newSources\n\t};\n};\n\n/**\n * @param {string | Buffer} input the input\n * @returns {string} the converted string\n */\nconst asString = input => {\n\tif (Buffer.isBuffer(input)) {\n\t\treturn input.toString(\"utf-8\");\n\t}\n\treturn input;\n};\n\n/**\n * @param {string | Buffer} input the input\n * @returns {Buffer} the converted buffer\n */\nconst asBuffer = input => {\n\tif (!Buffer.isBuffer(input)) {\n\t\treturn Buffer.from(input, \"utf-8\");\n\t}\n\treturn input;\n};\n\nclass NonErrorEmittedError extends WebpackError {\n\tconstructor(error) {\n\t\tsuper();\n\n\t\tthis.name = \"NonErrorEmittedError\";\n\t\tthis.message = \"(Emitted value instead of an instance of Error) \" + error;\n\t}\n}\n\nmakeSerializable(\n\tNonErrorEmittedError,\n\t\"webpack/lib/NormalModule\",\n\t\"NonErrorEmittedError\"\n);\n\n/**\n * @typedef {Object} NormalModuleCompilationHooks\n * @property {SyncHook<[object, NormalModule]>} loader\n * @property {SyncHook<[LoaderItem[], NormalModule, object]>} beforeLoaders\n * @property {SyncHook<[NormalModule]>} beforeParse\n * @property {SyncHook<[NormalModule]>} beforeSnapshot\n * @property {HookMap<AsyncSeriesBailHook<[string, NormalModule], string | Buffer>>} readResourceForScheme\n * @property {HookMap<AsyncSeriesBailHook<[object], string | Buffer>>} readResource\n * @property {AsyncSeriesBailHook<[NormalModule, NeedBuildContext], boolean>} needBuild\n */\n\n/**\n * @typedef {Object} NormalModuleCreateData\n * @property {string=} layer an optional layer in which the module is\n * @property {string} type module type\n * @property {string} request request string\n * @property {string} userRequest request intended by user (without loaders from config)\n * @property {string} rawRequest request without resolving\n * @property {LoaderItem[]} loaders list of loaders\n * @property {string} resource path + query of the real resource\n * @property {Record<string, any>=} resourceResolveData resource resolve data\n * @property {string} context context directory for resolving\n * @property {string=} matchResource path + query of the matched resource (virtual)\n * @property {Parser} parser the parser used\n * @property {Record<string, any>=} parserOptions the options of the parser used\n * @property {Generator} generator the generator used\n * @property {Record<string, any>=} generatorOptions the options of the generator used\n * @property {ResolveOptions=} resolveOptions options used for resolving requests from this module\n */\n\n/** @type {WeakMap<Compilation, NormalModuleCompilationHooks>} */\nconst compilationHooksMap = new WeakMap();\n\nclass NormalModule extends Module {\n\t/**\n\t * @param {Compilation} compilation the compilation\n\t * @returns {NormalModuleCompilationHooks} the attached hooks\n\t */\n\tstatic getCompilationHooks(compilation) {\n\t\tif (!(compilation instanceof Compilation)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t\"The 'compilation' argument must be an instance of Compilation\"\n\t\t\t);\n\t\t}\n\t\tlet hooks = compilationHooksMap.get(compilation);\n\t\tif (hooks === undefined) {\n\t\t\thooks = {\n\t\t\t\tloader: new SyncHook([\"loaderContext\", \"module\"]),\n\t\t\t\tbeforeLoaders: new SyncHook([\"loaders\", \"module\", \"loaderContext\"]),\n\t\t\t\tbeforeParse: new SyncHook([\"module\"]),\n\t\t\t\tbeforeSnapshot: new SyncHook([\"module\"]),\n\t\t\t\t// TODO webpack 6 deprecate\n\t\t\t\treadResourceForScheme: new HookMap(scheme => {\n\t\t\t\t\tconst hook = hooks.readResource.for(scheme);\n\t\t\t\t\treturn createFakeHook(\n\t\t\t\t\t\t/** @type {AsyncSeriesBailHook<[string, NormalModule], string | Buffer>} */ ({\n\t\t\t\t\t\t\ttap: (options, fn) =>\n\t\t\t\t\t\t\t\thook.tap(options, loaderContext =>\n\t\t\t\t\t\t\t\t\tfn(loaderContext.resource, loaderContext._module)\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttapAsync: (options, fn) =>\n\t\t\t\t\t\t\t\thook.tapAsync(options, (loaderContext, callback) =>\n\t\t\t\t\t\t\t\t\tfn(loaderContext.resource, loaderContext._module, callback)\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttapPromise: (options, fn) =>\n\t\t\t\t\t\t\t\thook.tapPromise(options, loaderContext =>\n\t\t\t\t\t\t\t\t\tfn(loaderContext.resource, loaderContext._module)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t\treadResource: new HookMap(\n\t\t\t\t\t() => new AsyncSeriesBailHook([\"loaderContext\"])\n\t\t\t\t),\n\t\t\t\tneedBuild: new AsyncSeriesBailHook([\"module\", \"context\"])\n\t\t\t};\n\t\t\tcompilationHooksMap.set(compilation, hooks);\n\t\t}\n\t\treturn hooks;\n\t}\n\n\t/**\n\t * @param {NormalModuleCreateData} options options object\n\t */\n\tconstructor({\n\t\tlayer,\n\t\ttype,\n\t\trequest,\n\t\tuserRequest,\n\t\trawRequest,\n\t\tloaders,\n\t\tresource,\n\t\tresourceResolveData,\n\t\tcontext,\n\t\tmatchResource,\n\t\tparser,\n\t\tparserOptions,\n\t\tgenerator,\n\t\tgeneratorOptions,\n\t\tresolveOptions\n\t}) {\n\t\tsuper(type, context || getContext(resource), layer);\n\n\t\t// Info from Factory\n\t\t/** @type {string} */\n\t\tthis.request = request;\n\t\t/** @type {string} */\n\t\tthis.userRequest = userRequest;\n\t\t/** @type {string} */\n\t\tthis.rawRequest = rawRequest;\n\t\t/** @type {boolean} */\n\t\tthis.binary = /^(asset|webassembly)\\b/.test(type);\n\t\t/** @type {Parser} */\n\t\tthis.parser = parser;\n\t\tthis.parserOptions = parserOptions;\n\t\t/** @type {Generator} */\n\t\tthis.generator = generator;\n\t\tthis.generatorOptions = generatorOptions;\n\t\t/** @type {string} */\n\t\tthis.resource = resource;\n\t\tthis.resourceResolveData = resourceResolveData;\n\t\t/** @type {string | undefined} */\n\t\tthis.matchResource = matchResource;\n\t\t/** @type {LoaderItem[]} */\n\t\tthis.loaders = loaders;\n\t\tif (resolveOptions !== undefined) {\n\t\t\t// already declared in super class\n\t\t\tthis.resolveOptions = resolveOptions;\n\t\t}\n\n\t\t// Info from Build\n\t\t/** @type {(WebpackError | null)=} */\n\t\tthis.error = null;\n\t\t/** @private @type {Source=} */\n\t\tthis._source = null;\n\t\t/** @private @type {Map<string, number> | undefined} **/\n\t\tthis._sourceSizes = undefined;\n\t\t/** @private @type {Set<string>} */\n\t\tthis._sourceTypes = undefined;\n\n\t\t// Cache\n\t\tthis._lastSuccessfulBuildMeta = {};\n\t\tthis._forceBuild = true;\n\t\tthis._isEvaluatingSideEffects = false;\n\t\t/** @type {WeakSet<ModuleGraph> | undefined} */\n\t\tthis._addedSideEffectsBailout = undefined;\n\t}\n\n\t/**\n\t * @returns {string} a unique identifier of the module\n\t */\n\tidentifier() {\n\t\tif (this.layer === null) {\n\t\t\tif (this.type === \"javascript/auto\") {\n\t\t\t\treturn this.request;\n\t\t\t} else {\n\t\t\t\treturn `${this.type}|${this.request}`;\n\t\t\t}\n\t\t} else {\n\t\t\treturn `${this.type}|${this.request}|${this.layer}`;\n\t\t}\n\t}\n\n\t/**\n\t * @param {RequestShortener} requestShortener the request shortener\n\t * @returns {string} a user readable identifier of the module\n\t */\n\treadableIdentifier(requestShortener) {\n\t\treturn requestShortener.shorten(this.userRequest);\n\t}\n\n\t/**\n\t * @param {LibIdentOptions} options options\n\t * @returns {string | null} an identifier for library inclusion\n\t */\n\tlibIdent(options) {\n\t\tlet ident = contextify(\n\t\t\toptions.context,\n\t\t\tthis.userRequest,\n\t\t\toptions.associatedObjectForCache\n\t\t);\n\t\tif (this.layer) ident = `(${this.layer})/${ident}`;\n\t\treturn ident;\n\t}\n\n\t/**\n\t * @returns {string | null} absolute path which should be used for condition matching (usually the resource path)\n\t */\n\tnameForCondition() {\n\t\tconst resource = this.matchResource || this.resource;\n\t\tconst idx = resource.indexOf(\"?\");\n\t\tif (idx >= 0) return resource.slice(0, idx);\n\t\treturn resource;\n\t}\n\n\t/**\n\t * Assuming this module is in the cache. Update the (cached) module with\n\t * the fresh module from the factory. Usually updates internal references\n\t * and properties.\n\t * @param {Module} module fresh module\n\t * @returns {void}\n\t */\n\tupdateCacheModule(module) {\n\t\tsuper.updateCacheModule(module);\n\t\tconst m = /** @type {NormalModule} */ (module);\n\t\tthis.binary = m.binary;\n\t\tthis.request = m.request;\n\t\tthis.userRequest = m.userRequest;\n\t\tthis.rawRequest = m.rawRequest;\n\t\tthis.parser = m.parser;\n\t\tthis.parserOptions = m.parserOptions;\n\t\tthis.generator = m.generator;\n\t\tthis.generatorOptions = m.generatorOptions;\n\t\tthis.resource = m.resource;\n\t\tthis.resourceResolveData = m.resourceResolveData;\n\t\tthis.context = m.context;\n\t\tthis.matchResource = m.matchResource;\n\t\tthis.loaders = m.loaders;\n\t}\n\n\t/**\n\t * Assuming this module is in the cache. Remove internal references to allow freeing some memory.\n\t */\n\tcleanupForCache() {\n\t\t// Make sure to cache types and sizes before cleanup when this module has been built\n\t\t// They are accessed by the stats and we don't want them to crash after cleanup\n\t\t// TODO reconsider this for webpack 6\n\t\tif (this.buildInfo) {\n\t\t\tif (this._sourceTypes === undefined) this.getSourceTypes();\n\t\t\tfor (const type of this._sourceTypes) {\n\t\t\t\tthis.size(type);\n\t\t\t}\n\t\t}\n\t\tsuper.cleanupForCache();\n\t\tthis.parser = undefined;\n\t\tthis.parserOptions = undefined;\n\t\tthis.generator = undefined;\n\t\tthis.generatorOptions = undefined;\n\t}\n\n\t/**\n\t * Module should be unsafe cached. Get data that's needed for that.\n\t * This data will be passed to restoreFromUnsafeCache later.\n\t * @returns {object} cached data\n\t */\n\tgetUnsafeCacheData() {\n\t\tconst data = super.getUnsafeCacheData();\n\t\tdata.parserOptions = this.parserOptions;\n\t\tdata.generatorOptions = this.generatorOptions;\n\t\treturn data;\n\t}\n\n\trestoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n\t\tthis._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n\t}\n\n\t/**\n\t * restore unsafe cache data\n\t * @param {object} unsafeCacheData data from getUnsafeCacheData\n\t * @param {NormalModuleFactory} normalModuleFactory the normal module factory handling the unsafe caching\n\t */\n\t_restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n\t\tsuper._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n\t\tthis.parserOptions = unsafeCacheData.parserOptions;\n\t\tthis.parser = normalModuleFactory.getParser(this.type, this.parserOptions);\n\t\tthis.generatorOptions = unsafeCacheData.generatorOptions;\n\t\tthis.generator = normalModuleFactory.getGenerator(\n\t\t\tthis.type,\n\t\t\tthis.generatorOptions\n\t\t);\n\t\t// we assume the generator behaves identically and keep cached sourceTypes/Sizes\n\t}\n\n\t/**\n\t * @param {string} context the compilation context\n\t * @param {string} name the asset name\n\t * @param {string} content the content\n\t * @param {string | TODO} sourceMap an optional source map\n\t * @param {Object=} associatedObjectForCache object for caching\n\t * @returns {Source} the created source\n\t */\n\tcreateSourceForAsset(\n\t\tcontext,\n\t\tname,\n\t\tcontent,\n\t\tsourceMap,\n\t\tassociatedObjectForCache\n\t) {\n\t\tif (sourceMap) {\n\t\t\tif (\n\t\t\t\ttypeof sourceMap === \"string\" &&\n\t\t\t\t(this.useSourceMap || this.useSimpleSourceMap)\n\t\t\t) {\n\t\t\t\treturn new OriginalSource(\n\t\t\t\t\tcontent,\n\t\t\t\t\tcontextifySourceUrl(context, sourceMap, associatedObjectForCache)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (this.useSourceMap) {\n\t\t\t\treturn new SourceMapSource(\n\t\t\t\t\tcontent,\n\t\t\t\t\tname,\n\t\t\t\t\tcontextifySourceMap(context, sourceMap, associatedObjectForCache)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn new RawSource(content);\n\t}\n\n\t/**\n\t * @param {ResolverWithOptions} resolver a resolver\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {InputFileSystem} fs file system from reading\n\t * @param {NormalModuleCompilationHooks} hooks the hooks\n\t * @returns {NormalModuleLoaderContext} loader context\n\t */\n\t_createLoaderContext(resolver, options, compilation, fs, hooks) {\n\t\tconst { requestShortener } = compilation.runtimeTemplate;\n\t\tconst getCurrentLoaderName = () => {\n\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext);\n\t\t\tif (!currentLoader) return \"(not in loader scope)\";\n\t\t\treturn requestShortener.shorten(currentLoader.loader);\n\t\t};\n\t\tconst getResolveContext = () => {\n\t\t\treturn {\n\t\t\t\tfileDependencies: {\n\t\t\t\t\tadd: d => loaderContext.addDependency(d)\n\t\t\t\t},\n\t\t\t\tcontextDependencies: {\n\t\t\t\t\tadd: d => loaderContext.addContextDependency(d)\n\t\t\t\t},\n\t\t\t\tmissingDependencies: {\n\t\t\t\t\tadd: d => loaderContext.addMissingDependency(d)\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tconst getAbsolutify = memoize(() =>\n\t\t\tabsolutify.bindCache(compilation.compiler.root)\n\t\t);\n\t\tconst getAbsolutifyInContext = memoize(() =>\n\t\t\tabsolutify.bindContextCache(this.context, compilation.compiler.root)\n\t\t);\n\t\tconst getContextify = memoize(() =>\n\t\t\tcontextify.bindCache(compilation.compiler.root)\n\t\t);\n\t\tconst getContextifyInContext = memoize(() =>\n\t\t\tcontextify.bindContextCache(this.context, compilation.compiler.root)\n\t\t);\n\t\tconst utils = {\n\t\t\tabsolutify: (context, request) => {\n\t\t\t\treturn context === this.context\n\t\t\t\t\t? getAbsolutifyInContext()(request)\n\t\t\t\t\t: getAbsolutify()(context, request);\n\t\t\t},\n\t\t\tcontextify: (context, request) => {\n\t\t\t\treturn context === this.context\n\t\t\t\t\t? getContextifyInContext()(request)\n\t\t\t\t\t: getContextify()(context, request);\n\t\t\t},\n\t\t\tcreateHash: type => {\n\t\t\t\treturn createHash(type || compilation.outputOptions.hashFunction);\n\t\t\t}\n\t\t};\n\t\tconst loaderContext = {\n\t\t\tversion: 2,\n\t\t\tgetOptions: schema => {\n\t\t\t\tconst loader = this.getCurrentLoader(loaderContext);\n\n\t\t\t\tlet { options } = loader;\n\n\t\t\t\tif (typeof options === \"string\") {\n\t\t\t\t\tif (options.startsWith(\"{\") && options.endsWith(\"}\")) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\toptions = parseJson(options);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tthrow new Error(`Cannot parse string options: ${e.message}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions = querystring.parse(options, \"&\", \"=\", {\n\t\t\t\t\t\t\tmaxKeys: 0\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (options === null || options === undefined) {\n\t\t\t\t\toptions = {};\n\t\t\t\t}\n\n\t\t\t\tif (schema) {\n\t\t\t\t\tlet name = \"Loader\";\n\t\t\t\t\tlet baseDataPath = \"options\";\n\t\t\t\t\tlet match;\n\t\t\t\t\tif (schema.title && (match = /^(.+) (.+)$/.exec(schema.title))) {\n\t\t\t\t\t\t[, name, baseDataPath] = match;\n\t\t\t\t\t}\n\t\t\t\t\tgetValidate()(schema, options, {\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tbaseDataPath\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn options;\n\t\t\t},\n\t\t\temitWarning: warning => {\n\t\t\t\tif (!(warning instanceof Error)) {\n\t\t\t\t\twarning = new NonErrorEmittedError(warning);\n\t\t\t\t}\n\t\t\t\tthis.addWarning(\n\t\t\t\t\tnew ModuleWarning(warning, {\n\t\t\t\t\t\tfrom: getCurrentLoaderName()\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t},\n\t\t\temitError: error => {\n\t\t\t\tif (!(error instanceof Error)) {\n\t\t\t\t\terror = new NonErrorEmittedError(error);\n\t\t\t\t}\n\t\t\t\tthis.addError(\n\t\t\t\t\tnew ModuleError(error, {\n\t\t\t\t\t\tfrom: getCurrentLoaderName()\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t},\n\t\t\tgetLogger: name => {\n\t\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext);\n\t\t\t\treturn compilation.getLogger(() =>\n\t\t\t\t\t[currentLoader && currentLoader.loader, name, this.identifier()]\n\t\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t\t.join(\"|\")\n\t\t\t\t);\n\t\t\t},\n\t\t\tresolve(context, request, callback) {\n\t\t\t\tresolver.resolve({}, context, request, getResolveContext(), callback);\n\t\t\t},\n\t\t\tgetResolve(options) {\n\t\t\t\tconst child = options ? resolver.withOptions(options) : resolver;\n\t\t\t\treturn (context, request, callback) => {\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tchild.resolve({}, context, request, getResolveContext(), callback);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\t\tchild.resolve(\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\t\tgetResolveContext(),\n\t\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\t\tif (err) reject(err);\n\t\t\t\t\t\t\t\t\telse resolve(result);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\temitFile: (name, content, sourceMap, assetInfo) => {\n\t\t\t\tif (!this.buildInfo.assets) {\n\t\t\t\t\tthis.buildInfo.assets = Object.create(null);\n\t\t\t\t\tthis.buildInfo.assetsInfo = new Map();\n\t\t\t\t}\n\t\t\t\tthis.buildInfo.assets[name] = this.createSourceForAsset(\n\t\t\t\t\toptions.context,\n\t\t\t\t\tname,\n\t\t\t\t\tcontent,\n\t\t\t\t\tsourceMap,\n\t\t\t\t\tcompilation.compiler.root\n\t\t\t\t);\n\t\t\t\tthis.buildInfo.assetsInfo.set(name, assetInfo);\n\t\t\t},\n\t\t\taddBuildDependency: dep => {\n\t\t\t\tif (this.buildInfo.buildDependencies === undefined) {\n\t\t\t\t\tthis.buildInfo.buildDependencies = new LazySet();\n\t\t\t\t}\n\t\t\t\tthis.buildInfo.buildDependencies.add(dep);\n\t\t\t},\n\t\t\tutils,\n\t\t\trootContext: options.context,\n\t\t\twebpack: true,\n\t\t\tsourceMap: !!this.useSourceMap,\n\t\t\tmode: options.mode || \"production\",\n\t\t\t_module: this,\n\t\t\t_compilation: compilation,\n\t\t\t_compiler: compilation.compiler,\n\t\t\tfs: fs\n\t\t};\n\n\t\tObject.assign(loaderContext, options.loader);\n\n\t\thooks.loader.call(loaderContext, this);\n\n\t\treturn loaderContext;\n\t}\n\n\tgetCurrentLoader(loaderContext, index = loaderContext.loaderIndex) {\n\t\tif (\n\t\t\tthis.loaders &&\n\t\t\tthis.loaders.length &&\n\t\t\tindex < this.loaders.length &&\n\t\t\tindex >= 0 &&\n\t\t\tthis.loaders[index]\n\t\t) {\n\t\t\treturn this.loaders[index];\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @param {string} context the compilation context\n\t * @param {string | Buffer} content the content\n\t * @param {string | TODO} sourceMap an optional source map\n\t * @param {Object=} associatedObjectForCache object for caching\n\t * @returns {Source} the created source\n\t */\n\tcreateSource(context, content, sourceMap, associatedObjectForCache) {\n\t\tif (Buffer.isBuffer(content)) {\n\t\t\treturn new RawSource(content);\n\t\t}\n\n\t\t// if there is no identifier return raw source\n\t\tif (!this.identifier) {\n\t\t\treturn new RawSource(content);\n\t\t}\n\n\t\t// from here on we assume we have an identifier\n\t\tconst identifier = this.identifier();\n\n\t\tif (this.useSourceMap && sourceMap) {\n\t\t\treturn new SourceMapSource(\n\t\t\t\tcontent,\n\t\t\t\tcontextifySourceUrl(context, identifier, associatedObjectForCache),\n\t\t\t\tcontextifySourceMap(context, sourceMap, associatedObjectForCache)\n\t\t\t);\n\t\t}\n\n\t\tif (this.useSourceMap || this.useSimpleSourceMap) {\n\t\t\treturn new OriginalSource(\n\t\t\t\tcontent,\n\t\t\t\tcontextifySourceUrl(context, identifier, associatedObjectForCache)\n\t\t\t);\n\t\t}\n\n\t\treturn new RawSource(content);\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {NormalModuleCompilationHooks} hooks the hooks\n\t * @param {function((WebpackError | null)=): void} callback callback function\n\t * @returns {void}\n\t */\n\t_doBuild(options, compilation, resolver, fs, hooks, callback) {\n\t\tconst loaderContext = this._createLoaderContext(\n\t\t\tresolver,\n\t\t\toptions,\n\t\t\tcompilation,\n\t\t\tfs,\n\t\t\thooks\n\t\t);\n\n\t\tconst processResult = (err, result) => {\n\t\t\tif (err) {\n\t\t\t\tif (!(err instanceof Error)) {\n\t\t\t\t\terr = new NonErrorEmittedError(err);\n\t\t\t\t}\n\t\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext);\n\t\t\t\tconst error = new ModuleBuildError(err, {\n\t\t\t\t\tfrom:\n\t\t\t\t\t\tcurrentLoader &&\n\t\t\t\t\t\tcompilation.runtimeTemplate.requestShortener.shorten(\n\t\t\t\t\t\t\tcurrentLoader.loader\n\t\t\t\t\t\t)\n\t\t\t\t});\n\t\t\t\treturn callback(error);\n\t\t\t}\n\n\t\t\tconst source = result[0];\n\t\t\tconst sourceMap = result.length >= 1 ? result[1] : null;\n\t\t\tconst extraInfo = result.length >= 2 ? result[2] : null;\n\n\t\t\tif (!Buffer.isBuffer(source) && typeof source !== \"string\") {\n\t\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext, 0);\n\t\t\t\tconst err = new Error(\n\t\t\t\t\t`Final loader (${\n\t\t\t\t\t\tcurrentLoader\n\t\t\t\t\t\t\t? compilation.runtimeTemplate.requestShortener.shorten(\n\t\t\t\t\t\t\t\t\tcurrentLoader.loader\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: \"unknown\"\n\t\t\t\t\t}) didn't return a Buffer or String`\n\t\t\t\t);\n\t\t\t\tconst error = new ModuleBuildError(err);\n\t\t\t\treturn callback(error);\n\t\t\t}\n\n\t\t\tthis._source = this.createSource(\n\t\t\t\toptions.context,\n\t\t\t\tthis.binary ? asBuffer(source) : asString(source),\n\t\t\t\tsourceMap,\n\t\t\t\tcompilation.compiler.root\n\t\t\t);\n\t\t\tif (this._sourceSizes !== undefined) this._sourceSizes.clear();\n\t\t\tthis._ast =\n\t\t\t\ttypeof extraInfo === \"object\" &&\n\t\t\t\textraInfo !== null &&\n\t\t\t\textraInfo.webpackAST !== undefined\n\t\t\t\t\t? extraInfo.webpackAST\n\t\t\t\t\t: null;\n\t\t\treturn callback();\n\t\t};\n\n\t\tthis.buildInfo.fileDependencies = new LazySet();\n\t\tthis.buildInfo.contextDependencies = new LazySet();\n\t\tthis.buildInfo.missingDependencies = new LazySet();\n\t\tthis.buildInfo.cacheable = true;\n\n\t\ttry {\n\t\t\thooks.beforeLoaders.call(this.loaders, this, loaderContext);\n\t\t} catch (err) {\n\t\t\tprocessResult(err);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.loaders.length > 0) {\n\t\t\tthis.buildInfo.buildDependencies = new LazySet();\n\t\t}\n\n\t\trunLoaders(\n\t\t\t{\n\t\t\t\tresource: this.resource,\n\t\t\t\tloaders: this.loaders,\n\t\t\t\tcontext: loaderContext,\n\t\t\t\tprocessResource: (loaderContext, resourcePath, callback) => {\n\t\t\t\t\tconst resource = loaderContext.resource;\n\t\t\t\t\tconst scheme = getScheme(resource);\n\t\t\t\t\thooks.readResource\n\t\t\t\t\t\t.for(scheme)\n\t\t\t\t\t\t.callAsync(loaderContext, (err, result) => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tif (typeof result !== \"string\" && !result) {\n\t\t\t\t\t\t\t\treturn callback(new UnhandledSchemeError(scheme, resource));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn callback(null, result);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t(err, result) => {\n\t\t\t\t// Cleanup loaderContext to avoid leaking memory in ICs\n\t\t\t\tloaderContext._compilation =\n\t\t\t\t\tloaderContext._compiler =\n\t\t\t\t\tloaderContext._module =\n\t\t\t\t\tloaderContext.fs =\n\t\t\t\t\t\tundefined;\n\n\t\t\t\tif (!result) {\n\t\t\t\t\tthis.buildInfo.cacheable = false;\n\t\t\t\t\treturn processResult(\n\t\t\t\t\t\terr || new Error(\"No result from loader-runner processing\"),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tthis.buildInfo.fileDependencies.addAll(result.fileDependencies);\n\t\t\t\tthis.buildInfo.contextDependencies.addAll(result.contextDependencies);\n\t\t\t\tthis.buildInfo.missingDependencies.addAll(result.missingDependencies);\n\t\t\t\tfor (const loader of this.loaders) {\n\t\t\t\t\tthis.buildInfo.buildDependencies.add(loader.loader);\n\t\t\t\t}\n\t\t\t\tthis.buildInfo.cacheable = this.buildInfo.cacheable && result.cacheable;\n\t\t\t\tprocessResult(err, result.result);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {WebpackError} error the error\n\t * @returns {void}\n\t */\n\tmarkModuleAsErrored(error) {\n\t\t// Restore build meta from successful build to keep importing state\n\t\tthis.buildMeta = { ...this._lastSuccessfulBuildMeta };\n\t\tthis.error = error;\n\t\tthis.addError(error);\n\t}\n\n\tapplyNoParseRule(rule, content) {\n\t\t// must start with \"rule\" if rule is a string\n\t\tif (typeof rule === \"string\") {\n\t\t\treturn content.startsWith(rule);\n\t\t}\n\n\t\tif (typeof rule === \"function\") {\n\t\t\treturn rule(content);\n\t\t}\n\t\t// we assume rule is a regexp\n\t\treturn rule.test(content);\n\t}\n\n\t// check if module should not be parsed\n\t// returns \"true\" if the module should !not! be parsed\n\t// returns \"false\" if the module !must! be parsed\n\tshouldPreventParsing(noParseRule, request) {\n\t\t// if no noParseRule exists, return false\n\t\t// the module !must! be parsed.\n\t\tif (!noParseRule) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// we only have one rule to check\n\t\tif (!Array.isArray(noParseRule)) {\n\t\t\t// returns \"true\" if the module is !not! to be parsed\n\t\t\treturn this.applyNoParseRule(noParseRule, request);\n\t\t}\n\n\t\tfor (let i = 0; i < noParseRule.length; i++) {\n\t\t\tconst rule = noParseRule[i];\n\t\t\t// early exit on first truthy match\n\t\t\t// this module is !not! to be parsed\n\t\t\tif (this.applyNoParseRule(rule, request)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t// no match found, so this module !should! be parsed\n\t\treturn false;\n\t}\n\n\t_initBuildHash(compilation) {\n\t\tconst hash = createHash(compilation.outputOptions.hashFunction);\n\t\tif (this._source) {\n\t\t\thash.update(\"source\");\n\t\t\tthis._source.updateHash(hash);\n\t\t}\n\t\thash.update(\"meta\");\n\t\thash.update(JSON.stringify(this.buildMeta));\n\t\tthis.buildInfo.hash = /** @type {string} */ (hash.digest(\"hex\"));\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {function(WebpackError=): void} callback callback function\n\t * @returns {void}\n\t */\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis._forceBuild = false;\n\t\tthis._source = null;\n\t\tif (this._sourceSizes !== undefined) this._sourceSizes.clear();\n\t\tthis._sourceTypes = undefined;\n\t\tthis._ast = null;\n\t\tthis.error = null;\n\t\tthis.clearWarningsAndErrors();\n\t\tthis.clearDependenciesAndBlocks();\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {\n\t\t\tcacheable: false,\n\t\t\tparsed: true,\n\t\t\tfileDependencies: undefined,\n\t\t\tcontextDependencies: undefined,\n\t\t\tmissingDependencies: undefined,\n\t\t\tbuildDependencies: undefined,\n\t\t\tvalueDependencies: undefined,\n\t\t\thash: undefined,\n\t\t\tassets: undefined,\n\t\t\tassetsInfo: undefined\n\t\t};\n\n\t\tconst startTime = compilation.compiler.fsStartTime || Date.now();\n\n\t\tconst hooks = NormalModule.getCompilationHooks(compilation);\n\n\t\treturn this._doBuild(options, compilation, resolver, fs, hooks, err => {\n\t\t\t// if we have an error mark module as failed and exit\n\t\t\tif (err) {\n\t\t\t\tthis.markModuleAsErrored(err);\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tconst handleParseError = e => {\n\t\t\t\tconst source = this._source.source();\n\t\t\t\tconst loaders = this.loaders.map(item =>\n\t\t\t\t\tcontextify(options.context, item.loader, compilation.compiler.root)\n\t\t\t\t);\n\t\t\t\tconst error = new ModuleParseError(source, e, loaders, this.type);\n\t\t\t\tthis.markModuleAsErrored(error);\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn callback();\n\t\t\t};\n\n\t\t\tconst handleParseResult = result => {\n\t\t\t\tthis.dependencies.sort(\n\t\t\t\t\tconcatComparators(\n\t\t\t\t\t\tcompareSelect(a => a.loc, compareLocations),\n\t\t\t\t\t\tkeepOriginalOrder(this.dependencies)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\tthis._lastSuccessfulBuildMeta = this.buildMeta;\n\t\t\t\treturn handleBuildDone();\n\t\t\t};\n\n\t\t\tconst handleBuildDone = () => {\n\t\t\t\ttry {\n\t\t\t\t\thooks.beforeSnapshot.call(this);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tthis.markModuleAsErrored(err);\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tconst snapshotOptions = compilation.options.snapshot.module;\n\t\t\t\tif (!this.buildInfo.cacheable || !snapshotOptions) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\t// add warning for all non-absolute paths in fileDependencies, etc\n\t\t\t\t// This makes it easier to find problems with watching and/or caching\n\t\t\t\tlet nonAbsoluteDependencies = undefined;\n\t\t\t\tconst checkDependencies = deps => {\n\t\t\t\t\tfor (const dep of deps) {\n\t\t\t\t\t\tif (!ABSOLUTE_PATH_REGEX.test(dep)) {\n\t\t\t\t\t\t\tif (nonAbsoluteDependencies === undefined)\n\t\t\t\t\t\t\t\tnonAbsoluteDependencies = new Set();\n\t\t\t\t\t\t\tnonAbsoluteDependencies.add(dep);\n\t\t\t\t\t\t\tdeps.delete(dep);\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst depWithoutGlob = dep.replace(/[\\\\/]?\\*.*$/, \"\");\n\t\t\t\t\t\t\t\tconst absolute = join(\n\t\t\t\t\t\t\t\t\tcompilation.fileSystemInfo.fs,\n\t\t\t\t\t\t\t\t\tthis.context,\n\t\t\t\t\t\t\t\t\tdepWithoutGlob\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (absolute !== dep && ABSOLUTE_PATH_REGEX.test(absolute)) {\n\t\t\t\t\t\t\t\t\t(depWithoutGlob !== dep\n\t\t\t\t\t\t\t\t\t\t? this.buildInfo.contextDependencies\n\t\t\t\t\t\t\t\t\t\t: deps\n\t\t\t\t\t\t\t\t\t).add(absolute);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tcheckDependencies(this.buildInfo.fileDependencies);\n\t\t\t\tcheckDependencies(this.buildInfo.missingDependencies);\n\t\t\t\tcheckDependencies(this.buildInfo.contextDependencies);\n\t\t\t\tif (nonAbsoluteDependencies !== undefined) {\n\t\t\t\t\tconst InvalidDependenciesModuleWarning =\n\t\t\t\t\t\tgetInvalidDependenciesModuleWarning();\n\t\t\t\t\tthis.addWarning(\n\t\t\t\t\t\tnew InvalidDependenciesModuleWarning(this, nonAbsoluteDependencies)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// convert file/context/missingDependencies into filesystem snapshot\n\t\t\t\tcompilation.fileSystemInfo.createSnapshot(\n\t\t\t\t\tstartTime,\n\t\t\t\t\tthis.buildInfo.fileDependencies,\n\t\t\t\t\tthis.buildInfo.contextDependencies,\n\t\t\t\t\tthis.buildInfo.missingDependencies,\n\t\t\t\t\tsnapshotOptions,\n\t\t\t\t\t(err, snapshot) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tthis.markModuleAsErrored(err);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.buildInfo.fileDependencies = undefined;\n\t\t\t\t\t\tthis.buildInfo.contextDependencies = undefined;\n\t\t\t\t\t\tthis.buildInfo.missingDependencies = undefined;\n\t\t\t\t\t\tthis.buildInfo.snapshot = snapshot;\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\thooks.beforeParse.call(this);\n\t\t\t} catch (err) {\n\t\t\t\tthis.markModuleAsErrored(err);\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\t// check if this module should !not! be parsed.\n\t\t\t// if so, exit here;\n\t\t\tconst noParseRule = options.module && options.module.noParse;\n\t\t\tif (this.shouldPreventParsing(noParseRule, this.request)) {\n\t\t\t\t// We assume that we need module and exports\n\t\t\t\tthis.buildInfo.parsed = false;\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn handleBuildDone();\n\t\t\t}\n\n\t\t\tlet result;\n\t\t\ttry {\n\t\t\t\tconst source = this._source.source();\n\t\t\t\tresult = this.parser.parse(this._ast || source, {\n\t\t\t\t\tsource,\n\t\t\t\t\tcurrent: this,\n\t\t\t\t\tmodule: this,\n\t\t\t\t\tcompilation: compilation,\n\t\t\t\t\toptions: options\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\thandleParseError(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\thandleParseResult(result);\n\t\t});\n\t}\n\n\t/**\n\t * @param {ConcatenationBailoutReasonContext} context context\n\t * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n\t */\n\tgetConcatenationBailoutReason(context) {\n\t\treturn this.generator.getConcatenationBailoutReason(this, context);\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @returns {ConnectionState} how this module should be connected to referencing modules when consumed for side-effects only\n\t */\n\tgetSideEffectsConnectionState(moduleGraph) {\n\t\tif (this.factoryMeta !== undefined) {\n\t\t\tif (this.factoryMeta.sideEffectFree) return false;\n\t\t\tif (this.factoryMeta.sideEffectFree === false) return true;\n\t\t}\n\t\tif (this.buildMeta !== undefined && this.buildMeta.sideEffectFree) {\n\t\t\tif (this._isEvaluatingSideEffects)\n\t\t\t\treturn ModuleGraphConnection.CIRCULAR_CONNECTION;\n\t\t\tthis._isEvaluatingSideEffects = true;\n\t\t\t/** @type {ConnectionState} */\n\t\t\tlet current = false;\n\t\t\tfor (const dep of this.dependencies) {\n\t\t\t\tconst state = dep.getModuleEvaluationSideEffectsState(moduleGraph);\n\t\t\t\tif (state === true) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis._addedSideEffectsBailout === undefined\n\t\t\t\t\t\t\t? ((this._addedSideEffectsBailout = new WeakSet()), true)\n\t\t\t\t\t\t\t: !this._addedSideEffectsBailout.has(moduleGraph)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._addedSideEffectsBailout.add(moduleGraph);\n\t\t\t\t\t\tmoduleGraph\n\t\t\t\t\t\t\t.getOptimizationBailout(this)\n\t\t\t\t\t\t\t.push(\n\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t\t`Dependency (${\n\t\t\t\t\t\t\t\t\t\tdep.type\n\t\t\t\t\t\t\t\t\t}) with side effects at ${formatLocation(dep.loc)}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tthis._isEvaluatingSideEffects = false;\n\t\t\t\t\treturn true;\n\t\t\t\t} else if (state !== ModuleGraphConnection.CIRCULAR_CONNECTION) {\n\t\t\t\t\tcurrent = ModuleGraphConnection.addConnectionStates(current, state);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._isEvaluatingSideEffects = false;\n\t\t\t// When caching is implemented here, make sure to not cache when\n\t\t\t// at least one circular connection was in the loop above\n\t\t\treturn current;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * @returns {Set<string>} types available (do not mutate)\n\t */\n\tgetSourceTypes() {\n\t\tif (this._sourceTypes === undefined) {\n\t\t\tthis._sourceTypes = this.generator.getTypes(this);\n\t\t}\n\t\treturn this._sourceTypes;\n\t}\n\n\t/**\n\t * @param {CodeGenerationContext} context context for code generation\n\t * @returns {CodeGenerationResult} result\n\t */\n\tcodeGeneration({\n\t\tdependencyTemplates,\n\t\truntimeTemplate,\n\t\tmoduleGraph,\n\t\tchunkGraph,\n\t\truntime,\n\t\tconcatenationScope,\n\t\tcodeGenerationResults,\n\t\tsourceTypes\n\t}) {\n\t\t/** @type {Set<string>} */\n\t\tconst runtimeRequirements = new Set();\n\n\t\tif (!this.buildInfo.parsed) {\n\t\t\truntimeRequirements.add(RuntimeGlobals.module);\n\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\t\truntimeRequirements.add(RuntimeGlobals.thisAsExports);\n\t\t}\n\n\t\t/** @type {Map<string, any>} */\n\t\tlet data;\n\t\tconst getData = () => {\n\t\t\tif (data === undefined) data = new Map();\n\t\t\treturn data;\n\t\t};\n\n\t\tconst sources = new Map();\n\t\tfor (const type of sourceTypes || chunkGraph.getModuleSourceTypes(this)) {\n\t\t\tconst source = this.error\n\t\t\t\t? new RawSource(\n\t\t\t\t\t\t\"throw new Error(\" + JSON.stringify(this.error.message) + \");\"\n\t\t\t\t  )\n\t\t\t\t: this.generator.generate(this, {\n\t\t\t\t\t\tdependencyTemplates,\n\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\truntimeRequirements,\n\t\t\t\t\t\truntime,\n\t\t\t\t\t\tconcatenationScope,\n\t\t\t\t\t\tcodeGenerationResults,\n\t\t\t\t\t\tgetData,\n\t\t\t\t\t\ttype\n\t\t\t\t  });\n\n\t\t\tif (source) {\n\t\t\t\tsources.set(type, new CachedSource(source));\n\t\t\t}\n\t\t}\n\n\t\t/** @type {CodeGenerationResult} */\n\t\tconst resultEntry = {\n\t\t\tsources,\n\t\t\truntimeRequirements,\n\t\t\tdata\n\t\t};\n\t\treturn resultEntry;\n\t}\n\n\t/**\n\t * @returns {Source | null} the original source for the module before webpack transformation\n\t */\n\toriginalSource() {\n\t\treturn this._source;\n\t}\n\n\t/**\n\t * @returns {void}\n\t */\n\tinvalidateBuild() {\n\t\tthis._forceBuild = true;\n\t}\n\n\t/**\n\t * @param {NeedBuildContext} context context info\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n\t * @returns {void}\n\t */\n\tneedBuild(context, callback) {\n\t\tconst { fileSystemInfo, compilation, valueCacheVersions } = context;\n\t\t// build if enforced\n\t\tif (this._forceBuild) return callback(null, true);\n\n\t\t// always try to build in case of an error\n\t\tif (this.error) return callback(null, true);\n\n\t\t// always build when module is not cacheable\n\t\tif (!this.buildInfo.cacheable) return callback(null, true);\n\n\t\t// build when there is no snapshot to check\n\t\tif (!this.buildInfo.snapshot) return callback(null, true);\n\n\t\t// build when valueDependencies have changed\n\t\t/** @type {Map<string, string | Set<string>>} */\n\t\tconst valueDependencies = this.buildInfo.valueDependencies;\n\t\tif (valueDependencies) {\n\t\t\tif (!valueCacheVersions) return callback(null, true);\n\t\t\tfor (const [key, value] of valueDependencies) {\n\t\t\t\tif (value === undefined) return callback(null, true);\n\t\t\t\tconst current = valueCacheVersions.get(key);\n\t\t\t\tif (\n\t\t\t\t\tvalue !== current &&\n\t\t\t\t\t(typeof value === \"string\" ||\n\t\t\t\t\t\ttypeof current === \"string\" ||\n\t\t\t\t\t\tcurrent === undefined ||\n\t\t\t\t\t\t!isSubset(value, current))\n\t\t\t\t) {\n\t\t\t\t\treturn callback(null, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// check snapshot for validity\n\t\tfileSystemInfo.checkSnapshotValid(this.buildInfo.snapshot, (err, valid) => {\n\t\t\tif (err) return callback(err);\n\t\t\tif (!valid) return callback(null, true);\n\t\t\tconst hooks = NormalModule.getCompilationHooks(compilation);\n\t\t\thooks.needBuild.callAsync(this, context, (err, needBuild) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(\n\t\t\t\t\t\tHookWebpackError.makeWebpackError(\n\t\t\t\t\t\t\terr,\n\t\t\t\t\t\t\t\"NormalModule.getCompilationHooks().needBuild\"\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcallback(null, !!needBuild);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {string=} type the source type for which the size should be estimated\n\t * @returns {number} the estimated size of the module (must be non-zero)\n\t */\n\tsize(type) {\n\t\tconst cachedSize =\n\t\t\tthis._sourceSizes === undefined ? undefined : this._sourceSizes.get(type);\n\t\tif (cachedSize !== undefined) {\n\t\t\treturn cachedSize;\n\t\t}\n\t\tconst size = Math.max(1, this.generator.getSize(this, type));\n\t\tif (this._sourceSizes === undefined) {\n\t\t\tthis._sourceSizes = new Map();\n\t\t}\n\t\tthis._sourceSizes.set(type, size);\n\t\treturn size;\n\t}\n\n\t/**\n\t * @param {LazySet<string>} fileDependencies set where file dependencies are added to\n\t * @param {LazySet<string>} contextDependencies set where context dependencies are added to\n\t * @param {LazySet<string>} missingDependencies set where missing dependencies are added to\n\t * @param {LazySet<string>} buildDependencies set where build dependencies are added to\n\t */\n\taddCacheDependencies(\n\t\tfileDependencies,\n\t\tcontextDependencies,\n\t\tmissingDependencies,\n\t\tbuildDependencies\n\t) {\n\t\tconst { snapshot, buildDependencies: buildDeps } = this.buildInfo;\n\t\tif (snapshot) {\n\t\t\tfileDependencies.addAll(snapshot.getFileIterable());\n\t\t\tcontextDependencies.addAll(snapshot.getContextIterable());\n\t\t\tmissingDependencies.addAll(snapshot.getMissingIterable());\n\t\t} else {\n\t\t\tconst {\n\t\t\t\tfileDependencies: fileDeps,\n\t\t\t\tcontextDependencies: contextDeps,\n\t\t\t\tmissingDependencies: missingDeps\n\t\t\t} = this.buildInfo;\n\t\t\tif (fileDeps !== undefined) fileDependencies.addAll(fileDeps);\n\t\t\tif (contextDeps !== undefined) contextDependencies.addAll(contextDeps);\n\t\t\tif (missingDeps !== undefined) missingDependencies.addAll(missingDeps);\n\t\t}\n\t\tif (buildDeps !== undefined) {\n\t\t\tbuildDependencies.addAll(buildDeps);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @param {UpdateHashContext} context context\n\t * @returns {void}\n\t */\n\tupdateHash(hash, context) {\n\t\thash.update(this.buildInfo.hash);\n\t\tthis.generator.updateHash(hash, {\n\t\t\tmodule: this,\n\t\t\t...context\n\t\t});\n\t\tsuper.updateHash(hash, context);\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\t// deserialize\n\t\twrite(this._source);\n\t\twrite(this.error);\n\t\twrite(this._lastSuccessfulBuildMeta);\n\t\twrite(this._forceBuild);\n\t\tsuper.serialize(context);\n\t}\n\n\tstatic deserialize(context) {\n\t\tconst obj = new NormalModule({\n\t\t\t// will be deserialized by Module\n\t\t\tlayer: null,\n\t\t\ttype: \"\",\n\t\t\t// will be filled by updateCacheModule\n\t\t\tresource: \"\",\n\t\t\tcontext: \"\",\n\t\t\trequest: null,\n\t\t\tuserRequest: null,\n\t\t\trawRequest: null,\n\t\t\tloaders: null,\n\t\t\tmatchResource: null,\n\t\t\tparser: null,\n\t\t\tparserOptions: null,\n\t\t\tgenerator: null,\n\t\t\tgeneratorOptions: null,\n\t\t\tresolveOptions: null\n\t\t});\n\t\tobj.deserialize(context);\n\t\treturn obj;\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis._source = read();\n\t\tthis.error = read();\n\t\tthis._lastSuccessfulBuildMeta = read();\n\t\tthis._forceBuild = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(NormalModule, \"webpack/lib/NormalModule\");\n\nmodule.exports = NormalModule;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}