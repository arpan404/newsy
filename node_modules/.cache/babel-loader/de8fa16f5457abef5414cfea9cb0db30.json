{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\"use strict\";\n\nconst WebpackError = require(\"../WebpackError\");\n\nconst {\n  parseOptions\n} = require(\"../container/options\");\n\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\n\nconst ProvideForSharedDependency = require(\"./ProvideForSharedDependency\");\n\nconst ProvideSharedDependency = require(\"./ProvideSharedDependency\");\n\nconst ProvideSharedModuleFactory = require(\"./ProvideSharedModuleFactory\");\n/** @typedef {import(\"../../declarations/plugins/sharing/ProvideSharedPlugin\").ProvideSharedPluginOptions} ProvideSharedPluginOptions */\n\n/** @typedef {import(\"../Compilation\")} Compilation */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n\nconst validate = createSchemaValidation(require(\"../../schemas/plugins/sharing/ProvideSharedPlugin.check.js\"), () => require(\"../../schemas/plugins/sharing/ProvideSharedPlugin.json\"), {\n  name: \"Provide Shared Plugin\",\n  baseDataPath: \"options\"\n});\n/**\n * @typedef {Object} ProvideOptions\n * @property {string} shareKey\n * @property {string} shareScope\n * @property {string | undefined | false} version\n * @property {boolean} eager\n */\n\n/** @typedef {Map<string, { config: ProvideOptions, version: string | undefined | false }>} ResolvedProvideMap */\n\nclass ProvideSharedPlugin {\n  /**\n   * @param {ProvideSharedPluginOptions} options options\n   */\n  constructor(options) {\n    validate(options);\n    /** @type {[string, ProvideOptions][]} */\n\n    this._provides = parseOptions(options.provides, item => {\n      if (Array.isArray(item)) throw new Error(\"Unexpected array of provides\");\n      /** @type {ProvideOptions} */\n\n      const result = {\n        shareKey: item,\n        version: undefined,\n        shareScope: options.shareScope || \"default\",\n        eager: false\n      };\n      return result;\n    }, item => ({\n      shareKey: item.shareKey,\n      version: item.version,\n      shareScope: item.shareScope || options.shareScope || \"default\",\n      eager: !!item.eager\n    }));\n\n    this._provides.sort((_ref, _ref2) => {\n      let [a] = _ref;\n      let [b] = _ref2;\n      if (a < b) return -1;\n      if (b < a) return 1;\n      return 0;\n    });\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    /** @type {WeakMap<Compilation, ResolvedProvideMap>} */\n    const compilationData = new WeakMap();\n    compiler.hooks.compilation.tap(\"ProvideSharedPlugin\", (compilation, _ref3) => {\n      let {\n        normalModuleFactory\n      } = _ref3;\n\n      /** @type {ResolvedProvideMap} */\n      const resolvedProvideMap = new Map();\n      /** @type {Map<string, ProvideOptions>} */\n\n      const matchProvides = new Map();\n      /** @type {Map<string, ProvideOptions>} */\n\n      const prefixMatchProvides = new Map();\n\n      for (const [request, config] of this._provides) {\n        if (/^(\\/|[A-Za-z]:\\\\|\\\\\\\\|\\.\\.?(\\/|$))/.test(request)) {\n          // relative request\n          resolvedProvideMap.set(request, {\n            config,\n            version: config.version\n          });\n        } else if (/^(\\/|[A-Za-z]:\\\\|\\\\\\\\)/.test(request)) {\n          // absolute path\n          resolvedProvideMap.set(request, {\n            config,\n            version: config.version\n          });\n        } else if (request.endsWith(\"/\")) {\n          // module request prefix\n          prefixMatchProvides.set(request, config);\n        } else {\n          // module request\n          matchProvides.set(request, config);\n        }\n      }\n\n      compilationData.set(compilation, resolvedProvideMap);\n\n      const provideSharedModule = (key, config, resource, resourceResolveData) => {\n        let version = config.version;\n\n        if (version === undefined) {\n          let details = \"\";\n\n          if (!resourceResolveData) {\n            details = `No resolve data provided from resolver.`;\n          } else {\n            const descriptionFileData = resourceResolveData.descriptionFileData;\n\n            if (!descriptionFileData) {\n              details = \"No description file (usually package.json) found. Add description file with name and version, or manually specify version in shared config.\";\n            } else if (!descriptionFileData.version) {\n              details = `No version in description file (usually package.json). Add version to description file ${resourceResolveData.descriptionFilePath}, or manually specify version in shared config.`;\n            } else {\n              version = descriptionFileData.version;\n            }\n          }\n\n          if (!version) {\n            const error = new WebpackError(`No version specified and unable to automatically determine one. ${details}`);\n            error.file = `shared module ${key} -> ${resource}`;\n            compilation.warnings.push(error);\n          }\n        }\n\n        resolvedProvideMap.set(resource, {\n          config,\n          version\n        });\n      };\n\n      normalModuleFactory.hooks.module.tap(\"ProvideSharedPlugin\", (module, _ref4, resolveData) => {\n        let {\n          resource,\n          resourceResolveData\n        } = _ref4;\n\n        if (resolvedProvideMap.has(resource)) {\n          return module;\n        }\n\n        const {\n          request\n        } = resolveData;\n        {\n          const config = matchProvides.get(request);\n\n          if (config !== undefined) {\n            provideSharedModule(request, config, resource, resourceResolveData);\n            resolveData.cacheable = false;\n          }\n        }\n\n        for (const [prefix, config] of prefixMatchProvides) {\n          if (request.startsWith(prefix)) {\n            const remainder = request.slice(prefix.length);\n            provideSharedModule(resource, { ...config,\n              shareKey: config.shareKey + remainder\n            }, resource, resourceResolveData);\n            resolveData.cacheable = false;\n          }\n        }\n\n        return module;\n      });\n    });\n    compiler.hooks.finishMake.tapPromise(\"ProvideSharedPlugin\", compilation => {\n      const resolvedProvideMap = compilationData.get(compilation);\n      if (!resolvedProvideMap) return Promise.resolve();\n      return Promise.all(Array.from(resolvedProvideMap, _ref5 => {\n        let [resource, {\n          config,\n          version\n        }] = _ref5;\n        return new Promise((resolve, reject) => {\n          compilation.addInclude(compiler.context, new ProvideSharedDependency(config.shareScope, config.shareKey, version || false, resource, config.eager), {\n            name: undefined\n          }, err => {\n            if (err) return reject(err);\n            resolve();\n          });\n        });\n      })).then(() => {});\n    });\n    compiler.hooks.compilation.tap(\"ProvideSharedPlugin\", (compilation, _ref6) => {\n      let {\n        normalModuleFactory\n      } = _ref6;\n      compilation.dependencyFactories.set(ProvideForSharedDependency, normalModuleFactory);\n      compilation.dependencyFactories.set(ProvideSharedDependency, new ProvideSharedModuleFactory());\n    });\n  }\n\n}\n\nmodule.exports = ProvideSharedPlugin;","map":{"version":3,"names":["WebpackError","require","parseOptions","createSchemaValidation","ProvideForSharedDependency","ProvideSharedDependency","ProvideSharedModuleFactory","validate","name","baseDataPath","ProvideSharedPlugin","constructor","options","_provides","provides","item","Array","isArray","Error","result","shareKey","version","undefined","shareScope","eager","sort","a","b","apply","compiler","compilationData","WeakMap","hooks","compilation","tap","normalModuleFactory","resolvedProvideMap","Map","matchProvides","prefixMatchProvides","request","config","test","set","endsWith","provideSharedModule","key","resource","resourceResolveData","details","descriptionFileData","descriptionFilePath","error","file","warnings","push","module","resolveData","has","get","cacheable","prefix","startsWith","remainder","slice","length","finishMake","tapPromise","Promise","resolve","all","from","reject","addInclude","context","err","then","dependencyFactories","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/sharing/ProvideSharedPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\n\"use strict\";\n\nconst WebpackError = require(\"../WebpackError\");\nconst { parseOptions } = require(\"../container/options\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst ProvideForSharedDependency = require(\"./ProvideForSharedDependency\");\nconst ProvideSharedDependency = require(\"./ProvideSharedDependency\");\nconst ProvideSharedModuleFactory = require(\"./ProvideSharedModuleFactory\");\n\n/** @typedef {import(\"../../declarations/plugins/sharing/ProvideSharedPlugin\").ProvideSharedPluginOptions} ProvideSharedPluginOptions */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nconst validate = createSchemaValidation(\n\trequire(\"../../schemas/plugins/sharing/ProvideSharedPlugin.check.js\"),\n\t() => require(\"../../schemas/plugins/sharing/ProvideSharedPlugin.json\"),\n\t{\n\t\tname: \"Provide Shared Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\n\n/**\n * @typedef {Object} ProvideOptions\n * @property {string} shareKey\n * @property {string} shareScope\n * @property {string | undefined | false} version\n * @property {boolean} eager\n */\n\n/** @typedef {Map<string, { config: ProvideOptions, version: string | undefined | false }>} ResolvedProvideMap */\n\nclass ProvideSharedPlugin {\n\t/**\n\t * @param {ProvideSharedPluginOptions} options options\n\t */\n\tconstructor(options) {\n\t\tvalidate(options);\n\n\t\t/** @type {[string, ProvideOptions][]} */\n\t\tthis._provides = parseOptions(\n\t\t\toptions.provides,\n\t\t\titem => {\n\t\t\t\tif (Array.isArray(item))\n\t\t\t\t\tthrow new Error(\"Unexpected array of provides\");\n\t\t\t\t/** @type {ProvideOptions} */\n\t\t\t\tconst result = {\n\t\t\t\t\tshareKey: item,\n\t\t\t\t\tversion: undefined,\n\t\t\t\t\tshareScope: options.shareScope || \"default\",\n\t\t\t\t\teager: false\n\t\t\t\t};\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\titem => ({\n\t\t\t\tshareKey: item.shareKey,\n\t\t\t\tversion: item.version,\n\t\t\t\tshareScope: item.shareScope || options.shareScope || \"default\",\n\t\t\t\teager: !!item.eager\n\t\t\t})\n\t\t);\n\t\tthis._provides.sort(([a], [b]) => {\n\t\t\tif (a < b) return -1;\n\t\t\tif (b < a) return 1;\n\t\t\treturn 0;\n\t\t});\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\t/** @type {WeakMap<Compilation, ResolvedProvideMap>} */\n\t\tconst compilationData = new WeakMap();\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ProvideSharedPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\t/** @type {ResolvedProvideMap} */\n\t\t\t\tconst resolvedProvideMap = new Map();\n\t\t\t\t/** @type {Map<string, ProvideOptions>} */\n\t\t\t\tconst matchProvides = new Map();\n\t\t\t\t/** @type {Map<string, ProvideOptions>} */\n\t\t\t\tconst prefixMatchProvides = new Map();\n\t\t\t\tfor (const [request, config] of this._provides) {\n\t\t\t\t\tif (/^(\\/|[A-Za-z]:\\\\|\\\\\\\\|\\.\\.?(\\/|$))/.test(request)) {\n\t\t\t\t\t\t// relative request\n\t\t\t\t\t\tresolvedProvideMap.set(request, {\n\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t\tversion: config.version\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (/^(\\/|[A-Za-z]:\\\\|\\\\\\\\)/.test(request)) {\n\t\t\t\t\t\t// absolute path\n\t\t\t\t\t\tresolvedProvideMap.set(request, {\n\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t\tversion: config.version\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (request.endsWith(\"/\")) {\n\t\t\t\t\t\t// module request prefix\n\t\t\t\t\t\tprefixMatchProvides.set(request, config);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// module request\n\t\t\t\t\t\tmatchProvides.set(request, config);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcompilationData.set(compilation, resolvedProvideMap);\n\t\t\t\tconst provideSharedModule = (\n\t\t\t\t\tkey,\n\t\t\t\t\tconfig,\n\t\t\t\t\tresource,\n\t\t\t\t\tresourceResolveData\n\t\t\t\t) => {\n\t\t\t\t\tlet version = config.version;\n\t\t\t\t\tif (version === undefined) {\n\t\t\t\t\t\tlet details = \"\";\n\t\t\t\t\t\tif (!resourceResolveData) {\n\t\t\t\t\t\t\tdetails = `No resolve data provided from resolver.`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst descriptionFileData =\n\t\t\t\t\t\t\t\tresourceResolveData.descriptionFileData;\n\t\t\t\t\t\t\tif (!descriptionFileData) {\n\t\t\t\t\t\t\t\tdetails =\n\t\t\t\t\t\t\t\t\t\"No description file (usually package.json) found. Add description file with name and version, or manually specify version in shared config.\";\n\t\t\t\t\t\t\t} else if (!descriptionFileData.version) {\n\t\t\t\t\t\t\t\tdetails = `No version in description file (usually package.json). Add version to description file ${resourceResolveData.descriptionFilePath}, or manually specify version in shared config.`;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tversion = descriptionFileData.version;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!version) {\n\t\t\t\t\t\t\tconst error = new WebpackError(\n\t\t\t\t\t\t\t\t`No version specified and unable to automatically determine one. ${details}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\terror.file = `shared module ${key} -> ${resource}`;\n\t\t\t\t\t\t\tcompilation.warnings.push(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresolvedProvideMap.set(resource, {\n\t\t\t\t\t\tconfig,\n\t\t\t\t\t\tversion\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tnormalModuleFactory.hooks.module.tap(\n\t\t\t\t\t\"ProvideSharedPlugin\",\n\t\t\t\t\t(module, { resource, resourceResolveData }, resolveData) => {\n\t\t\t\t\t\tif (resolvedProvideMap.has(resource)) {\n\t\t\t\t\t\t\treturn module;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst { request } = resolveData;\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst config = matchProvides.get(request);\n\t\t\t\t\t\t\tif (config !== undefined) {\n\t\t\t\t\t\t\t\tprovideSharedModule(\n\t\t\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t\tresourceResolveData\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tresolveData.cacheable = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const [prefix, config] of prefixMatchProvides) {\n\t\t\t\t\t\t\tif (request.startsWith(prefix)) {\n\t\t\t\t\t\t\t\tconst remainder = request.slice(prefix.length);\n\t\t\t\t\t\t\t\tprovideSharedModule(\n\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t...config,\n\t\t\t\t\t\t\t\t\t\tshareKey: config.shareKey + remainder\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t\tresourceResolveData\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tresolveData.cacheable = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn module;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t\tcompiler.hooks.finishMake.tapPromise(\"ProvideSharedPlugin\", compilation => {\n\t\t\tconst resolvedProvideMap = compilationData.get(compilation);\n\t\t\tif (!resolvedProvideMap) return Promise.resolve();\n\t\t\treturn Promise.all(\n\t\t\t\tArray.from(\n\t\t\t\t\tresolvedProvideMap,\n\t\t\t\t\t([resource, { config, version }]) =>\n\t\t\t\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\t\t\t\tcompilation.addInclude(\n\t\t\t\t\t\t\t\tcompiler.context,\n\t\t\t\t\t\t\t\tnew ProvideSharedDependency(\n\t\t\t\t\t\t\t\t\tconfig.shareScope,\n\t\t\t\t\t\t\t\t\tconfig.shareKey,\n\t\t\t\t\t\t\t\t\tversion || false,\n\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t\tconfig.eager\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: undefined\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t\t\tif (err) return reject(err);\n\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t).then(() => {});\n\t\t});\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ProvideSharedPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tProvideForSharedDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tProvideSharedDependency,\n\t\t\t\t\tnew ProvideSharedModuleFactory()\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ProvideSharedPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAA5B;;AACA,MAAM;EAAEC;AAAF,IAAmBD,OAAO,CAAC,sBAAD,CAAhC;;AACA,MAAME,sBAAsB,GAAGF,OAAO,CAAC,kCAAD,CAAtC;;AACA,MAAMG,0BAA0B,GAAGH,OAAO,CAAC,8BAAD,CAA1C;;AACA,MAAMI,uBAAuB,GAAGJ,OAAO,CAAC,2BAAD,CAAvC;;AACA,MAAMK,0BAA0B,GAAGL,OAAO,CAAC,8BAAD,CAA1C;AAEA;;AACA;;AACA;;;AAEA,MAAMM,QAAQ,GAAGJ,sBAAsB,CACtCF,OAAO,CAAC,4DAAD,CAD+B,EAEtC,MAAMA,OAAO,CAAC,wDAAD,CAFyB,EAGtC;EACCO,IAAI,EAAE,uBADP;EAECC,YAAY,EAAE;AAFf,CAHsC,CAAvC;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAMC,mBAAN,CAA0B;EACzB;AACD;AACA;EACCC,WAAW,CAACC,OAAD,EAAU;IACpBL,QAAQ,CAACK,OAAD,CAAR;IAEA;;IACA,KAAKC,SAAL,GAAiBX,YAAY,CAC5BU,OAAO,CAACE,QADoB,EAE5BC,IAAI,IAAI;MACP,IAAIC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAJ,EACC,MAAM,IAAIG,KAAJ,CAAU,8BAAV,CAAN;MACD;;MACA,MAAMC,MAAM,GAAG;QACdC,QAAQ,EAAEL,IADI;QAEdM,OAAO,EAAEC,SAFK;QAGdC,UAAU,EAAEX,OAAO,CAACW,UAAR,IAAsB,SAHpB;QAIdC,KAAK,EAAE;MAJO,CAAf;MAMA,OAAOL,MAAP;IACA,CAb2B,EAc5BJ,IAAI,KAAK;MACRK,QAAQ,EAAEL,IAAI,CAACK,QADP;MAERC,OAAO,EAAEN,IAAI,CAACM,OAFN;MAGRE,UAAU,EAAER,IAAI,CAACQ,UAAL,IAAmBX,OAAO,CAACW,UAA3B,IAAyC,SAH7C;MAIRC,KAAK,EAAE,CAAC,CAACT,IAAI,CAACS;IAJN,CAAL,CAdwB,CAA7B;;IAqBA,KAAKX,SAAL,CAAeY,IAAf,CAAoB,iBAAc;MAAA,IAAb,CAACC,CAAD,CAAa;MAAA,IAAR,CAACC,CAAD,CAAQ;MACjC,IAAID,CAAC,GAAGC,CAAR,EAAW,OAAO,CAAC,CAAR;MACX,IAAIA,CAAC,GAAGD,CAAR,EAAW,OAAO,CAAP;MACX,OAAO,CAAP;IACA,CAJD;EAKA;EAED;AACD;AACA;AACA;AACA;;;EACCE,KAAK,CAACC,QAAD,EAAW;IACf;IACA,MAAMC,eAAe,GAAG,IAAIC,OAAJ,EAAxB;IAEAF,QAAQ,CAACG,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,qBADD,EAEC,CAACD,WAAD,YAA0C;MAAA,IAA5B;QAAEE;MAAF,CAA4B;;MACzC;MACA,MAAMC,kBAAkB,GAAG,IAAIC,GAAJ,EAA3B;MACA;;MACA,MAAMC,aAAa,GAAG,IAAID,GAAJ,EAAtB;MACA;;MACA,MAAME,mBAAmB,GAAG,IAAIF,GAAJ,EAA5B;;MACA,KAAK,MAAM,CAACG,OAAD,EAAUC,MAAV,CAAX,IAAgC,KAAK5B,SAArC,EAAgD;QAC/C,IAAI,qCAAqC6B,IAArC,CAA0CF,OAA1C,CAAJ,EAAwD;UACvD;UACAJ,kBAAkB,CAACO,GAAnB,CAAuBH,OAAvB,EAAgC;YAC/BC,MAD+B;YAE/BpB,OAAO,EAAEoB,MAAM,CAACpB;UAFe,CAAhC;QAIA,CAND,MAMO,IAAI,yBAAyBqB,IAAzB,CAA8BF,OAA9B,CAAJ,EAA4C;UAClD;UACAJ,kBAAkB,CAACO,GAAnB,CAAuBH,OAAvB,EAAgC;YAC/BC,MAD+B;YAE/BpB,OAAO,EAAEoB,MAAM,CAACpB;UAFe,CAAhC;QAIA,CANM,MAMA,IAAImB,OAAO,CAACI,QAAR,CAAiB,GAAjB,CAAJ,EAA2B;UACjC;UACAL,mBAAmB,CAACI,GAApB,CAAwBH,OAAxB,EAAiCC,MAAjC;QACA,CAHM,MAGA;UACN;UACAH,aAAa,CAACK,GAAd,CAAkBH,OAAlB,EAA2BC,MAA3B;QACA;MACD;;MACDX,eAAe,CAACa,GAAhB,CAAoBV,WAApB,EAAiCG,kBAAjC;;MACA,MAAMS,mBAAmB,GAAG,CAC3BC,GAD2B,EAE3BL,MAF2B,EAG3BM,QAH2B,EAI3BC,mBAJ2B,KAKvB;QACJ,IAAI3B,OAAO,GAAGoB,MAAM,CAACpB,OAArB;;QACA,IAAIA,OAAO,KAAKC,SAAhB,EAA2B;UAC1B,IAAI2B,OAAO,GAAG,EAAd;;UACA,IAAI,CAACD,mBAAL,EAA0B;YACzBC,OAAO,GAAI,yCAAX;UACA,CAFD,MAEO;YACN,MAAMC,mBAAmB,GACxBF,mBAAmB,CAACE,mBADrB;;YAEA,IAAI,CAACA,mBAAL,EAA0B;cACzBD,OAAO,GACN,6IADD;YAEA,CAHD,MAGO,IAAI,CAACC,mBAAmB,CAAC7B,OAAzB,EAAkC;cACxC4B,OAAO,GAAI,0FAAyFD,mBAAmB,CAACG,mBAAoB,iDAA5I;YACA,CAFM,MAEA;cACN9B,OAAO,GAAG6B,mBAAmB,CAAC7B,OAA9B;YACA;UACD;;UACD,IAAI,CAACA,OAAL,EAAc;YACb,MAAM+B,KAAK,GAAG,IAAIpD,YAAJ,CACZ,mEAAkEiD,OAAQ,EAD9D,CAAd;YAGAG,KAAK,CAACC,IAAN,GAAc,iBAAgBP,GAAI,OAAMC,QAAS,EAAjD;YACAd,WAAW,CAACqB,QAAZ,CAAqBC,IAArB,CAA0BH,KAA1B;UACA;QACD;;QACDhB,kBAAkB,CAACO,GAAnB,CAAuBI,QAAvB,EAAiC;UAChCN,MADgC;UAEhCpB;QAFgC,CAAjC;MAIA,CAnCD;;MAoCAc,mBAAmB,CAACH,KAApB,CAA0BwB,MAA1B,CAAiCtB,GAAjC,CACC,qBADD,EAEC,CAACsB,MAAD,SAA4CC,WAA5C,KAA4D;QAAA,IAAnD;UAAEV,QAAF;UAAYC;QAAZ,CAAmD;;QAC3D,IAAIZ,kBAAkB,CAACsB,GAAnB,CAAuBX,QAAvB,CAAJ,EAAsC;UACrC,OAAOS,MAAP;QACA;;QACD,MAAM;UAAEhB;QAAF,IAAciB,WAApB;QACA;UACC,MAAMhB,MAAM,GAAGH,aAAa,CAACqB,GAAd,CAAkBnB,OAAlB,CAAf;;UACA,IAAIC,MAAM,KAAKnB,SAAf,EAA0B;YACzBuB,mBAAmB,CAClBL,OADkB,EAElBC,MAFkB,EAGlBM,QAHkB,EAIlBC,mBAJkB,CAAnB;YAMAS,WAAW,CAACG,SAAZ,GAAwB,KAAxB;UACA;QACD;;QACD,KAAK,MAAM,CAACC,MAAD,EAASpB,MAAT,CAAX,IAA+BF,mBAA/B,EAAoD;UACnD,IAAIC,OAAO,CAACsB,UAAR,CAAmBD,MAAnB,CAAJ,EAAgC;YAC/B,MAAME,SAAS,GAAGvB,OAAO,CAACwB,KAAR,CAAcH,MAAM,CAACI,MAArB,CAAlB;YACApB,mBAAmB,CAClBE,QADkB,EAElB,EACC,GAAGN,MADJ;cAECrB,QAAQ,EAAEqB,MAAM,CAACrB,QAAP,GAAkB2C;YAF7B,CAFkB,EAMlBhB,QANkB,EAOlBC,mBAPkB,CAAnB;YASAS,WAAW,CAACG,SAAZ,GAAwB,KAAxB;UACA;QACD;;QACD,OAAOJ,MAAP;MACA,CAnCF;IAqCA,CAxGF;IA0GA3B,QAAQ,CAACG,KAAT,CAAekC,UAAf,CAA0BC,UAA1B,CAAqC,qBAArC,EAA4DlC,WAAW,IAAI;MAC1E,MAAMG,kBAAkB,GAAGN,eAAe,CAAC6B,GAAhB,CAAoB1B,WAApB,CAA3B;MACA,IAAI,CAACG,kBAAL,EAAyB,OAAOgC,OAAO,CAACC,OAAR,EAAP;MACzB,OAAOD,OAAO,CAACE,GAAR,CACNtD,KAAK,CAACuD,IAAN,CACCnC,kBADD,EAEC;QAAA,IAAC,CAACW,QAAD,EAAW;UAAEN,MAAF;UAAUpB;QAAV,CAAX,CAAD;QAAA,OACC,IAAI+C,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;UAChCvC,WAAW,CAACwC,UAAZ,CACC5C,QAAQ,CAAC6C,OADV,EAEC,IAAIrE,uBAAJ,CACCoC,MAAM,CAAClB,UADR,EAECkB,MAAM,CAACrB,QAFR,EAGCC,OAAO,IAAI,KAHZ,EAIC0B,QAJD,EAKCN,MAAM,CAACjB,KALR,CAFD,EASC;YACChB,IAAI,EAAEc;UADP,CATD,EAYCqD,GAAG,IAAI;YACN,IAAIA,GAAJ,EAAS,OAAOH,MAAM,CAACG,GAAD,CAAb;YACTN,OAAO;UACP,CAfF;QAiBA,CAlBD,CADD;MAAA,CAFD,CADM,EAwBLO,IAxBK,CAwBA,MAAM,CAAE,CAxBR,CAAP;IAyBA,CA5BD;IA8BA/C,QAAQ,CAACG,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,qBADD,EAEC,CAACD,WAAD,YAA0C;MAAA,IAA5B;QAAEE;MAAF,CAA4B;MACzCF,WAAW,CAAC4C,mBAAZ,CAAgClC,GAAhC,CACCvC,0BADD,EAEC+B,mBAFD;MAKAF,WAAW,CAAC4C,mBAAZ,CAAgClC,GAAhC,CACCtC,uBADD,EAEC,IAAIC,0BAAJ,EAFD;IAIA,CAZF;EAcA;;AAnMwB;;AAsM1BkD,MAAM,CAACsB,OAAP,GAAiBpE,mBAAjB"},"metadata":{},"sourceType":"script"}