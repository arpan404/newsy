{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst binarySearchBounds = require(\"../util/binarySearchBounds\");\n\nclass ParallelismFactorCalculator {\n  constructor() {\n    this._rangePoints = [];\n    this._rangeCallbacks = [];\n  }\n\n  range(start, end, callback) {\n    if (start === end) return callback(1);\n\n    this._rangePoints.push(start);\n\n    this._rangePoints.push(end);\n\n    this._rangeCallbacks.push(callback);\n  }\n\n  calculate() {\n    const segments = Array.from(new Set(this._rangePoints)).sort((a, b) => a < b ? -1 : 1);\n    const parallelism = segments.map(() => 0);\n    const rangeStartIndices = [];\n\n    for (let i = 0; i < this._rangePoints.length; i += 2) {\n      const start = this._rangePoints[i];\n      const end = this._rangePoints[i + 1];\n      let idx = binarySearchBounds.eq(segments, start);\n      rangeStartIndices.push(idx);\n\n      do {\n        parallelism[idx]++;\n        idx++;\n      } while (segments[idx] < end);\n    }\n\n    for (let i = 0; i < this._rangeCallbacks.length; i++) {\n      const start = this._rangePoints[i * 2];\n      const end = this._rangePoints[i * 2 + 1];\n      let idx = rangeStartIndices[i];\n      let sum = 0;\n      let totalDuration = 0;\n      let current = start;\n\n      do {\n        const p = parallelism[idx];\n        idx++;\n        const duration = segments[idx] - current;\n        totalDuration += duration;\n        current = segments[idx];\n        sum += p * duration;\n      } while (current < end);\n\n      this._rangeCallbacks[i](sum / totalDuration);\n    }\n  }\n\n}\n\nmodule.exports = ParallelismFactorCalculator;","map":{"version":3,"names":["binarySearchBounds","require","ParallelismFactorCalculator","constructor","_rangePoints","_rangeCallbacks","range","start","end","callback","push","calculate","segments","Array","from","Set","sort","a","b","parallelism","map","rangeStartIndices","i","length","idx","eq","sum","totalDuration","current","p","duration","module","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/util/ParallelismFactorCalculator.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst binarySearchBounds = require(\"../util/binarySearchBounds\");\n\nclass ParallelismFactorCalculator {\n\tconstructor() {\n\t\tthis._rangePoints = [];\n\t\tthis._rangeCallbacks = [];\n\t}\n\n\trange(start, end, callback) {\n\t\tif (start === end) return callback(1);\n\t\tthis._rangePoints.push(start);\n\t\tthis._rangePoints.push(end);\n\t\tthis._rangeCallbacks.push(callback);\n\t}\n\n\tcalculate() {\n\t\tconst segments = Array.from(new Set(this._rangePoints)).sort((a, b) =>\n\t\t\ta < b ? -1 : 1\n\t\t);\n\t\tconst parallelism = segments.map(() => 0);\n\t\tconst rangeStartIndices = [];\n\t\tfor (let i = 0; i < this._rangePoints.length; i += 2) {\n\t\t\tconst start = this._rangePoints[i];\n\t\t\tconst end = this._rangePoints[i + 1];\n\t\t\tlet idx = binarySearchBounds.eq(segments, start);\n\t\t\trangeStartIndices.push(idx);\n\t\t\tdo {\n\t\t\t\tparallelism[idx]++;\n\t\t\t\tidx++;\n\t\t\t} while (segments[idx] < end);\n\t\t}\n\t\tfor (let i = 0; i < this._rangeCallbacks.length; i++) {\n\t\t\tconst start = this._rangePoints[i * 2];\n\t\t\tconst end = this._rangePoints[i * 2 + 1];\n\t\t\tlet idx = rangeStartIndices[i];\n\t\t\tlet sum = 0;\n\t\t\tlet totalDuration = 0;\n\t\t\tlet current = start;\n\t\t\tdo {\n\t\t\t\tconst p = parallelism[idx];\n\t\t\t\tidx++;\n\t\t\t\tconst duration = segments[idx] - current;\n\t\t\t\ttotalDuration += duration;\n\t\t\t\tcurrent = segments[idx];\n\t\t\t\tsum += p * duration;\n\t\t\t} while (current < end);\n\t\t\tthis._rangeCallbacks[i](sum / totalDuration);\n\t\t}\n\t}\n}\n\nmodule.exports = ParallelismFactorCalculator;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,kBAAkB,GAAGC,OAAO,CAAC,4BAAD,CAAlC;;AAEA,MAAMC,2BAAN,CAAkC;EACjCC,WAAW,GAAG;IACb,KAAKC,YAAL,GAAoB,EAApB;IACA,KAAKC,eAAL,GAAuB,EAAvB;EACA;;EAEDC,KAAK,CAACC,KAAD,EAAQC,GAAR,EAAaC,QAAb,EAAuB;IAC3B,IAAIF,KAAK,KAAKC,GAAd,EAAmB,OAAOC,QAAQ,CAAC,CAAD,CAAf;;IACnB,KAAKL,YAAL,CAAkBM,IAAlB,CAAuBH,KAAvB;;IACA,KAAKH,YAAL,CAAkBM,IAAlB,CAAuBF,GAAvB;;IACA,KAAKH,eAAL,CAAqBK,IAArB,CAA0BD,QAA1B;EACA;;EAEDE,SAAS,GAAG;IACX,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQ,KAAKX,YAAb,CAAX,EAAuCY,IAAvC,CAA4C,CAACC,CAAD,EAAIC,CAAJ,KAC5DD,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAa,CADG,CAAjB;IAGA,MAAMC,WAAW,GAAGP,QAAQ,CAACQ,GAAT,CAAa,MAAM,CAAnB,CAApB;IACA,MAAMC,iBAAiB,GAAG,EAA1B;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKlB,YAAL,CAAkBmB,MAAtC,EAA8CD,CAAC,IAAI,CAAnD,EAAsD;MACrD,MAAMf,KAAK,GAAG,KAAKH,YAAL,CAAkBkB,CAAlB,CAAd;MACA,MAAMd,GAAG,GAAG,KAAKJ,YAAL,CAAkBkB,CAAC,GAAG,CAAtB,CAAZ;MACA,IAAIE,GAAG,GAAGxB,kBAAkB,CAACyB,EAAnB,CAAsBb,QAAtB,EAAgCL,KAAhC,CAAV;MACAc,iBAAiB,CAACX,IAAlB,CAAuBc,GAAvB;;MACA,GAAG;QACFL,WAAW,CAACK,GAAD,CAAX;QACAA,GAAG;MACH,CAHD,QAGSZ,QAAQ,CAACY,GAAD,CAAR,GAAgBhB,GAHzB;IAIA;;IACD,KAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKjB,eAAL,CAAqBkB,MAAzC,EAAiDD,CAAC,EAAlD,EAAsD;MACrD,MAAMf,KAAK,GAAG,KAAKH,YAAL,CAAkBkB,CAAC,GAAG,CAAtB,CAAd;MACA,MAAMd,GAAG,GAAG,KAAKJ,YAAL,CAAkBkB,CAAC,GAAG,CAAJ,GAAQ,CAA1B,CAAZ;MACA,IAAIE,GAAG,GAAGH,iBAAiB,CAACC,CAAD,CAA3B;MACA,IAAII,GAAG,GAAG,CAAV;MACA,IAAIC,aAAa,GAAG,CAApB;MACA,IAAIC,OAAO,GAAGrB,KAAd;;MACA,GAAG;QACF,MAAMsB,CAAC,GAAGV,WAAW,CAACK,GAAD,CAArB;QACAA,GAAG;QACH,MAAMM,QAAQ,GAAGlB,QAAQ,CAACY,GAAD,CAAR,GAAgBI,OAAjC;QACAD,aAAa,IAAIG,QAAjB;QACAF,OAAO,GAAGhB,QAAQ,CAACY,GAAD,CAAlB;QACAE,GAAG,IAAIG,CAAC,GAAGC,QAAX;MACA,CAPD,QAOSF,OAAO,GAAGpB,GAPnB;;MAQA,KAAKH,eAAL,CAAqBiB,CAArB,EAAwBI,GAAG,GAAGC,aAA9B;IACA;EACD;;AA9CgC;;AAiDlCI,MAAM,CAACC,OAAP,GAAiB9B,2BAAjB"},"metadata":{},"sourceType":"script"}