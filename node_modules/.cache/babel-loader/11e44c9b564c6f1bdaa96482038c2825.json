{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\"use strict\";\n\nconst ContextElementDependency = require(\"./ContextElementDependency\");\n\nconst ImportMetaContextDependency = require(\"./ImportMetaContextDependency\");\n\nconst ImportMetaContextDependencyParserPlugin = require(\"./ImportMetaContextDependencyParserPlugin\");\n/** @typedef {import(\"../../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n\nclass ImportMetaContextPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"RequireContextPlugin\", (compilation, _ref) => {\n      let {\n        contextModuleFactory,\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(ImportMetaContextDependency, contextModuleFactory);\n      compilation.dependencyTemplates.set(ImportMetaContextDependency, new ImportMetaContextDependency.Template());\n      compilation.dependencyFactories.set(ContextElementDependency, normalModuleFactory);\n\n      const handler = (parser, parserOptions) => {\n        if (parserOptions.importMetaContext !== undefined && !parserOptions.importMetaContext) return;\n        new ImportMetaContextDependencyParserPlugin().apply(parser);\n      };\n\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"ImportMetaContextPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"ImportMetaContextPlugin\", handler);\n    });\n  }\n\n}\n\nmodule.exports = ImportMetaContextPlugin;","map":{"version":3,"names":["ContextElementDependency","require","ImportMetaContextDependency","ImportMetaContextDependencyParserPlugin","ImportMetaContextPlugin","apply","compiler","hooks","compilation","tap","contextModuleFactory","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","parserOptions","importMetaContext","undefined","for","module","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/dependencies/ImportMetaContextPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst ContextElementDependency = require(\"./ContextElementDependency\");\nconst ImportMetaContextDependency = require(\"./ImportMetaContextDependency\");\nconst ImportMetaContextDependencyParserPlugin = require(\"./ImportMetaContextDependencyParserPlugin\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass ImportMetaContextPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"RequireContextPlugin\",\n\t\t\t(compilation, { contextModuleFactory, normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportMetaContextDependency,\n\t\t\t\t\tcontextModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportMetaContextDependency,\n\t\t\t\t\tnew ImportMetaContextDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tContextElementDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tparserOptions.importMetaContext !== undefined &&\n\t\t\t\t\t\t!parserOptions.importMetaContext\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew ImportMetaContextDependencyParserPlugin().apply(parser);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"ImportMetaContextPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"ImportMetaContextPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ImportMetaContextPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,wBAAwB,GAAGC,OAAO,CAAC,4BAAD,CAAxC;;AACA,MAAMC,2BAA2B,GAAGD,OAAO,CAAC,+BAAD,CAA3C;;AACA,MAAME,uCAAuC,GAAGF,OAAO,CAAC,2CAAD,CAAvD;AAEA;;AACA;;;AAEA,MAAMG,uBAAN,CAA8B;EAC7B;AACD;AACA;AACA;AACA;EACCC,KAAK,CAACC,QAAD,EAAW;IACfA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,sBADD,EAEC,CAACD,WAAD,WAAgE;MAAA,IAAlD;QAAEE,oBAAF;QAAwBC;MAAxB,CAAkD;MAC/DH,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCX,2BADD,EAECQ,oBAFD;MAIAF,WAAW,CAACM,mBAAZ,CAAgCD,GAAhC,CACCX,2BADD,EAEC,IAAIA,2BAA2B,CAACa,QAAhC,EAFD;MAIAP,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCb,wBADD,EAECW,mBAFD;;MAKA,MAAMK,OAAO,GAAG,CAACC,MAAD,EAASC,aAAT,KAA2B;QAC1C,IACCA,aAAa,CAACC,iBAAd,KAAoCC,SAApC,IACA,CAACF,aAAa,CAACC,iBAFhB,EAIC;QAED,IAAIhB,uCAAJ,GAA8CE,KAA9C,CAAoDY,MAApD;MACA,CARD;;MAUAN,mBAAmB,CAACJ,KAApB,CAA0BU,MAA1B,CACEI,GADF,CACM,iBADN,EAEEZ,GAFF,CAEM,yBAFN,EAEiCO,OAFjC;MAGAL,mBAAmB,CAACJ,KAApB,CAA0BU,MAA1B,CACEI,GADF,CACM,gBADN,EAEEZ,GAFF,CAEM,yBAFN,EAEiCO,OAFjC;IAGA,CAhCF;EAkCA;;AAzC4B;;AA4C9BM,MAAM,CAACC,OAAP,GAAiBnB,uBAAjB"},"metadata":{},"sourceType":"script"}