{"ast":null,"code":"var jsReleases = require('node-releases/data/processed/envs.json');\n\nvar agents = require('caniuse-lite/dist/unpacker/agents').agents;\n\nvar jsEOL = require('node-releases/data/release-schedule/release-schedule.json');\n\nvar path = require('path');\n\nvar e2c = require('electron-to-chromium/versions');\n\nvar BrowserslistError = require('./error');\n\nvar env = require('./node'); // Will load browser.js in webpack\n\n\nvar YEAR = 365.259641 * 24 * 60 * 60 * 1000;\nvar ANDROID_EVERGREEN_FIRST = 37;\nvar QUERY_OR = 1;\nvar QUERY_AND = 2;\n\nfunction isVersionsMatch(versionA, versionB) {\n  return (versionA + '.').indexOf(versionB + '.') === 0;\n}\n\nfunction isEolReleased(name) {\n  var version = name.slice(1);\n  return browserslist.nodeVersions.some(function (i) {\n    return isVersionsMatch(i, version);\n  });\n}\n\nfunction normalize(versions) {\n  return versions.filter(function (version) {\n    return typeof version === 'string';\n  });\n}\n\nfunction normalizeElectron(version) {\n  var versionToUse = version;\n\n  if (version.split('.').length === 3) {\n    versionToUse = version.split('.').slice(0, -1).join('.');\n  }\n\n  return versionToUse;\n}\n\nfunction nameMapper(name) {\n  return function mapName(version) {\n    return name + ' ' + version;\n  };\n}\n\nfunction getMajor(version) {\n  return parseInt(version.split('.')[0]);\n}\n\nfunction getMajorVersions(released, number) {\n  if (released.length === 0) return [];\n  var majorVersions = uniq(released.map(getMajor));\n  var minimum = majorVersions[majorVersions.length - number];\n\n  if (!minimum) {\n    return released;\n  }\n\n  var selected = [];\n\n  for (var i = released.length - 1; i >= 0; i--) {\n    if (minimum > getMajor(released[i])) break;\n    selected.unshift(released[i]);\n  }\n\n  return selected;\n}\n\nfunction uniq(array) {\n  var filtered = [];\n\n  for (var i = 0; i < array.length; i++) {\n    if (filtered.indexOf(array[i]) === -1) filtered.push(array[i]);\n  }\n\n  return filtered;\n} // Helpers\n\n\nfunction fillUsage(result, name, data) {\n  for (var i in data) {\n    result[name + ' ' + i] = data[i];\n  }\n}\n\nfunction generateFilter(sign, version) {\n  version = parseFloat(version);\n\n  if (sign === '>') {\n    return function (v) {\n      return parseFloat(v) > version;\n    };\n  } else if (sign === '>=') {\n    return function (v) {\n      return parseFloat(v) >= version;\n    };\n  } else if (sign === '<') {\n    return function (v) {\n      return parseFloat(v) < version;\n    };\n  } else {\n    return function (v) {\n      return parseFloat(v) <= version;\n    };\n  }\n}\n\nfunction generateSemverFilter(sign, version) {\n  version = version.split('.').map(parseSimpleInt);\n  version[1] = version[1] || 0;\n  version[2] = version[2] || 0;\n\n  if (sign === '>') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt);\n      return compareSemver(v, version) > 0;\n    };\n  } else if (sign === '>=') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt);\n      return compareSemver(v, version) >= 0;\n    };\n  } else if (sign === '<') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt);\n      return compareSemver(version, v) > 0;\n    };\n  } else {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt);\n      return compareSemver(version, v) >= 0;\n    };\n  }\n}\n\nfunction parseSimpleInt(x) {\n  return parseInt(x);\n}\n\nfunction compare(a, b) {\n  if (a < b) return -1;\n  if (a > b) return +1;\n  return 0;\n}\n\nfunction compareSemver(a, b) {\n  return compare(parseInt(a[0]), parseInt(b[0])) || compare(parseInt(a[1] || '0'), parseInt(b[1] || '0')) || compare(parseInt(a[2] || '0'), parseInt(b[2] || '0'));\n} // this follows the npm-like semver behavior\n\n\nfunction semverFilterLoose(operator, range) {\n  range = range.split('.').map(parseSimpleInt);\n\n  if (typeof range[1] === 'undefined') {\n    range[1] = 'x';\n  } // ignore any patch version because we only return minor versions\n  // range[2] = 'x'\n\n\n  switch (operator) {\n    case '<=':\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt);\n        return compareSemverLoose(version, range) <= 0;\n      };\n\n    case '>=':\n    default:\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt);\n        return compareSemverLoose(version, range) >= 0;\n      };\n  }\n} // this follows the npm-like semver behavior\n\n\nfunction compareSemverLoose(version, range) {\n  if (version[0] !== range[0]) {\n    return version[0] < range[0] ? -1 : +1;\n  }\n\n  if (range[1] === 'x') {\n    return 0;\n  }\n\n  if (version[1] !== range[1]) {\n    return version[1] < range[1] ? -1 : +1;\n  }\n\n  return 0;\n}\n\nfunction resolveVersion(data, version) {\n  if (data.versions.indexOf(version) !== -1) {\n    return version;\n  } else if (browserslist.versionAliases[data.name][version]) {\n    return browserslist.versionAliases[data.name][version];\n  } else {\n    return false;\n  }\n}\n\nfunction normalizeVersion(data, version) {\n  var resolved = resolveVersion(data, version);\n\n  if (resolved) {\n    return resolved;\n  } else if (data.versions.length === 1) {\n    return data.versions[0];\n  } else {\n    return false;\n  }\n}\n\nfunction filterByYear(since, context) {\n  since = since / 1000;\n  return Object.keys(agents).reduce(function (selected, name) {\n    var data = byName(name, context);\n    if (!data) return selected;\n    var versions = Object.keys(data.releaseDate).filter(function (v) {\n      var date = data.releaseDate[v];\n      return date !== null && date >= since;\n    });\n    return selected.concat(versions.map(nameMapper(data.name)));\n  }, []);\n}\n\nfunction cloneData(data) {\n  return {\n    name: data.name,\n    versions: data.versions,\n    released: data.released,\n    releaseDate: data.releaseDate\n  };\n}\n\nfunction mapVersions(data, map) {\n  data.versions = data.versions.map(function (i) {\n    return map[i] || i;\n  });\n  data.released = data.released.map(function (i) {\n    return map[i] || i;\n  });\n  var fixedDate = {};\n\n  for (var i in data.releaseDate) {\n    fixedDate[map[i] || i] = data.releaseDate[i];\n  }\n\n  data.releaseDate = fixedDate;\n  return data;\n}\n\nfunction byName(name, context) {\n  name = name.toLowerCase();\n  name = browserslist.aliases[name] || name;\n\n  if (context.mobileToDesktop && browserslist.desktopNames[name]) {\n    var desktop = browserslist.data[browserslist.desktopNames[name]];\n\n    if (name === 'android') {\n      return normalizeAndroidData(cloneData(browserslist.data[name]), desktop);\n    } else {\n      var cloned = cloneData(desktop);\n      cloned.name = name;\n\n      if (name === 'op_mob') {\n        cloned = mapVersions(cloned, {\n          '10.0-10.1': '10'\n        });\n      }\n\n      return cloned;\n    }\n  }\n\n  return browserslist.data[name];\n}\n\nfunction normalizeAndroidVersions(androidVersions, chromeVersions) {\n  var firstEvergreen = ANDROID_EVERGREEN_FIRST;\n  var last = chromeVersions[chromeVersions.length - 1];\n  return androidVersions.filter(function (version) {\n    return /^(?:[2-4]\\.|[34]$)/.test(version);\n  }).concat(chromeVersions.slice(firstEvergreen - last - 1));\n}\n\nfunction normalizeAndroidData(android, chrome) {\n  android.released = normalizeAndroidVersions(android.released, chrome.released);\n  android.versions = normalizeAndroidVersions(android.versions, chrome.versions);\n  return android;\n}\n\nfunction checkName(name, context) {\n  var data = byName(name, context);\n  if (!data) throw new BrowserslistError('Unknown browser ' + name);\n  return data;\n}\n\nfunction unknownQuery(query) {\n  return new BrowserslistError('Unknown browser query `' + query + '`. ' + 'Maybe you are using old Browserslist or made typo in query.');\n}\n\nfunction filterAndroid(list, versions, context) {\n  if (context.mobileToDesktop) return list;\n  var released = browserslist.data.android.released;\n  var last = released[released.length - 1];\n  var diff = last - ANDROID_EVERGREEN_FIRST - versions;\n\n  if (diff > 0) {\n    return list.slice(-1);\n  } else {\n    return list.slice(diff - 1);\n  }\n}\n/**\n * Resolves queries into a browser list.\n * @param {string|string[]} queries Queries to combine.\n * Either an array of queries or a long string of queries.\n * @param {object} [context] Optional arguments to\n * the select function in `queries`.\n * @returns {string[]} A list of browsers\n */\n\n\nfunction resolve(queries, context) {\n  if (Array.isArray(queries)) {\n    queries = flatten(queries.map(parse));\n  } else {\n    queries = parse(queries);\n  }\n\n  return queries.reduce(function (result, query, index) {\n    var selection = query.queryString;\n    var isExclude = selection.indexOf('not ') === 0;\n\n    if (isExclude) {\n      if (index === 0) {\n        throw new BrowserslistError('Write any browsers query (for instance, `defaults`) ' + 'before `' + selection + '`');\n      }\n\n      selection = selection.slice(4);\n    }\n\n    for (var i = 0; i < QUERIES.length; i++) {\n      var type = QUERIES[i];\n      var match = selection.match(type.regexp);\n\n      if (match) {\n        var args = [context].concat(match.slice(1));\n        var array = type.select.apply(browserslist, args).map(function (j) {\n          var parts = j.split(' ');\n\n          if (parts[1] === '0') {\n            return parts[0] + ' ' + byName(parts[0], context).versions[0];\n          } else {\n            return j;\n          }\n        });\n\n        switch (query.type) {\n          case QUERY_AND:\n            if (isExclude) {\n              return result.filter(function (j) {\n                return array.indexOf(j) === -1;\n              });\n            } else {\n              return result.filter(function (j) {\n                return array.indexOf(j) !== -1;\n              });\n            }\n\n          case QUERY_OR:\n          default:\n            if (isExclude) {\n              var filter = {};\n              array.forEach(function (j) {\n                filter[j] = true;\n              });\n              return result.filter(function (j) {\n                return !filter[j];\n              });\n            }\n\n            return result.concat(array);\n        }\n      }\n    }\n\n    throw unknownQuery(selection);\n  }, []);\n}\n\nvar cache = {};\n/**\n * Return array of browsers by selection queries.\n *\n * @param {(string|string[])} [queries=browserslist.defaults] Browser queries.\n * @param {object} [opts] Options.\n * @param {string} [opts.path=\".\"] Path to processed file.\n *                                 It will be used to find config files.\n * @param {string} [opts.env=\"production\"] Processing environment.\n *                                         It will be used to take right\n *                                         queries from config file.\n * @param {string} [opts.config] Path to config file with queries.\n * @param {object} [opts.stats] Custom browser usage statistics\n *                              for \"> 1% in my stats\" query.\n * @param {boolean} [opts.ignoreUnknownVersions=false] Do not throw on unknown\n *                                                     version in direct query.\n * @param {boolean} [opts.dangerousExtend] Disable security checks\n *                                         for extend query.\n * @param {boolean} [opts.throwOnMissing] Throw error on missing env.\n * @param {boolean} [opts.mobileToDesktop] Alias mobile browsers to the desktop\n *                                         version when Can I Use doesn't have\n *                                         data about the specified version.\n * @returns {string[]} Array with browser names in Can I Use.\n *\n * @example\n * browserslist('IE >= 10, IE 8') //=> ['ie 11', 'ie 10', 'ie 8']\n */\n\nfunction browserslist(queries, opts) {\n  if (typeof opts === 'undefined') opts = {};\n\n  if (typeof opts.path === 'undefined') {\n    opts.path = path.resolve ? path.resolve('.') : '.';\n  }\n\n  if (typeof queries === 'undefined' || queries === null) {\n    var config = browserslist.loadConfig(opts);\n\n    if (config) {\n      queries = config;\n    } else {\n      queries = browserslist.defaults;\n    }\n  }\n\n  if (!(typeof queries === 'string' || Array.isArray(queries))) {\n    throw new BrowserslistError('Browser queries must be an array or string. Got ' + typeof queries + '.');\n  }\n\n  var context = {\n    ignoreUnknownVersions: opts.ignoreUnknownVersions,\n    dangerousExtend: opts.dangerousExtend,\n    mobileToDesktop: opts.mobileToDesktop,\n    path: opts.path,\n    env: opts.env\n  };\n  env.oldDataWarning(browserslist.data);\n  var stats = env.getStat(opts, browserslist.data);\n\n  if (stats) {\n    context.customUsage = {};\n\n    for (var browser in stats) {\n      fillUsage(context.customUsage, browser, stats[browser]);\n    }\n  }\n\n  var cacheKey = JSON.stringify([queries, context]);\n  if (cache[cacheKey]) return cache[cacheKey];\n  var result = uniq(resolve(queries, context)).sort(function (name1, name2) {\n    name1 = name1.split(' ');\n    name2 = name2.split(' ');\n\n    if (name1[0] === name2[0]) {\n      // assumptions on caniuse data\n      // 1) version ranges never overlaps\n      // 2) if version is not a range, it never contains `-`\n      var version1 = name1[1].split('-')[0];\n      var version2 = name2[1].split('-')[0];\n      return compareSemver(version2.split('.'), version1.split('.'));\n    } else {\n      return compare(name1[0], name2[0]);\n    }\n  });\n\n  if (!process.env.BROWSERSLIST_DISABLE_CACHE) {\n    cache[cacheKey] = result;\n  }\n\n  return result;\n}\n\nfunction parse(queries) {\n  var qs = [];\n\n  do {\n    queries = doMatch(queries, qs);\n  } while (queries);\n\n  return qs;\n}\n\nfunction doMatch(string, qs) {\n  var or = /^(?:,\\s*|\\s+or\\s+)(.*)/i;\n  var and = /^\\s+and\\s+(.*)/i;\n  return find(string, function (parsed, n, max) {\n    if (and.test(parsed)) {\n      qs.unshift({\n        type: QUERY_AND,\n        queryString: parsed.match(and)[1]\n      });\n      return true;\n    } else if (or.test(parsed)) {\n      qs.unshift({\n        type: QUERY_OR,\n        queryString: parsed.match(or)[1]\n      });\n      return true;\n    } else if (n === max) {\n      qs.unshift({\n        type: QUERY_OR,\n        queryString: parsed.trim()\n      });\n      return true;\n    }\n\n    return false;\n  });\n}\n\nfunction find(string, predicate) {\n  for (var n = 1, max = string.length; n <= max; n++) {\n    var parsed = string.substr(-n, n);\n\n    if (predicate(parsed, n, max)) {\n      return string.slice(0, -n);\n    }\n  }\n\n  return '';\n}\n\nfunction flatten(array) {\n  if (!Array.isArray(array)) return [array];\n  return array.reduce(function (a, b) {\n    return a.concat(flatten(b));\n  }, []);\n} // Will be filled by Can I Use data below\n\n\nbrowserslist.cache = {};\nbrowserslist.data = {};\nbrowserslist.usage = {\n  global: {},\n  custom: null\n}; // Default browsers query\n\nbrowserslist.defaults = ['> 0.5%', 'last 2 versions', 'Firefox ESR', 'not dead']; // Browser names aliases\n\nbrowserslist.aliases = {\n  fx: 'firefox',\n  ff: 'firefox',\n  ios: 'ios_saf',\n  explorer: 'ie',\n  blackberry: 'bb',\n  explorermobile: 'ie_mob',\n  operamini: 'op_mini',\n  operamobile: 'op_mob',\n  chromeandroid: 'and_chr',\n  firefoxandroid: 'and_ff',\n  ucandroid: 'and_uc',\n  qqandroid: 'and_qq'\n}; // Can I Use only provides a few versions for some browsers (e.g. and_chr).\n// Fallback to a similar browser for unknown versions\n\nbrowserslist.desktopNames = {\n  and_chr: 'chrome',\n  and_ff: 'firefox',\n  ie_mob: 'ie',\n  op_mob: 'opera',\n  android: 'chrome' // has extra processing logic\n\n}; // Aliases to work with joined versions like `ios_saf 7.0-7.1`\n\nbrowserslist.versionAliases = {};\nbrowserslist.clearCaches = env.clearCaches;\nbrowserslist.parseConfig = env.parseConfig;\nbrowserslist.readConfig = env.readConfig;\nbrowserslist.findConfig = env.findConfig;\nbrowserslist.loadConfig = env.loadConfig;\n/**\n * Return browsers market coverage.\n *\n * @param {string[]} browsers Browsers names in Can I Use.\n * @param {string|object} [stats=\"global\"] Which statistics should be used.\n *                                         Country code or custom statistics.\n *                                         Pass `\"my stats\"` to load statistics\n *                                         from Browserslist files.\n *\n * @return {number} Total market coverage for all selected browsers.\n *\n * @example\n * browserslist.coverage(browserslist('> 1% in US'), 'US') //=> 83.1\n */\n\nbrowserslist.coverage = function (browsers, stats) {\n  var data;\n\n  if (typeof stats === 'undefined') {\n    data = browserslist.usage.global;\n  } else if (stats === 'my stats') {\n    var opts = {};\n    opts.path = path.resolve ? path.resolve('.') : '.';\n    var customStats = env.getStat(opts);\n\n    if (!customStats) {\n      throw new BrowserslistError('Custom usage statistics was not provided');\n    }\n\n    data = {};\n\n    for (var browser in customStats) {\n      fillUsage(data, browser, customStats[browser]);\n    }\n  } else if (typeof stats === 'string') {\n    if (stats.length > 2) {\n      stats = stats.toLowerCase();\n    } else {\n      stats = stats.toUpperCase();\n    }\n\n    env.loadCountry(browserslist.usage, stats, browserslist.data);\n    data = browserslist.usage[stats];\n  } else {\n    if ('dataByBrowser' in stats) {\n      stats = stats.dataByBrowser;\n    }\n\n    data = {};\n\n    for (var name in stats) {\n      for (var version in stats[name]) {\n        data[name + ' ' + version] = stats[name][version];\n      }\n    }\n  }\n\n  return browsers.reduce(function (all, i) {\n    var usage = data[i];\n\n    if (usage === undefined) {\n      usage = data[i.replace(/ \\S+$/, ' 0')];\n    }\n\n    return all + (usage || 0);\n  }, 0);\n};\n\nfunction nodeQuery(context, version) {\n  var matched = browserslist.nodeVersions.filter(function (i) {\n    return isVersionsMatch(i, version);\n  });\n\n  if (matched.length === 0) {\n    if (context.ignoreUnknownVersions) {\n      return [];\n    } else {\n      throw new BrowserslistError('Unknown version ' + version + ' of Node.js');\n    }\n  }\n\n  return ['node ' + matched[matched.length - 1]];\n}\n\nfunction sinceQuery(context, year, month, date) {\n  year = parseInt(year);\n  month = parseInt(month || '01') - 1;\n  date = parseInt(date || '01');\n  return filterByYear(Date.UTC(year, month, date, 0, 0, 0), context);\n}\n\nfunction coverQuery(context, coverage, statMode) {\n  coverage = parseFloat(coverage);\n  var usage = browserslist.usage.global;\n\n  if (statMode) {\n    if (statMode.match(/^my\\s+stats$/i)) {\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided');\n      }\n\n      usage = context.customUsage;\n    } else {\n      var place;\n\n      if (statMode.length === 2) {\n        place = statMode.toUpperCase();\n      } else {\n        place = statMode.toLowerCase();\n      }\n\n      env.loadCountry(browserslist.usage, place, browserslist.data);\n      usage = browserslist.usage[place];\n    }\n  }\n\n  var versions = Object.keys(usage).sort(function (a, b) {\n    return usage[b] - usage[a];\n  });\n  var coveraged = 0;\n  var result = [];\n  var version;\n\n  for (var i = 0; i < versions.length; i++) {\n    version = versions[i];\n    if (usage[version] === 0) break;\n    coveraged += usage[version];\n    result.push(version);\n    if (coveraged >= coverage) break;\n  }\n\n  return result;\n}\n\nvar QUERIES = [{\n  regexp: /^last\\s+(\\d+)\\s+major\\s+versions?$/i,\n  select: function (context, versions) {\n    return Object.keys(agents).reduce(function (selected, name) {\n      var data = byName(name, context);\n      if (!data) return selected;\n      var list = getMajorVersions(data.released, versions);\n      list = list.map(nameMapper(data.name));\n\n      if (data.name === 'android') {\n        list = filterAndroid(list, versions, context);\n      }\n\n      return selected.concat(list);\n    }, []);\n  }\n}, {\n  regexp: /^last\\s+(\\d+)\\s+versions?$/i,\n  select: function (context, versions) {\n    return Object.keys(agents).reduce(function (selected, name) {\n      var data = byName(name, context);\n      if (!data) return selected;\n      var list = data.released.slice(-versions);\n      list = list.map(nameMapper(data.name));\n\n      if (data.name === 'android') {\n        list = filterAndroid(list, versions, context);\n      }\n\n      return selected.concat(list);\n    }, []);\n  }\n}, {\n  regexp: /^last\\s+(\\d+)\\s+electron\\s+major\\s+versions?$/i,\n  select: function (context, versions) {\n    var validVersions = getMajorVersions(Object.keys(e2c), versions);\n    return validVersions.map(function (i) {\n      return 'chrome ' + e2c[i];\n    });\n  }\n}, {\n  regexp: /^last\\s+(\\d+)\\s+node\\s+major\\s+versions?$/i,\n  select: function (context, versions) {\n    return getMajorVersions(browserslist.nodeVersions, versions).map(function (version) {\n      return 'node ' + version;\n    });\n  }\n}, {\n  regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+major\\s+versions?$/i,\n  select: function (context, versions, name) {\n    var data = checkName(name, context);\n    var validVersions = getMajorVersions(data.released, versions);\n    var list = validVersions.map(nameMapper(data.name));\n\n    if (data.name === 'android') {\n      list = filterAndroid(list, versions, context);\n    }\n\n    return list;\n  }\n}, {\n  regexp: /^last\\s+(\\d+)\\s+electron\\s+versions?$/i,\n  select: function (context, versions) {\n    return Object.keys(e2c).slice(-versions).map(function (i) {\n      return 'chrome ' + e2c[i];\n    });\n  }\n}, {\n  regexp: /^last\\s+(\\d+)\\s+node\\s+versions?$/i,\n  select: function (context, versions) {\n    return browserslist.nodeVersions.slice(-versions).map(function (version) {\n      return 'node ' + version;\n    });\n  }\n}, {\n  regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+versions?$/i,\n  select: function (context, versions, name) {\n    var data = checkName(name, context);\n    var list = data.released.slice(-versions).map(nameMapper(data.name));\n\n    if (data.name === 'android') {\n      list = filterAndroid(list, versions, context);\n    }\n\n    return list;\n  }\n}, {\n  regexp: /^unreleased\\s+versions$/i,\n  select: function (context) {\n    return Object.keys(agents).reduce(function (selected, name) {\n      var data = byName(name, context);\n      if (!data) return selected;\n      var list = data.versions.filter(function (v) {\n        return data.released.indexOf(v) === -1;\n      });\n      list = list.map(nameMapper(data.name));\n      return selected.concat(list);\n    }, []);\n  }\n}, {\n  regexp: /^unreleased\\s+electron\\s+versions?$/i,\n  select: function () {\n    return [];\n  }\n}, {\n  regexp: /^unreleased\\s+(\\w+)\\s+versions?$/i,\n  select: function (context, name) {\n    var data = checkName(name, context);\n    return data.versions.filter(function (v) {\n      return data.released.indexOf(v) === -1;\n    }).map(nameMapper(data.name));\n  }\n}, {\n  regexp: /^last\\s+(\\d*.?\\d+)\\s+years?$/i,\n  select: function (context, years) {\n    return filterByYear(Date.now() - YEAR * years, context);\n  }\n}, {\n  regexp: /^since (\\d+)$/i,\n  select: sinceQuery\n}, {\n  regexp: /^since (\\d+)-(\\d+)$/i,\n  select: sinceQuery\n}, {\n  regexp: /^since (\\d+)-(\\d+)-(\\d+)$/i,\n  select: sinceQuery\n}, {\n  regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%$/,\n  select: function (context, sign, popularity) {\n    popularity = parseFloat(popularity);\n    var usage = browserslist.usage.global;\n    return Object.keys(usage).reduce(function (result, version) {\n      if (sign === '>') {\n        if (usage[version] > popularity) {\n          result.push(version);\n        }\n      } else if (sign === '<') {\n        if (usage[version] < popularity) {\n          result.push(version);\n        }\n      } else if (sign === '<=') {\n        if (usage[version] <= popularity) {\n          result.push(version);\n        }\n      } else if (usage[version] >= popularity) {\n        result.push(version);\n      }\n\n      return result;\n    }, []);\n  }\n}, {\n  regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+my\\s+stats$/,\n  select: function (context, sign, popularity) {\n    popularity = parseFloat(popularity);\n\n    if (!context.customUsage) {\n      throw new BrowserslistError('Custom usage statistics was not provided');\n    }\n\n    var usage = context.customUsage;\n    return Object.keys(usage).reduce(function (result, version) {\n      var percentage = usage[version];\n\n      if (percentage == null) {\n        return result;\n      }\n\n      if (sign === '>') {\n        if (percentage > popularity) {\n          result.push(version);\n        }\n      } else if (sign === '<') {\n        if (percentage < popularity) {\n          result.push(version);\n        }\n      } else if (sign === '<=') {\n        if (percentage <= popularity) {\n          result.push(version);\n        }\n      } else if (percentage >= popularity) {\n        result.push(version);\n      }\n\n      return result;\n    }, []);\n  }\n}, {\n  regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(\\S+)\\s+stats$/,\n  select: function (context, sign, popularity, name) {\n    popularity = parseFloat(popularity);\n    var stats = env.loadStat(context, name, browserslist.data);\n\n    if (stats) {\n      context.customUsage = {};\n\n      for (var browser in stats) {\n        fillUsage(context.customUsage, browser, stats[browser]);\n      }\n    }\n\n    if (!context.customUsage) {\n      throw new BrowserslistError('Custom usage statistics was not provided');\n    }\n\n    var usage = context.customUsage;\n    return Object.keys(usage).reduce(function (result, version) {\n      var percentage = usage[version];\n\n      if (percentage == null) {\n        return result;\n      }\n\n      if (sign === '>') {\n        if (percentage > popularity) {\n          result.push(version);\n        }\n      } else if (sign === '<') {\n        if (percentage < popularity) {\n          result.push(version);\n        }\n      } else if (sign === '<=') {\n        if (percentage <= popularity) {\n          result.push(version);\n        }\n      } else if (percentage >= popularity) {\n        result.push(version);\n      }\n\n      return result;\n    }, []);\n  }\n}, {\n  regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+((alt-)?\\w\\w)$/,\n  select: function (context, sign, popularity, place) {\n    popularity = parseFloat(popularity);\n\n    if (place.length === 2) {\n      place = place.toUpperCase();\n    } else {\n      place = place.toLowerCase();\n    }\n\n    env.loadCountry(browserslist.usage, place, browserslist.data);\n    var usage = browserslist.usage[place];\n    return Object.keys(usage).reduce(function (result, version) {\n      var percentage = usage[version];\n\n      if (percentage == null) {\n        return result;\n      }\n\n      if (sign === '>') {\n        if (percentage > popularity) {\n          result.push(version);\n        }\n      } else if (sign === '<') {\n        if (percentage < popularity) {\n          result.push(version);\n        }\n      } else if (sign === '<=') {\n        if (percentage <= popularity) {\n          result.push(version);\n        }\n      } else if (percentage >= popularity) {\n        result.push(version);\n      }\n\n      return result;\n    }, []);\n  }\n}, {\n  regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%$/i,\n  select: coverQuery\n}, {\n  regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(my\\s+stats|(alt-)?\\w\\w)$/i,\n  select: coverQuery\n}, {\n  regexp: /^supports\\s+([\\w-]+)$/,\n  select: function (context, feature) {\n    env.loadFeature(browserslist.cache, feature);\n    var features = browserslist.cache[feature];\n    return Object.keys(features).reduce(function (result, version) {\n      var flags = features[version];\n\n      if (flags.indexOf('y') >= 0 || flags.indexOf('a') >= 0) {\n        result.push(version);\n      }\n\n      return result;\n    }, []);\n  }\n}, {\n  regexp: /^electron\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n  select: function (context, from, to) {\n    var fromToUse = normalizeElectron(from);\n    var toToUse = normalizeElectron(to);\n\n    if (!e2c[fromToUse]) {\n      throw new BrowserslistError('Unknown version ' + from + ' of electron');\n    }\n\n    if (!e2c[toToUse]) {\n      throw new BrowserslistError('Unknown version ' + to + ' of electron');\n    }\n\n    from = parseFloat(from);\n    to = parseFloat(to);\n    return Object.keys(e2c).filter(function (i) {\n      var parsed = parseFloat(i);\n      return parsed >= from && parsed <= to;\n    }).map(function (i) {\n      return 'chrome ' + e2c[i];\n    });\n  }\n}, {\n  regexp: /^node\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n  select: function (context, from, to) {\n    return browserslist.nodeVersions.filter(semverFilterLoose('>=', from)).filter(semverFilterLoose('<=', to)).map(function (v) {\n      return 'node ' + v;\n    });\n  }\n}, {\n  regexp: /^(\\w+)\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n  select: function (context, name, from, to) {\n    var data = checkName(name, context);\n    from = parseFloat(normalizeVersion(data, from) || from);\n    to = parseFloat(normalizeVersion(data, to) || to);\n\n    function filter(v) {\n      var parsed = parseFloat(v);\n      return parsed >= from && parsed <= to;\n    }\n\n    return data.released.filter(filter).map(nameMapper(data.name));\n  }\n}, {\n  regexp: /^electron\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n  select: function (context, sign, version) {\n    var versionToUse = normalizeElectron(version);\n    return Object.keys(e2c).filter(generateFilter(sign, versionToUse)).map(function (i) {\n      return 'chrome ' + e2c[i];\n    });\n  }\n}, {\n  regexp: /^node\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n  select: function (context, sign, version) {\n    return browserslist.nodeVersions.filter(generateSemverFilter(sign, version)).map(function (v) {\n      return 'node ' + v;\n    });\n  }\n}, {\n  regexp: /^(\\w+)\\s*(>=?|<=?)\\s*([\\d.]+)$/,\n  select: function (context, name, sign, version) {\n    var data = checkName(name, context);\n    var alias = browserslist.versionAliases[data.name][version];\n\n    if (alias) {\n      version = alias;\n    }\n\n    return data.released.filter(generateFilter(sign, version)).map(function (v) {\n      return data.name + ' ' + v;\n    });\n  }\n}, {\n  regexp: /^(firefox|ff|fx)\\s+esr$/i,\n  select: function () {\n    return ['firefox 91'];\n  }\n}, {\n  regexp: /(operamini|op_mini)\\s+all/i,\n  select: function () {\n    return ['op_mini all'];\n  }\n}, {\n  regexp: /^electron\\s+([\\d.]+)$/i,\n  select: function (context, version) {\n    var versionToUse = normalizeElectron(version);\n    var chrome = e2c[versionToUse];\n\n    if (!chrome) {\n      throw new BrowserslistError('Unknown version ' + version + ' of electron');\n    }\n\n    return ['chrome ' + chrome];\n  }\n}, {\n  regexp: /^node\\s+(\\d+)$/i,\n  select: nodeQuery\n}, {\n  regexp: /^node\\s+(\\d+\\.\\d+)$/i,\n  select: nodeQuery\n}, {\n  regexp: /^node\\s+(\\d+\\.\\d+\\.\\d+)$/i,\n  select: nodeQuery\n}, {\n  regexp: /^current\\s+node$/i,\n  select: function (context) {\n    return [env.currentNode(resolve, context)];\n  }\n}, {\n  regexp: /^maintained\\s+node\\s+versions$/i,\n  select: function (context) {\n    var now = Date.now();\n    var queries = Object.keys(jsEOL).filter(function (key) {\n      return now < Date.parse(jsEOL[key].end) && now > Date.parse(jsEOL[key].start) && isEolReleased(key);\n    }).map(function (key) {\n      return 'node ' + key.slice(1);\n    });\n    return resolve(queries, context);\n  }\n}, {\n  regexp: /^phantomjs\\s+1.9$/i,\n  select: function () {\n    return ['safari 5'];\n  }\n}, {\n  regexp: /^phantomjs\\s+2.1$/i,\n  select: function () {\n    return ['safari 6'];\n  }\n}, {\n  regexp: /^(\\w+)\\s+(tp|[\\d.]+)$/i,\n  select: function (context, name, version) {\n    if (/^tp$/i.test(version)) version = 'TP';\n    var data = checkName(name, context);\n    var alias = normalizeVersion(data, version);\n\n    if (alias) {\n      version = alias;\n    } else {\n      if (version.indexOf('.') === -1) {\n        alias = version + '.0';\n      } else {\n        alias = version.replace(/\\.0$/, '');\n      }\n\n      alias = normalizeVersion(data, alias);\n\n      if (alias) {\n        version = alias;\n      } else if (context.ignoreUnknownVersions) {\n        return [];\n      } else {\n        throw new BrowserslistError('Unknown version ' + version + ' of ' + name);\n      }\n    }\n\n    return [data.name + ' ' + version];\n  }\n}, {\n  regexp: /^browserslist config$/i,\n  select: function (context) {\n    return browserslist(undefined, context);\n  }\n}, {\n  regexp: /^extends (.+)$/i,\n  select: function (context, name) {\n    return resolve(env.loadQueries(context, name), context);\n  }\n}, {\n  regexp: /^defaults$/i,\n  select: function (context) {\n    return resolve(browserslist.defaults, context);\n  }\n}, {\n  regexp: /^dead$/i,\n  select: function (context) {\n    var dead = ['Baidu >= 0', 'ie <= 10', 'ie_mob <= 11', 'bb <= 10', 'op_mob <= 12.1', 'samsung 4'];\n    return resolve(dead, context);\n  }\n}, {\n  regexp: /^(\\w+)$/i,\n  select: function (context, name) {\n    if (byName(name, context)) {\n      throw new BrowserslistError('Specify versions in Browserslist query for browser ' + name);\n    } else {\n      throw unknownQuery(name);\n    }\n  }\n}] // Get and convert Can I Use data\n;\n\n(function () {\n  for (var name in agents) {\n    var browser = agents[name];\n    browserslist.data[name] = {\n      name: name,\n      versions: normalize(agents[name].versions),\n      released: normalize(agents[name].versions.slice(0, -3)),\n      releaseDate: agents[name].release_date\n    };\n    fillUsage(browserslist.usage.global, name, browser.usage_global);\n    browserslist.versionAliases[name] = {};\n\n    for (var i = 0; i < browser.versions.length; i++) {\n      var full = browser.versions[i];\n      if (!full) continue;\n\n      if (full.indexOf('-') !== -1) {\n        var interval = full.split('-');\n\n        for (var j = 0; j < interval.length; j++) {\n          browserslist.versionAliases[name][interval[j]] = full;\n        }\n      }\n    }\n  }\n\n  browserslist.versionAliases.op_mob['59'] = '58';\n  browserslist.nodeVersions = jsReleases.map(function (release) {\n    return release.version;\n  });\n})();\n\nmodule.exports = browserslist;","map":{"version":3,"names":["jsReleases","require","agents","jsEOL","path","e2c","BrowserslistError","env","YEAR","ANDROID_EVERGREEN_FIRST","QUERY_OR","QUERY_AND","isVersionsMatch","versionA","versionB","indexOf","isEolReleased","name","version","slice","browserslist","nodeVersions","some","i","normalize","versions","filter","normalizeElectron","versionToUse","split","length","join","nameMapper","mapName","getMajor","parseInt","getMajorVersions","released","number","majorVersions","uniq","map","minimum","selected","unshift","array","filtered","push","fillUsage","result","data","generateFilter","sign","parseFloat","v","generateSemverFilter","parseSimpleInt","compareSemver","x","compare","a","b","semverFilterLoose","operator","range","compareSemverLoose","resolveVersion","versionAliases","normalizeVersion","resolved","filterByYear","since","context","Object","keys","reduce","byName","releaseDate","date","concat","cloneData","mapVersions","fixedDate","toLowerCase","aliases","mobileToDesktop","desktopNames","desktop","normalizeAndroidData","cloned","normalizeAndroidVersions","androidVersions","chromeVersions","firstEvergreen","last","test","android","chrome","checkName","unknownQuery","query","filterAndroid","list","diff","resolve","queries","Array","isArray","flatten","parse","index","selection","queryString","isExclude","QUERIES","type","match","regexp","args","select","apply","j","parts","forEach","cache","opts","config","loadConfig","defaults","ignoreUnknownVersions","dangerousExtend","oldDataWarning","stats","getStat","customUsage","browser","cacheKey","JSON","stringify","sort","name1","name2","version1","version2","process","BROWSERSLIST_DISABLE_CACHE","qs","doMatch","string","or","and","find","parsed","n","max","trim","predicate","substr","usage","global","custom","fx","ff","ios","explorer","blackberry","explorermobile","operamini","operamobile","chromeandroid","firefoxandroid","ucandroid","qqandroid","and_chr","and_ff","ie_mob","op_mob","clearCaches","parseConfig","readConfig","findConfig","coverage","browsers","customStats","toUpperCase","loadCountry","dataByBrowser","all","undefined","replace","nodeQuery","matched","sinceQuery","year","month","Date","UTC","coverQuery","statMode","place","coveraged","validVersions","years","now","popularity","percentage","loadStat","feature","loadFeature","features","flags","from","to","fromToUse","toToUse","alias","currentNode","key","end","start","loadQueries","dead","release_date","usage_global","full","interval","release","module","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/browserslist/index.js"],"sourcesContent":["var jsReleases = require('node-releases/data/processed/envs.json')\nvar agents = require('caniuse-lite/dist/unpacker/agents').agents\nvar jsEOL = require('node-releases/data/release-schedule/release-schedule.json')\nvar path = require('path')\nvar e2c = require('electron-to-chromium/versions')\n\nvar BrowserslistError = require('./error')\nvar env = require('./node') // Will load browser.js in webpack\n\nvar YEAR = 365.259641 * 24 * 60 * 60 * 1000\nvar ANDROID_EVERGREEN_FIRST = 37\n\nvar QUERY_OR = 1\nvar QUERY_AND = 2\n\nfunction isVersionsMatch(versionA, versionB) {\n  return (versionA + '.').indexOf(versionB + '.') === 0\n}\n\nfunction isEolReleased(name) {\n  var version = name.slice(1)\n  return browserslist.nodeVersions.some(function (i) {\n    return isVersionsMatch(i, version)\n  })\n}\n\nfunction normalize(versions) {\n  return versions.filter(function (version) {\n    return typeof version === 'string'\n  })\n}\n\nfunction normalizeElectron(version) {\n  var versionToUse = version\n  if (version.split('.').length === 3) {\n    versionToUse = version.split('.').slice(0, -1).join('.')\n  }\n  return versionToUse\n}\n\nfunction nameMapper(name) {\n  return function mapName(version) {\n    return name + ' ' + version\n  }\n}\n\nfunction getMajor(version) {\n  return parseInt(version.split('.')[0])\n}\n\nfunction getMajorVersions(released, number) {\n  if (released.length === 0) return []\n  var majorVersions = uniq(released.map(getMajor))\n  var minimum = majorVersions[majorVersions.length - number]\n  if (!minimum) {\n    return released\n  }\n  var selected = []\n  for (var i = released.length - 1; i >= 0; i--) {\n    if (minimum > getMajor(released[i])) break\n    selected.unshift(released[i])\n  }\n  return selected\n}\n\nfunction uniq(array) {\n  var filtered = []\n  for (var i = 0; i < array.length; i++) {\n    if (filtered.indexOf(array[i]) === -1) filtered.push(array[i])\n  }\n  return filtered\n}\n\n// Helpers\n\nfunction fillUsage(result, name, data) {\n  for (var i in data) {\n    result[name + ' ' + i] = data[i]\n  }\n}\n\nfunction generateFilter(sign, version) {\n  version = parseFloat(version)\n  if (sign === '>') {\n    return function (v) {\n      return parseFloat(v) > version\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      return parseFloat(v) >= version\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      return parseFloat(v) < version\n    }\n  } else {\n    return function (v) {\n      return parseFloat(v) <= version\n    }\n  }\n}\n\nfunction generateSemverFilter(sign, version) {\n  version = version.split('.').map(parseSimpleInt)\n  version[1] = version[1] || 0\n  version[2] = version[2] || 0\n  if (sign === '>') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) > 0\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) >= 0\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) > 0\n    }\n  } else {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) >= 0\n    }\n  }\n}\n\nfunction parseSimpleInt(x) {\n  return parseInt(x)\n}\n\nfunction compare(a, b) {\n  if (a < b) return -1\n  if (a > b) return +1\n  return 0\n}\n\nfunction compareSemver(a, b) {\n  return (\n    compare(parseInt(a[0]), parseInt(b[0])) ||\n    compare(parseInt(a[1] || '0'), parseInt(b[1] || '0')) ||\n    compare(parseInt(a[2] || '0'), parseInt(b[2] || '0'))\n  )\n}\n\n// this follows the npm-like semver behavior\nfunction semverFilterLoose(operator, range) {\n  range = range.split('.').map(parseSimpleInt)\n  if (typeof range[1] === 'undefined') {\n    range[1] = 'x'\n  }\n  // ignore any patch version because we only return minor versions\n  // range[2] = 'x'\n  switch (operator) {\n    case '<=':\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) <= 0\n      }\n    case '>=':\n    default:\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) >= 0\n      }\n  }\n}\n\n// this follows the npm-like semver behavior\nfunction compareSemverLoose(version, range) {\n  if (version[0] !== range[0]) {\n    return version[0] < range[0] ? -1 : +1\n  }\n  if (range[1] === 'x') {\n    return 0\n  }\n  if (version[1] !== range[1]) {\n    return version[1] < range[1] ? -1 : +1\n  }\n  return 0\n}\n\nfunction resolveVersion(data, version) {\n  if (data.versions.indexOf(version) !== -1) {\n    return version\n  } else if (browserslist.versionAliases[data.name][version]) {\n    return browserslist.versionAliases[data.name][version]\n  } else {\n    return false\n  }\n}\n\nfunction normalizeVersion(data, version) {\n  var resolved = resolveVersion(data, version)\n  if (resolved) {\n    return resolved\n  } else if (data.versions.length === 1) {\n    return data.versions[0]\n  } else {\n    return false\n  }\n}\n\nfunction filterByYear(since, context) {\n  since = since / 1000\n  return Object.keys(agents).reduce(function (selected, name) {\n    var data = byName(name, context)\n    if (!data) return selected\n    var versions = Object.keys(data.releaseDate).filter(function (v) {\n      var date = data.releaseDate[v]\n      return date !== null && date >= since\n    })\n    return selected.concat(versions.map(nameMapper(data.name)))\n  }, [])\n}\n\nfunction cloneData(data) {\n  return {\n    name: data.name,\n    versions: data.versions,\n    released: data.released,\n    releaseDate: data.releaseDate\n  }\n}\n\nfunction mapVersions(data, map) {\n  data.versions = data.versions.map(function (i) {\n    return map[i] || i\n  })\n  data.released = data.released.map(function (i) {\n    return map[i] || i\n  })\n  var fixedDate = {}\n  for (var i in data.releaseDate) {\n    fixedDate[map[i] || i] = data.releaseDate[i]\n  }\n  data.releaseDate = fixedDate\n  return data\n}\n\nfunction byName(name, context) {\n  name = name.toLowerCase()\n  name = browserslist.aliases[name] || name\n  if (context.mobileToDesktop && browserslist.desktopNames[name]) {\n    var desktop = browserslist.data[browserslist.desktopNames[name]]\n    if (name === 'android') {\n      return normalizeAndroidData(cloneData(browserslist.data[name]), desktop)\n    } else {\n      var cloned = cloneData(desktop)\n      cloned.name = name\n      if (name === 'op_mob') {\n        cloned = mapVersions(cloned, { '10.0-10.1': '10' })\n      }\n      return cloned\n    }\n  }\n  return browserslist.data[name]\n}\n\nfunction normalizeAndroidVersions(androidVersions, chromeVersions) {\n  var firstEvergreen = ANDROID_EVERGREEN_FIRST\n  var last = chromeVersions[chromeVersions.length - 1]\n  return androidVersions\n    .filter(function (version) {\n      return /^(?:[2-4]\\.|[34]$)/.test(version)\n    })\n    .concat(chromeVersions.slice(firstEvergreen - last - 1))\n}\n\nfunction normalizeAndroidData(android, chrome) {\n  android.released = normalizeAndroidVersions(android.released, chrome.released)\n  android.versions = normalizeAndroidVersions(android.versions, chrome.versions)\n  return android\n}\n\nfunction checkName(name, context) {\n  var data = byName(name, context)\n  if (!data) throw new BrowserslistError('Unknown browser ' + name)\n  return data\n}\n\nfunction unknownQuery(query) {\n  return new BrowserslistError(\n    'Unknown browser query `' +\n      query +\n      '`. ' +\n      'Maybe you are using old Browserslist or made typo in query.'\n  )\n}\n\nfunction filterAndroid(list, versions, context) {\n  if (context.mobileToDesktop) return list\n  var released = browserslist.data.android.released\n  var last = released[released.length - 1]\n  var diff = last - ANDROID_EVERGREEN_FIRST - versions\n  if (diff > 0) {\n    return list.slice(-1)\n  } else {\n    return list.slice(diff - 1)\n  }\n}\n\n/**\n * Resolves queries into a browser list.\n * @param {string|string[]} queries Queries to combine.\n * Either an array of queries or a long string of queries.\n * @param {object} [context] Optional arguments to\n * the select function in `queries`.\n * @returns {string[]} A list of browsers\n */\nfunction resolve(queries, context) {\n  if (Array.isArray(queries)) {\n    queries = flatten(queries.map(parse))\n  } else {\n    queries = parse(queries)\n  }\n\n  return queries.reduce(function (result, query, index) {\n    var selection = query.queryString\n\n    var isExclude = selection.indexOf('not ') === 0\n    if (isExclude) {\n      if (index === 0) {\n        throw new BrowserslistError(\n          'Write any browsers query (for instance, `defaults`) ' +\n            'before `' +\n            selection +\n            '`'\n        )\n      }\n      selection = selection.slice(4)\n    }\n\n    for (var i = 0; i < QUERIES.length; i++) {\n      var type = QUERIES[i]\n      var match = selection.match(type.regexp)\n      if (match) {\n        var args = [context].concat(match.slice(1))\n        var array = type.select.apply(browserslist, args).map(function (j) {\n          var parts = j.split(' ')\n          if (parts[1] === '0') {\n            return parts[0] + ' ' + byName(parts[0], context).versions[0]\n          } else {\n            return j\n          }\n        })\n\n        switch (query.type) {\n          case QUERY_AND:\n            if (isExclude) {\n              return result.filter(function (j) {\n                return array.indexOf(j) === -1\n              })\n            } else {\n              return result.filter(function (j) {\n                return array.indexOf(j) !== -1\n              })\n            }\n          case QUERY_OR:\n          default:\n            if (isExclude) {\n              var filter = {}\n              array.forEach(function (j) {\n                filter[j] = true\n              })\n              return result.filter(function (j) {\n                return !filter[j]\n              })\n            }\n            return result.concat(array)\n        }\n      }\n    }\n\n    throw unknownQuery(selection)\n  }, [])\n}\n\nvar cache = {}\n\n/**\n * Return array of browsers by selection queries.\n *\n * @param {(string|string[])} [queries=browserslist.defaults] Browser queries.\n * @param {object} [opts] Options.\n * @param {string} [opts.path=\".\"] Path to processed file.\n *                                 It will be used to find config files.\n * @param {string} [opts.env=\"production\"] Processing environment.\n *                                         It will be used to take right\n *                                         queries from config file.\n * @param {string} [opts.config] Path to config file with queries.\n * @param {object} [opts.stats] Custom browser usage statistics\n *                              for \"> 1% in my stats\" query.\n * @param {boolean} [opts.ignoreUnknownVersions=false] Do not throw on unknown\n *                                                     version in direct query.\n * @param {boolean} [opts.dangerousExtend] Disable security checks\n *                                         for extend query.\n * @param {boolean} [opts.throwOnMissing] Throw error on missing env.\n * @param {boolean} [opts.mobileToDesktop] Alias mobile browsers to the desktop\n *                                         version when Can I Use doesn't have\n *                                         data about the specified version.\n * @returns {string[]} Array with browser names in Can I Use.\n *\n * @example\n * browserslist('IE >= 10, IE 8') //=> ['ie 11', 'ie 10', 'ie 8']\n */\nfunction browserslist(queries, opts) {\n  if (typeof opts === 'undefined') opts = {}\n\n  if (typeof opts.path === 'undefined') {\n    opts.path = path.resolve ? path.resolve('.') : '.'\n  }\n\n  if (typeof queries === 'undefined' || queries === null) {\n    var config = browserslist.loadConfig(opts)\n    if (config) {\n      queries = config\n    } else {\n      queries = browserslist.defaults\n    }\n  }\n\n  if (!(typeof queries === 'string' || Array.isArray(queries))) {\n    throw new BrowserslistError(\n      'Browser queries must be an array or string. Got ' + typeof queries + '.'\n    )\n  }\n\n  var context = {\n    ignoreUnknownVersions: opts.ignoreUnknownVersions,\n    dangerousExtend: opts.dangerousExtend,\n    mobileToDesktop: opts.mobileToDesktop,\n    path: opts.path,\n    env: opts.env\n  }\n\n  env.oldDataWarning(browserslist.data)\n  var stats = env.getStat(opts, browserslist.data)\n  if (stats) {\n    context.customUsage = {}\n    for (var browser in stats) {\n      fillUsage(context.customUsage, browser, stats[browser])\n    }\n  }\n\n  var cacheKey = JSON.stringify([queries, context])\n  if (cache[cacheKey]) return cache[cacheKey]\n\n  var result = uniq(resolve(queries, context)).sort(function (name1, name2) {\n    name1 = name1.split(' ')\n    name2 = name2.split(' ')\n    if (name1[0] === name2[0]) {\n      // assumptions on caniuse data\n      // 1) version ranges never overlaps\n      // 2) if version is not a range, it never contains `-`\n      var version1 = name1[1].split('-')[0]\n      var version2 = name2[1].split('-')[0]\n      return compareSemver(version2.split('.'), version1.split('.'))\n    } else {\n      return compare(name1[0], name2[0])\n    }\n  })\n  if (!process.env.BROWSERSLIST_DISABLE_CACHE) {\n    cache[cacheKey] = result\n  }\n  return result\n}\n\nfunction parse(queries) {\n  var qs = []\n  do {\n    queries = doMatch(queries, qs)\n  } while (queries)\n  return qs\n}\n\nfunction doMatch(string, qs) {\n  var or = /^(?:,\\s*|\\s+or\\s+)(.*)/i\n  var and = /^\\s+and\\s+(.*)/i\n\n  return find(string, function (parsed, n, max) {\n    if (and.test(parsed)) {\n      qs.unshift({ type: QUERY_AND, queryString: parsed.match(and)[1] })\n      return true\n    } else if (or.test(parsed)) {\n      qs.unshift({ type: QUERY_OR, queryString: parsed.match(or)[1] })\n      return true\n    } else if (n === max) {\n      qs.unshift({ type: QUERY_OR, queryString: parsed.trim() })\n      return true\n    }\n    return false\n  })\n}\n\nfunction find(string, predicate) {\n  for (var n = 1, max = string.length; n <= max; n++) {\n    var parsed = string.substr(-n, n)\n    if (predicate(parsed, n, max)) {\n      return string.slice(0, -n)\n    }\n  }\n  return ''\n}\n\nfunction flatten(array) {\n  if (!Array.isArray(array)) return [array]\n  return array.reduce(function (a, b) {\n    return a.concat(flatten(b))\n  }, [])\n}\n\n// Will be filled by Can I Use data below\nbrowserslist.cache = {}\nbrowserslist.data = {}\nbrowserslist.usage = {\n  global: {},\n  custom: null\n}\n\n// Default browsers query\nbrowserslist.defaults = ['> 0.5%', 'last 2 versions', 'Firefox ESR', 'not dead']\n\n// Browser names aliases\nbrowserslist.aliases = {\n  fx: 'firefox',\n  ff: 'firefox',\n  ios: 'ios_saf',\n  explorer: 'ie',\n  blackberry: 'bb',\n  explorermobile: 'ie_mob',\n  operamini: 'op_mini',\n  operamobile: 'op_mob',\n  chromeandroid: 'and_chr',\n  firefoxandroid: 'and_ff',\n  ucandroid: 'and_uc',\n  qqandroid: 'and_qq'\n}\n\n// Can I Use only provides a few versions for some browsers (e.g. and_chr).\n// Fallback to a similar browser for unknown versions\nbrowserslist.desktopNames = {\n  and_chr: 'chrome',\n  and_ff: 'firefox',\n  ie_mob: 'ie',\n  op_mob: 'opera',\n  android: 'chrome' // has extra processing logic\n}\n\n// Aliases to work with joined versions like `ios_saf 7.0-7.1`\nbrowserslist.versionAliases = {}\n\nbrowserslist.clearCaches = env.clearCaches\nbrowserslist.parseConfig = env.parseConfig\nbrowserslist.readConfig = env.readConfig\nbrowserslist.findConfig = env.findConfig\nbrowserslist.loadConfig = env.loadConfig\n\n/**\n * Return browsers market coverage.\n *\n * @param {string[]} browsers Browsers names in Can I Use.\n * @param {string|object} [stats=\"global\"] Which statistics should be used.\n *                                         Country code or custom statistics.\n *                                         Pass `\"my stats\"` to load statistics\n *                                         from Browserslist files.\n *\n * @return {number} Total market coverage for all selected browsers.\n *\n * @example\n * browserslist.coverage(browserslist('> 1% in US'), 'US') //=> 83.1\n */\nbrowserslist.coverage = function (browsers, stats) {\n  var data\n  if (typeof stats === 'undefined') {\n    data = browserslist.usage.global\n  } else if (stats === 'my stats') {\n    var opts = {}\n    opts.path = path.resolve ? path.resolve('.') : '.'\n    var customStats = env.getStat(opts)\n    if (!customStats) {\n      throw new BrowserslistError('Custom usage statistics was not provided')\n    }\n    data = {}\n    for (var browser in customStats) {\n      fillUsage(data, browser, customStats[browser])\n    }\n  } else if (typeof stats === 'string') {\n    if (stats.length > 2) {\n      stats = stats.toLowerCase()\n    } else {\n      stats = stats.toUpperCase()\n    }\n    env.loadCountry(browserslist.usage, stats, browserslist.data)\n    data = browserslist.usage[stats]\n  } else {\n    if ('dataByBrowser' in stats) {\n      stats = stats.dataByBrowser\n    }\n    data = {}\n    for (var name in stats) {\n      for (var version in stats[name]) {\n        data[name + ' ' + version] = stats[name][version]\n      }\n    }\n  }\n\n  return browsers.reduce(function (all, i) {\n    var usage = data[i]\n    if (usage === undefined) {\n      usage = data[i.replace(/ \\S+$/, ' 0')]\n    }\n    return all + (usage || 0)\n  }, 0)\n}\n\nfunction nodeQuery(context, version) {\n  var matched = browserslist.nodeVersions.filter(function (i) {\n    return isVersionsMatch(i, version)\n  })\n  if (matched.length === 0) {\n    if (context.ignoreUnknownVersions) {\n      return []\n    } else {\n      throw new BrowserslistError('Unknown version ' + version + ' of Node.js')\n    }\n  }\n  return ['node ' + matched[matched.length - 1]]\n}\n\nfunction sinceQuery(context, year, month, date) {\n  year = parseInt(year)\n  month = parseInt(month || '01') - 1\n  date = parseInt(date || '01')\n  return filterByYear(Date.UTC(year, month, date, 0, 0, 0), context)\n}\n\nfunction coverQuery(context, coverage, statMode) {\n  coverage = parseFloat(coverage)\n  var usage = browserslist.usage.global\n  if (statMode) {\n    if (statMode.match(/^my\\s+stats$/i)) {\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      usage = context.customUsage\n    } else {\n      var place\n      if (statMode.length === 2) {\n        place = statMode.toUpperCase()\n      } else {\n        place = statMode.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      usage = browserslist.usage[place]\n    }\n  }\n  var versions = Object.keys(usage).sort(function (a, b) {\n    return usage[b] - usage[a]\n  })\n  var coveraged = 0\n  var result = []\n  var version\n  for (var i = 0; i < versions.length; i++) {\n    version = versions[i]\n    if (usage[version] === 0) break\n    coveraged += usage[version]\n    result.push(version)\n    if (coveraged >= coverage) break\n  }\n  return result\n}\n\nvar QUERIES = [\n  {\n    regexp: /^last\\s+(\\d+)\\s+major\\s+versions?$/i,\n    select: function (context, versions) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = getMajorVersions(data.released, versions)\n        list = list.map(nameMapper(data.name))\n        if (data.name === 'android') {\n          list = filterAndroid(list, versions, context)\n        }\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  {\n    regexp: /^last\\s+(\\d+)\\s+versions?$/i,\n    select: function (context, versions) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.released.slice(-versions)\n        list = list.map(nameMapper(data.name))\n        if (data.name === 'android') {\n          list = filterAndroid(list, versions, context)\n        }\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  {\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+major\\s+versions?$/i,\n    select: function (context, versions) {\n      var validVersions = getMajorVersions(Object.keys(e2c), versions)\n      return validVersions.map(function (i) {\n        return 'chrome ' + e2c[i]\n      })\n    }\n  },\n  {\n    regexp: /^last\\s+(\\d+)\\s+node\\s+major\\s+versions?$/i,\n    select: function (context, versions) {\n      return getMajorVersions(browserslist.nodeVersions, versions).map(\n        function (version) {\n          return 'node ' + version\n        }\n      )\n    }\n  },\n  {\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+major\\s+versions?$/i,\n    select: function (context, versions, name) {\n      var data = checkName(name, context)\n      var validVersions = getMajorVersions(data.released, versions)\n      var list = validVersions.map(nameMapper(data.name))\n      if (data.name === 'android') {\n        list = filterAndroid(list, versions, context)\n      }\n      return list\n    }\n  },\n  {\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+versions?$/i,\n    select: function (context, versions) {\n      return Object.keys(e2c)\n        .slice(-versions)\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  {\n    regexp: /^last\\s+(\\d+)\\s+node\\s+versions?$/i,\n    select: function (context, versions) {\n      return browserslist.nodeVersions.slice(-versions).map(function (version) {\n        return 'node ' + version\n      })\n    }\n  },\n  {\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, versions, name) {\n      var data = checkName(name, context)\n      var list = data.released.slice(-versions).map(nameMapper(data.name))\n      if (data.name === 'android') {\n        list = filterAndroid(list, versions, context)\n      }\n      return list\n    }\n  },\n  {\n    regexp: /^unreleased\\s+versions$/i,\n    select: function (context) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.versions.filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        list = list.map(nameMapper(data.name))\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  {\n    regexp: /^unreleased\\s+electron\\s+versions?$/i,\n    select: function () {\n      return []\n    }\n  },\n  {\n    regexp: /^unreleased\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, name) {\n      var data = checkName(name, context)\n      return data.versions\n        .filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        .map(nameMapper(data.name))\n    }\n  },\n  {\n    regexp: /^last\\s+(\\d*.?\\d+)\\s+years?$/i,\n    select: function (context, years) {\n      return filterByYear(Date.now() - YEAR * years, context)\n    }\n  },\n  {\n    regexp: /^since (\\d+)$/i,\n    select: sinceQuery\n  },\n  {\n    regexp: /^since (\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  {\n    regexp: /^since (\\d+)-(\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  {\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%$/,\n    select: function (context, sign, popularity) {\n      popularity = parseFloat(popularity)\n      var usage = browserslist.usage.global\n      return Object.keys(usage).reduce(function (result, version) {\n        if (sign === '>') {\n          if (usage[version] > popularity) {\n            result.push(version)\n          }\n        } else if (sign === '<') {\n          if (usage[version] < popularity) {\n            result.push(version)\n          }\n        } else if (sign === '<=') {\n          if (usage[version] <= popularity) {\n            result.push(version)\n          }\n        } else if (usage[version] >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  {\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+my\\s+stats$/,\n    select: function (context, sign, popularity) {\n      popularity = parseFloat(popularity)\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      var usage = context.customUsage\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  {\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(\\S+)\\s+stats$/,\n    select: function (context, sign, popularity, name) {\n      popularity = parseFloat(popularity)\n      var stats = env.loadStat(context, name, browserslist.data)\n      if (stats) {\n        context.customUsage = {}\n        for (var browser in stats) {\n          fillUsage(context.customUsage, browser, stats[browser])\n        }\n      }\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      var usage = context.customUsage\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  {\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+((alt-)?\\w\\w)$/,\n    select: function (context, sign, popularity, place) {\n      popularity = parseFloat(popularity)\n      if (place.length === 2) {\n        place = place.toUpperCase()\n      } else {\n        place = place.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      var usage = browserslist.usage[place]\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  {\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%$/i,\n    select: coverQuery\n  },\n  {\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(my\\s+stats|(alt-)?\\w\\w)$/i,\n    select: coverQuery\n  },\n  {\n    regexp: /^supports\\s+([\\w-]+)$/,\n    select: function (context, feature) {\n      env.loadFeature(browserslist.cache, feature)\n      var features = browserslist.cache[feature]\n      return Object.keys(features).reduce(function (result, version) {\n        var flags = features[version]\n        if (flags.indexOf('y') >= 0 || flags.indexOf('a') >= 0) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  {\n    regexp: /^electron\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, from, to) {\n      var fromToUse = normalizeElectron(from)\n      var toToUse = normalizeElectron(to)\n      if (!e2c[fromToUse]) {\n        throw new BrowserslistError('Unknown version ' + from + ' of electron')\n      }\n      if (!e2c[toToUse]) {\n        throw new BrowserslistError('Unknown version ' + to + ' of electron')\n      }\n      from = parseFloat(from)\n      to = parseFloat(to)\n      return Object.keys(e2c)\n        .filter(function (i) {\n          var parsed = parseFloat(i)\n          return parsed >= from && parsed <= to\n        })\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  {\n    regexp: /^node\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, from, to) {\n      return browserslist.nodeVersions\n        .filter(semverFilterLoose('>=', from))\n        .filter(semverFilterLoose('<=', to))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  {\n    regexp: /^(\\w+)\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, name, from, to) {\n      var data = checkName(name, context)\n      from = parseFloat(normalizeVersion(data, from) || from)\n      to = parseFloat(normalizeVersion(data, to) || to)\n      function filter(v) {\n        var parsed = parseFloat(v)\n        return parsed >= from && parsed <= to\n      }\n      return data.released.filter(filter).map(nameMapper(data.name))\n    }\n  },\n  {\n    regexp: /^electron\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, sign, version) {\n      var versionToUse = normalizeElectron(version)\n      return Object.keys(e2c)\n        .filter(generateFilter(sign, versionToUse))\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  {\n    regexp: /^node\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, sign, version) {\n      return browserslist.nodeVersions\n        .filter(generateSemverFilter(sign, version))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  {\n    regexp: /^(\\w+)\\s*(>=?|<=?)\\s*([\\d.]+)$/,\n    select: function (context, name, sign, version) {\n      var data = checkName(name, context)\n      var alias = browserslist.versionAliases[data.name][version]\n      if (alias) {\n        version = alias\n      }\n      return data.released\n        .filter(generateFilter(sign, version))\n        .map(function (v) {\n          return data.name + ' ' + v\n        })\n    }\n  },\n  {\n    regexp: /^(firefox|ff|fx)\\s+esr$/i,\n    select: function () {\n      return ['firefox 91']\n    }\n  },\n  {\n    regexp: /(operamini|op_mini)\\s+all/i,\n    select: function () {\n      return ['op_mini all']\n    }\n  },\n  {\n    regexp: /^electron\\s+([\\d.]+)$/i,\n    select: function (context, version) {\n      var versionToUse = normalizeElectron(version)\n      var chrome = e2c[versionToUse]\n      if (!chrome) {\n        throw new BrowserslistError(\n          'Unknown version ' + version + ' of electron'\n        )\n      }\n      return ['chrome ' + chrome]\n    }\n  },\n  {\n    regexp: /^node\\s+(\\d+)$/i,\n    select: nodeQuery\n  },\n  {\n    regexp: /^node\\s+(\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  {\n    regexp: /^node\\s+(\\d+\\.\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  {\n    regexp: /^current\\s+node$/i,\n    select: function (context) {\n      return [env.currentNode(resolve, context)]\n    }\n  },\n  {\n    regexp: /^maintained\\s+node\\s+versions$/i,\n    select: function (context) {\n      var now = Date.now()\n      var queries = Object.keys(jsEOL)\n        .filter(function (key) {\n          return (\n            now < Date.parse(jsEOL[key].end) &&\n            now > Date.parse(jsEOL[key].start) &&\n            isEolReleased(key)\n          )\n        })\n        .map(function (key) {\n          return 'node ' + key.slice(1)\n        })\n      return resolve(queries, context)\n    }\n  },\n  {\n    regexp: /^phantomjs\\s+1.9$/i,\n    select: function () {\n      return ['safari 5']\n    }\n  },\n  {\n    regexp: /^phantomjs\\s+2.1$/i,\n    select: function () {\n      return ['safari 6']\n    }\n  },\n  {\n    regexp: /^(\\w+)\\s+(tp|[\\d.]+)$/i,\n    select: function (context, name, version) {\n      if (/^tp$/i.test(version)) version = 'TP'\n      var data = checkName(name, context)\n      var alias = normalizeVersion(data, version)\n      if (alias) {\n        version = alias\n      } else {\n        if (version.indexOf('.') === -1) {\n          alias = version + '.0'\n        } else {\n          alias = version.replace(/\\.0$/, '')\n        }\n        alias = normalizeVersion(data, alias)\n        if (alias) {\n          version = alias\n        } else if (context.ignoreUnknownVersions) {\n          return []\n        } else {\n          throw new BrowserslistError(\n            'Unknown version ' + version + ' of ' + name\n          )\n        }\n      }\n      return [data.name + ' ' + version]\n    }\n  },\n  {\n    regexp: /^browserslist config$/i,\n    select: function (context) {\n      return browserslist(undefined, context)\n    }\n  },\n  {\n    regexp: /^extends (.+)$/i,\n    select: function (context, name) {\n      return resolve(env.loadQueries(context, name), context)\n    }\n  },\n  {\n    regexp: /^defaults$/i,\n    select: function (context) {\n      return resolve(browserslist.defaults, context)\n    }\n  },\n  {\n    regexp: /^dead$/i,\n    select: function (context) {\n      var dead = [\n        'Baidu >= 0',\n        'ie <= 10',\n        'ie_mob <= 11',\n        'bb <= 10',\n        'op_mob <= 12.1',\n        'samsung 4'\n      ]\n      return resolve(dead, context)\n    }\n  },\n  {\n    regexp: /^(\\w+)$/i,\n    select: function (context, name) {\n      if (byName(name, context)) {\n        throw new BrowserslistError(\n          'Specify versions in Browserslist query for browser ' + name\n        )\n      } else {\n        throw unknownQuery(name)\n      }\n    }\n  }\n]\n\n// Get and convert Can I Use data\n\n;(function () {\n  for (var name in agents) {\n    var browser = agents[name]\n    browserslist.data[name] = {\n      name: name,\n      versions: normalize(agents[name].versions),\n      released: normalize(agents[name].versions.slice(0, -3)),\n      releaseDate: agents[name].release_date\n    }\n    fillUsage(browserslist.usage.global, name, browser.usage_global)\n\n    browserslist.versionAliases[name] = {}\n    for (var i = 0; i < browser.versions.length; i++) {\n      var full = browser.versions[i]\n      if (!full) continue\n\n      if (full.indexOf('-') !== -1) {\n        var interval = full.split('-')\n        for (var j = 0; j < interval.length; j++) {\n          browserslist.versionAliases[name][interval[j]] = full\n        }\n      }\n    }\n  }\n\n  browserslist.versionAliases.op_mob['59'] = '58'\n\n  browserslist.nodeVersions = jsReleases.map(function (release) {\n    return release.version\n  })\n})()\n\nmodule.exports = browserslist\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}