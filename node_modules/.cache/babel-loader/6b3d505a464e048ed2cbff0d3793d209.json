{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  ConcatSource\n} = require(\"webpack-sources\");\n\nconst {\n  RuntimeGlobals\n} = require(\"..\");\n\nconst HotUpdateChunk = require(\"../HotUpdateChunk\");\n\nconst Template = require(\"../Template\");\n\nconst {\n  getAllChunks\n} = require(\"../javascript/ChunkHelpers\");\n\nconst {\n  getCompilationHooks,\n  getChunkFilenameTemplate\n} = require(\"../javascript/JavascriptModulesPlugin\");\n\nconst {\n  updateHashForEntryStartup\n} = require(\"../javascript/StartupHelpers\");\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n\nclass ModuleChunkFormatPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.thisCompilation.tap(\"ModuleChunkFormatPlugin\", compilation => {\n      compilation.hooks.additionalChunkRuntimeRequirements.tap(\"ModuleChunkFormatPlugin\", (chunk, set) => {\n        if (chunk.hasRuntime()) return;\n\n        if (compilation.chunkGraph.getNumberOfEntryModules(chunk) > 0) {\n          set.add(RuntimeGlobals.require);\n          set.add(RuntimeGlobals.startupEntrypoint);\n          set.add(RuntimeGlobals.externalInstallChunk);\n        }\n      });\n      const hooks = getCompilationHooks(compilation);\n      hooks.renderChunk.tap(\"ModuleChunkFormatPlugin\", (modules, renderContext) => {\n        const {\n          chunk,\n          chunkGraph,\n          runtimeTemplate\n        } = renderContext;\n        const hotUpdateChunk = chunk instanceof HotUpdateChunk ? chunk : null;\n        const source = new ConcatSource();\n\n        if (hotUpdateChunk) {\n          throw new Error(\"HMR is not implemented for module chunk format yet\");\n        } else {\n          source.add(`export const id = ${JSON.stringify(chunk.id)};\\n`);\n          source.add(`export const ids = ${JSON.stringify(chunk.ids)};\\n`);\n          source.add(`export const modules = `);\n          source.add(modules);\n          source.add(`;\\n`);\n          const runtimeModules = chunkGraph.getChunkRuntimeModulesInOrder(chunk);\n\n          if (runtimeModules.length > 0) {\n            source.add(\"export const runtime =\\n\");\n            source.add(Template.renderChunkRuntimeModules(runtimeModules, renderContext));\n          }\n\n          const entries = Array.from(chunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk));\n\n          if (entries.length > 0) {\n            const runtimeChunk = entries[0][1].getRuntimeChunk();\n            const currentOutputName = compilation.getPath(getChunkFilenameTemplate(chunk, compilation.outputOptions), {\n              chunk,\n              contentHashType: \"javascript\"\n            }).split(\"/\"); // remove filename, we only need the directory\n\n            currentOutputName.pop();\n\n            const getRelativePath = chunk => {\n              const baseOutputName = currentOutputName.slice();\n              const chunkOutputName = compilation.getPath(getChunkFilenameTemplate(chunk, compilation.outputOptions), {\n                chunk: chunk,\n                contentHashType: \"javascript\"\n              }).split(\"/\"); // remove common parts\n\n              while (baseOutputName.length > 0 && chunkOutputName.length > 0 && baseOutputName[0] === chunkOutputName[0]) {\n                baseOutputName.shift();\n                chunkOutputName.shift();\n              } // create final path\n\n\n              return (baseOutputName.length > 0 ? \"../\".repeat(baseOutputName.length) : \"./\") + chunkOutputName.join(\"/\");\n            };\n\n            const entrySource = new ConcatSource();\n            entrySource.add(source);\n            entrySource.add(\";\\n\\n// load runtime\\n\");\n            entrySource.add(`import __webpack_require__ from ${JSON.stringify(getRelativePath(runtimeChunk))};\\n`);\n            const startupSource = new ConcatSource();\n            startupSource.add(`var __webpack_exec__ = ${runtimeTemplate.returningFunction(`__webpack_require__(${RuntimeGlobals.entryModuleId} = moduleId)`, \"moduleId\")}\\n`);\n            const loadedChunks = new Set();\n            let index = 0;\n\n            for (let i = 0; i < entries.length; i++) {\n              const [module, entrypoint] = entries[i];\n              const final = i + 1 === entries.length;\n              const moduleId = chunkGraph.getModuleId(module);\n              const chunks = getAllChunks(entrypoint, runtimeChunk, undefined);\n\n              for (const chunk of chunks) {\n                if (loadedChunks.has(chunk)) continue;\n                loadedChunks.add(chunk);\n                startupSource.add(`import * as __webpack_chunk_${index}__ from ${JSON.stringify(getRelativePath(chunk))};\\n`);\n                startupSource.add(`${RuntimeGlobals.externalInstallChunk}(__webpack_chunk_${index}__);\\n`);\n                index++;\n              }\n\n              startupSource.add(`${final ? \"var __webpack_exports__ = \" : \"\"}__webpack_exec__(${JSON.stringify(moduleId)});\\n`);\n            }\n\n            entrySource.add(hooks.renderStartup.call(startupSource, entries[entries.length - 1][0], { ...renderContext,\n              inlined: false\n            }));\n            return entrySource;\n          }\n        }\n\n        return source;\n      });\n      hooks.chunkHash.tap(\"ModuleChunkFormatPlugin\", (chunk, hash, _ref) => {\n        let {\n          chunkGraph,\n          runtimeTemplate\n        } = _ref;\n        if (chunk.hasRuntime()) return;\n        hash.update(\"ModuleChunkFormatPlugin\");\n        hash.update(\"1\");\n        const entries = Array.from(chunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk));\n        updateHashForEntryStartup(hash, chunkGraph, entries, chunk);\n      });\n    });\n  }\n\n}\n\nmodule.exports = ModuleChunkFormatPlugin;","map":{"version":3,"names":["ConcatSource","require","RuntimeGlobals","HotUpdateChunk","Template","getAllChunks","getCompilationHooks","getChunkFilenameTemplate","updateHashForEntryStartup","ModuleChunkFormatPlugin","apply","compiler","hooks","thisCompilation","tap","compilation","additionalChunkRuntimeRequirements","chunk","set","hasRuntime","chunkGraph","getNumberOfEntryModules","add","startupEntrypoint","externalInstallChunk","renderChunk","modules","renderContext","runtimeTemplate","hotUpdateChunk","source","Error","JSON","stringify","id","ids","runtimeModules","getChunkRuntimeModulesInOrder","length","renderChunkRuntimeModules","entries","Array","from","getChunkEntryModulesWithChunkGroupIterable","runtimeChunk","getRuntimeChunk","currentOutputName","getPath","outputOptions","contentHashType","split","pop","getRelativePath","baseOutputName","slice","chunkOutputName","shift","repeat","join","entrySource","startupSource","returningFunction","entryModuleId","loadedChunks","Set","index","i","module","entrypoint","final","moduleId","getModuleId","chunks","undefined","has","renderStartup","call","inlined","chunkHash","hash","update","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/esm/ModuleChunkFormatPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\nconst { RuntimeGlobals } = require(\"..\");\nconst HotUpdateChunk = require(\"../HotUpdateChunk\");\nconst Template = require(\"../Template\");\nconst { getAllChunks } = require(\"../javascript/ChunkHelpers\");\nconst {\n\tgetCompilationHooks,\n\tgetChunkFilenameTemplate\n} = require(\"../javascript/JavascriptModulesPlugin\");\nconst { updateHashForEntryStartup } = require(\"../javascript/StartupHelpers\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass ModuleChunkFormatPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"ModuleChunkFormatPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.additionalChunkRuntimeRequirements.tap(\n\t\t\t\t\t\"ModuleChunkFormatPlugin\",\n\t\t\t\t\t(chunk, set) => {\n\t\t\t\t\t\tif (chunk.hasRuntime()) return;\n\t\t\t\t\t\tif (compilation.chunkGraph.getNumberOfEntryModules(chunk) > 0) {\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.require);\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.startupEntrypoint);\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.externalInstallChunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst hooks = getCompilationHooks(compilation);\n\t\t\t\thooks.renderChunk.tap(\n\t\t\t\t\t\"ModuleChunkFormatPlugin\",\n\t\t\t\t\t(modules, renderContext) => {\n\t\t\t\t\t\tconst { chunk, chunkGraph, runtimeTemplate } = renderContext;\n\t\t\t\t\t\tconst hotUpdateChunk =\n\t\t\t\t\t\t\tchunk instanceof HotUpdateChunk ? chunk : null;\n\t\t\t\t\t\tconst source = new ConcatSource();\n\t\t\t\t\t\tif (hotUpdateChunk) {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\"HMR is not implemented for module chunk format yet\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsource.add(`export const id = ${JSON.stringify(chunk.id)};\\n`);\n\t\t\t\t\t\t\tsource.add(`export const ids = ${JSON.stringify(chunk.ids)};\\n`);\n\t\t\t\t\t\t\tsource.add(`export const modules = `);\n\t\t\t\t\t\t\tsource.add(modules);\n\t\t\t\t\t\t\tsource.add(`;\\n`);\n\t\t\t\t\t\t\tconst runtimeModules =\n\t\t\t\t\t\t\t\tchunkGraph.getChunkRuntimeModulesInOrder(chunk);\n\t\t\t\t\t\t\tif (runtimeModules.length > 0) {\n\t\t\t\t\t\t\t\tsource.add(\"export const runtime =\\n\");\n\t\t\t\t\t\t\t\tsource.add(\n\t\t\t\t\t\t\t\t\tTemplate.renderChunkRuntimeModules(\n\t\t\t\t\t\t\t\t\t\truntimeModules,\n\t\t\t\t\t\t\t\t\t\trenderContext\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst entries = Array.from(\n\t\t\t\t\t\t\t\tchunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (entries.length > 0) {\n\t\t\t\t\t\t\t\tconst runtimeChunk = entries[0][1].getRuntimeChunk();\n\t\t\t\t\t\t\t\tconst currentOutputName = compilation\n\t\t\t\t\t\t\t\t\t.getPath(\n\t\t\t\t\t\t\t\t\t\tgetChunkFilenameTemplate(chunk, compilation.outputOptions),\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.split(\"/\");\n\n\t\t\t\t\t\t\t\t// remove filename, we only need the directory\n\t\t\t\t\t\t\t\tcurrentOutputName.pop();\n\n\t\t\t\t\t\t\t\tconst getRelativePath = chunk => {\n\t\t\t\t\t\t\t\t\tconst baseOutputName = currentOutputName.slice();\n\t\t\t\t\t\t\t\t\tconst chunkOutputName = compilation\n\t\t\t\t\t\t\t\t\t\t.getPath(\n\t\t\t\t\t\t\t\t\t\t\tgetChunkFilenameTemplate(\n\t\t\t\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\t\t\t\tcompilation.outputOptions\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tchunk: chunk,\n\t\t\t\t\t\t\t\t\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t.split(\"/\");\n\n\t\t\t\t\t\t\t\t\t// remove common parts\n\t\t\t\t\t\t\t\t\twhile (\n\t\t\t\t\t\t\t\t\t\tbaseOutputName.length > 0 &&\n\t\t\t\t\t\t\t\t\t\tchunkOutputName.length > 0 &&\n\t\t\t\t\t\t\t\t\t\tbaseOutputName[0] === chunkOutputName[0]\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tbaseOutputName.shift();\n\t\t\t\t\t\t\t\t\t\tchunkOutputName.shift();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// create final path\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t(baseOutputName.length > 0\n\t\t\t\t\t\t\t\t\t\t\t? \"../\".repeat(baseOutputName.length)\n\t\t\t\t\t\t\t\t\t\t\t: \"./\") + chunkOutputName.join(\"/\")\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tconst entrySource = new ConcatSource();\n\t\t\t\t\t\t\t\tentrySource.add(source);\n\t\t\t\t\t\t\t\tentrySource.add(\";\\n\\n// load runtime\\n\");\n\t\t\t\t\t\t\t\tentrySource.add(\n\t\t\t\t\t\t\t\t\t`import __webpack_require__ from ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\tgetRelativePath(runtimeChunk)\n\t\t\t\t\t\t\t\t\t)};\\n`\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tconst startupSource = new ConcatSource();\n\t\t\t\t\t\t\t\tstartupSource.add(\n\t\t\t\t\t\t\t\t\t`var __webpack_exec__ = ${runtimeTemplate.returningFunction(\n\t\t\t\t\t\t\t\t\t\t`__webpack_require__(${RuntimeGlobals.entryModuleId} = moduleId)`,\n\t\t\t\t\t\t\t\t\t\t\"moduleId\"\n\t\t\t\t\t\t\t\t\t)}\\n`\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tconst loadedChunks = new Set();\n\t\t\t\t\t\t\t\tlet index = 0;\n\t\t\t\t\t\t\t\tfor (let i = 0; i < entries.length; i++) {\n\t\t\t\t\t\t\t\t\tconst [module, entrypoint] = entries[i];\n\t\t\t\t\t\t\t\t\tconst final = i + 1 === entries.length;\n\t\t\t\t\t\t\t\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\t\t\t\t\t\t\t\tconst chunks = getAllChunks(\n\t\t\t\t\t\t\t\t\t\tentrypoint,\n\t\t\t\t\t\t\t\t\t\truntimeChunk,\n\t\t\t\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\t\t\t\t\t\tif (loadedChunks.has(chunk)) continue;\n\t\t\t\t\t\t\t\t\t\tloadedChunks.add(chunk);\n\t\t\t\t\t\t\t\t\t\tstartupSource.add(\n\t\t\t\t\t\t\t\t\t\t\t`import * as __webpack_chunk_${index}__ from ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\tgetRelativePath(chunk)\n\t\t\t\t\t\t\t\t\t\t\t)};\\n`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tstartupSource.add(\n\t\t\t\t\t\t\t\t\t\t\t`${RuntimeGlobals.externalInstallChunk}(__webpack_chunk_${index}__);\\n`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tstartupSource.add(\n\t\t\t\t\t\t\t\t\t\t`${\n\t\t\t\t\t\t\t\t\t\t\tfinal ? \"var __webpack_exports__ = \" : \"\"\n\t\t\t\t\t\t\t\t\t\t}__webpack_exec__(${JSON.stringify(moduleId)});\\n`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tentrySource.add(\n\t\t\t\t\t\t\t\t\thooks.renderStartup.call(\n\t\t\t\t\t\t\t\t\t\tstartupSource,\n\t\t\t\t\t\t\t\t\t\tentries[entries.length - 1][0],\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t...renderContext,\n\t\t\t\t\t\t\t\t\t\t\tinlined: false\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn entrySource;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn source;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\thooks.chunkHash.tap(\n\t\t\t\t\t\"ModuleChunkFormatPlugin\",\n\t\t\t\t\t(chunk, hash, { chunkGraph, runtimeTemplate }) => {\n\t\t\t\t\t\tif (chunk.hasRuntime()) return;\n\t\t\t\t\t\thash.update(\"ModuleChunkFormatPlugin\");\n\t\t\t\t\t\thash.update(\"1\");\n\t\t\t\t\t\tconst entries = Array.from(\n\t\t\t\t\t\t\tchunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tupdateHashForEntryStartup(hash, chunkGraph, entries, chunk);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ModuleChunkFormatPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}