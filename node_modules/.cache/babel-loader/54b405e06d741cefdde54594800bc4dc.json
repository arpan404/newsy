{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\n/** @typedef {import(\"../../declarations/WebpackOptions\").WatchOptions} WatchOptions */\n\n/** @typedef {import(\"../FileSystemInfo\").FileSystemInfoEntry} FileSystemInfoEntry */\n\n/**\n * @typedef {Object} IStats\n * @property {() => boolean} isFile\n * @property {() => boolean} isDirectory\n * @property {() => boolean} isBlockDevice\n * @property {() => boolean} isCharacterDevice\n * @property {() => boolean} isSymbolicLink\n * @property {() => boolean} isFIFO\n * @property {() => boolean} isSocket\n * @property {number | bigint} dev\n * @property {number | bigint} ino\n * @property {number | bigint} mode\n * @property {number | bigint} nlink\n * @property {number | bigint} uid\n * @property {number | bigint} gid\n * @property {number | bigint} rdev\n * @property {number | bigint} size\n * @property {number | bigint} blksize\n * @property {number | bigint} blocks\n * @property {number | bigint} atimeMs\n * @property {number | bigint} mtimeMs\n * @property {number | bigint} ctimeMs\n * @property {number | bigint} birthtimeMs\n * @property {Date} atime\n * @property {Date} mtime\n * @property {Date} ctime\n * @property {Date} birthtime\n */\n\n/**\n * @typedef {Object} IDirent\n * @property {() => boolean} isFile\n * @property {() => boolean} isDirectory\n * @property {() => boolean} isBlockDevice\n * @property {() => boolean} isCharacterDevice\n * @property {() => boolean} isSymbolicLink\n * @property {() => boolean} isFIFO\n * @property {() => boolean} isSocket\n * @property {string | Buffer} name\n */\n\n/** @typedef {function((NodeJS.ErrnoException | null)=): void} Callback */\n\n/** @typedef {function((NodeJS.ErrnoException | null)=, Buffer=): void} BufferCallback */\n\n/** @typedef {function((NodeJS.ErrnoException | null)=, Buffer|string=): void} BufferOrStringCallback */\n\n/** @typedef {function((NodeJS.ErrnoException | null)=, (string | Buffer)[] | IDirent[]=): void} DirentArrayCallback */\n\n/** @typedef {function((NodeJS.ErrnoException | null)=, string=): void} StringCallback */\n\n/** @typedef {function((NodeJS.ErrnoException | null)=, number=): void} NumberCallback */\n\n/** @typedef {function((NodeJS.ErrnoException | null)=, IStats=): void} StatsCallback */\n\n/** @typedef {function((NodeJS.ErrnoException | Error | null)=, any=): void} ReadJsonCallback */\n\n/** @typedef {function((NodeJS.ErrnoException | Error | null)=, IStats|string=): void} LstatReadlinkAbsoluteCallback */\n\n/**\n * @typedef {Object} WatcherInfo\n * @property {Set<string>} changes get current aggregated changes that have not yet send to callback\n * @property {Set<string>} removals get current aggregated removals that have not yet send to callback\n * @property {Map<string, FileSystemInfoEntry | \"ignore\">} fileTimeInfoEntries get info about files\n * @property {Map<string, FileSystemInfoEntry | \"ignore\">} contextTimeInfoEntries get info about directories\n */\n// TODO webpack 6 deprecate missing getInfo\n\n/**\n * @typedef {Object} Watcher\n * @property {function(): void} close closes the watcher and all underlying file watchers\n * @property {function(): void} pause closes the watcher, but keeps underlying file watchers alive until the next watch call\n * @property {function(): Set<string>=} getAggregatedChanges get current aggregated changes that have not yet send to callback\n * @property {function(): Set<string>=} getAggregatedRemovals get current aggregated removals that have not yet send to callback\n * @property {function(): Map<string, FileSystemInfoEntry | \"ignore\">} getFileTimeInfoEntries get info about files\n * @property {function(): Map<string, FileSystemInfoEntry | \"ignore\">} getContextTimeInfoEntries get info about directories\n * @property {function(): WatcherInfo=} getInfo get info about timestamps and changes\n */\n\n/**\n * @callback WatchMethod\n * @param {Iterable<string>} files watched files\n * @param {Iterable<string>} directories watched directories\n * @param {Iterable<string>} missing watched exitance entries\n * @param {number} startTime timestamp of start time\n * @param {WatchOptions} options options object\n * @param {function(Error=, Map<string, FileSystemInfoEntry | \"ignore\">, Map<string, FileSystemInfoEntry | \"ignore\">, Set<string>, Set<string>): void} callback aggregated callback\n * @param {function(string, number): void} callbackUndelayed callback when the first change was detected\n * @returns {Watcher} a watcher\n */\n// TODO webpack 6 make optional methods required\n\n/**\n * @typedef {Object} OutputFileSystem\n * @property {function(string, Buffer|string, Callback): void} writeFile\n * @property {function(string, Callback): void} mkdir\n * @property {function(string, DirentArrayCallback): void=} readdir\n * @property {function(string, Callback): void=} rmdir\n * @property {function(string, Callback): void=} unlink\n * @property {function(string, StatsCallback): void} stat\n * @property {function(string, StatsCallback): void=} lstat\n * @property {function(string, BufferOrStringCallback): void} readFile\n * @property {(function(string, string): string)=} join\n * @property {(function(string, string): string)=} relative\n * @property {(function(string): string)=} dirname\n */\n\n/**\n * @typedef {Object} InputFileSystem\n * @property {function(string, BufferOrStringCallback): void} readFile\n * @property {(function(string, ReadJsonCallback): void)=} readJson\n * @property {function(string, BufferOrStringCallback): void} readlink\n * @property {function(string, DirentArrayCallback): void} readdir\n * @property {function(string, StatsCallback): void} stat\n * @property {function(string, StatsCallback): void=} lstat\n * @property {(function(string, BufferOrStringCallback): void)=} realpath\n * @property {(function(string=): void)=} purge\n * @property {(function(string, string): string)=} join\n * @property {(function(string, string): string)=} relative\n * @property {(function(string): string)=} dirname\n */\n\n/**\n * @typedef {Object} WatchFileSystem\n * @property {WatchMethod} watch\n */\n\n/**\n * @typedef {Object} IntermediateFileSystemExtras\n * @property {function(string): void} mkdirSync\n * @property {function(string): NodeJS.WritableStream} createWriteStream\n * @property {function(string, string, NumberCallback): void} open\n * @property {function(number, Buffer, number, number, number, NumberCallback): void} read\n * @property {function(number, Callback): void} close\n * @property {function(string, string, Callback): void} rename\n */\n\n/** @typedef {InputFileSystem & OutputFileSystem & IntermediateFileSystemExtras} IntermediateFileSystem */\n\n/**\n *\n * @param {InputFileSystem|OutputFileSystem|undefined} fs a file system\n * @param {string} rootPath the root path\n * @param {string} targetPath the target path\n * @returns {string} location of targetPath relative to rootPath\n */\n\n\nconst relative = (fs, rootPath, targetPath) => {\n  if (fs && fs.relative) {\n    return fs.relative(rootPath, targetPath);\n  } else if (path.posix.isAbsolute(rootPath)) {\n    return path.posix.relative(rootPath, targetPath);\n  } else if (path.win32.isAbsolute(rootPath)) {\n    return path.win32.relative(rootPath, targetPath);\n  } else {\n    throw new Error(`${rootPath} is neither a posix nor a windows path, and there is no 'relative' method defined in the file system`);\n  }\n};\n\nexports.relative = relative;\n/**\n * @param {InputFileSystem|OutputFileSystem|undefined} fs a file system\n * @param {string} rootPath a path\n * @param {string} filename a filename\n * @returns {string} the joined path\n */\n\nconst join = (fs, rootPath, filename) => {\n  if (fs && fs.join) {\n    return fs.join(rootPath, filename);\n  } else if (path.posix.isAbsolute(rootPath)) {\n    return path.posix.join(rootPath, filename);\n  } else if (path.win32.isAbsolute(rootPath)) {\n    return path.win32.join(rootPath, filename);\n  } else {\n    throw new Error(`${rootPath} is neither a posix nor a windows path, and there is no 'join' method defined in the file system`);\n  }\n};\n\nexports.join = join;\n/**\n * @param {InputFileSystem|OutputFileSystem|undefined} fs a file system\n * @param {string} absPath an absolute path\n * @returns {string} the parent directory of the absolute path\n */\n\nconst dirname = (fs, absPath) => {\n  if (fs && fs.dirname) {\n    return fs.dirname(absPath);\n  } else if (path.posix.isAbsolute(absPath)) {\n    return path.posix.dirname(absPath);\n  } else if (path.win32.isAbsolute(absPath)) {\n    return path.win32.dirname(absPath);\n  } else {\n    throw new Error(`${absPath} is neither a posix nor a windows path, and there is no 'dirname' method defined in the file system`);\n  }\n};\n\nexports.dirname = dirname;\n/**\n * @param {OutputFileSystem} fs a file system\n * @param {string} p an absolute path\n * @param {function(Error=): void} callback callback function for the error\n * @returns {void}\n */\n\nconst mkdirp = (fs, p, callback) => {\n  fs.mkdir(p, err => {\n    if (err) {\n      if (err.code === \"ENOENT\") {\n        const dir = dirname(fs, p);\n\n        if (dir === p) {\n          callback(err);\n          return;\n        }\n\n        mkdirp(fs, dir, err => {\n          if (err) {\n            callback(err);\n            return;\n          }\n\n          fs.mkdir(p, err => {\n            if (err) {\n              if (err.code === \"EEXIST\") {\n                callback();\n                return;\n              }\n\n              callback(err);\n              return;\n            }\n\n            callback();\n          });\n        });\n        return;\n      } else if (err.code === \"EEXIST\") {\n        callback();\n        return;\n      }\n\n      callback(err);\n      return;\n    }\n\n    callback();\n  });\n};\n\nexports.mkdirp = mkdirp;\n/**\n * @param {IntermediateFileSystem} fs a file system\n * @param {string} p an absolute path\n * @returns {void}\n */\n\nconst mkdirpSync = (fs, p) => {\n  try {\n    fs.mkdirSync(p);\n  } catch (err) {\n    if (err) {\n      if (err.code === \"ENOENT\") {\n        const dir = dirname(fs, p);\n\n        if (dir === p) {\n          throw err;\n        }\n\n        mkdirpSync(fs, dir);\n        fs.mkdirSync(p);\n        return;\n      } else if (err.code === \"EEXIST\") {\n        return;\n      }\n\n      throw err;\n    }\n  }\n};\n\nexports.mkdirpSync = mkdirpSync;\n/**\n * @param {InputFileSystem} fs a file system\n * @param {string} p an absolute path\n * @param {ReadJsonCallback} callback callback\n * @returns {void}\n */\n\nconst readJson = (fs, p, callback) => {\n  if (\"readJson\" in fs) return fs.readJson(p, callback);\n  fs.readFile(p, (err, buf) => {\n    if (err) return callback(err);\n    let data;\n\n    try {\n      data = JSON.parse(buf.toString(\"utf-8\"));\n    } catch (e) {\n      return callback(e);\n    }\n\n    return callback(null, data);\n  });\n};\n\nexports.readJson = readJson;\n/**\n * @param {InputFileSystem} fs a file system\n * @param {string} p an absolute path\n * @param {ReadJsonCallback} callback callback\n * @returns {void}\n */\n\nconst lstatReadlinkAbsolute = (fs, p, callback) => {\n  let i = 3;\n\n  const doReadLink = () => {\n    fs.readlink(p, (err, target) => {\n      if (err && --i > 0) {\n        // It might was just changed from symlink to file\n        // we retry 2 times to catch this case before throwing the error\n        return doStat();\n      }\n\n      if (err || !target) return doStat();\n      const value = target.toString();\n      callback(null, join(fs, dirname(fs, p), value));\n    });\n  };\n\n  const doStat = () => {\n    if (\"lstat\" in fs) {\n      return fs.lstat(p, (err, stats) => {\n        if (err) return callback(err);\n\n        if (stats.isSymbolicLink()) {\n          return doReadLink();\n        }\n\n        callback(null, stats);\n      });\n    } else {\n      return fs.stat(p, callback);\n    }\n  };\n\n  if (\"lstat\" in fs) return doStat();\n  doReadLink();\n};\n\nexports.lstatReadlinkAbsolute = lstatReadlinkAbsolute;","map":{"version":3,"names":["path","require","relative","fs","rootPath","targetPath","posix","isAbsolute","win32","Error","exports","join","filename","dirname","absPath","mkdirp","p","callback","mkdir","err","code","dir","mkdirpSync","mkdirSync","readJson","readFile","buf","data","JSON","parse","toString","e","lstatReadlinkAbsolute","i","doReadLink","readlink","target","doStat","value","lstat","stats","isSymbolicLink","stat"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/util/fs.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst path = require(\"path\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").WatchOptions} WatchOptions */\n/** @typedef {import(\"../FileSystemInfo\").FileSystemInfoEntry} FileSystemInfoEntry */\n\n/**\n * @typedef {Object} IStats\n * @property {() => boolean} isFile\n * @property {() => boolean} isDirectory\n * @property {() => boolean} isBlockDevice\n * @property {() => boolean} isCharacterDevice\n * @property {() => boolean} isSymbolicLink\n * @property {() => boolean} isFIFO\n * @property {() => boolean} isSocket\n * @property {number | bigint} dev\n * @property {number | bigint} ino\n * @property {number | bigint} mode\n * @property {number | bigint} nlink\n * @property {number | bigint} uid\n * @property {number | bigint} gid\n * @property {number | bigint} rdev\n * @property {number | bigint} size\n * @property {number | bigint} blksize\n * @property {number | bigint} blocks\n * @property {number | bigint} atimeMs\n * @property {number | bigint} mtimeMs\n * @property {number | bigint} ctimeMs\n * @property {number | bigint} birthtimeMs\n * @property {Date} atime\n * @property {Date} mtime\n * @property {Date} ctime\n * @property {Date} birthtime\n */\n\n/**\n * @typedef {Object} IDirent\n * @property {() => boolean} isFile\n * @property {() => boolean} isDirectory\n * @property {() => boolean} isBlockDevice\n * @property {() => boolean} isCharacterDevice\n * @property {() => boolean} isSymbolicLink\n * @property {() => boolean} isFIFO\n * @property {() => boolean} isSocket\n * @property {string | Buffer} name\n */\n\n/** @typedef {function((NodeJS.ErrnoException | null)=): void} Callback */\n/** @typedef {function((NodeJS.ErrnoException | null)=, Buffer=): void} BufferCallback */\n/** @typedef {function((NodeJS.ErrnoException | null)=, Buffer|string=): void} BufferOrStringCallback */\n/** @typedef {function((NodeJS.ErrnoException | null)=, (string | Buffer)[] | IDirent[]=): void} DirentArrayCallback */\n/** @typedef {function((NodeJS.ErrnoException | null)=, string=): void} StringCallback */\n/** @typedef {function((NodeJS.ErrnoException | null)=, number=): void} NumberCallback */\n/** @typedef {function((NodeJS.ErrnoException | null)=, IStats=): void} StatsCallback */\n/** @typedef {function((NodeJS.ErrnoException | Error | null)=, any=): void} ReadJsonCallback */\n/** @typedef {function((NodeJS.ErrnoException | Error | null)=, IStats|string=): void} LstatReadlinkAbsoluteCallback */\n\n/**\n * @typedef {Object} WatcherInfo\n * @property {Set<string>} changes get current aggregated changes that have not yet send to callback\n * @property {Set<string>} removals get current aggregated removals that have not yet send to callback\n * @property {Map<string, FileSystemInfoEntry | \"ignore\">} fileTimeInfoEntries get info about files\n * @property {Map<string, FileSystemInfoEntry | \"ignore\">} contextTimeInfoEntries get info about directories\n */\n\n// TODO webpack 6 deprecate missing getInfo\n/**\n * @typedef {Object} Watcher\n * @property {function(): void} close closes the watcher and all underlying file watchers\n * @property {function(): void} pause closes the watcher, but keeps underlying file watchers alive until the next watch call\n * @property {function(): Set<string>=} getAggregatedChanges get current aggregated changes that have not yet send to callback\n * @property {function(): Set<string>=} getAggregatedRemovals get current aggregated removals that have not yet send to callback\n * @property {function(): Map<string, FileSystemInfoEntry | \"ignore\">} getFileTimeInfoEntries get info about files\n * @property {function(): Map<string, FileSystemInfoEntry | \"ignore\">} getContextTimeInfoEntries get info about directories\n * @property {function(): WatcherInfo=} getInfo get info about timestamps and changes\n */\n\n/**\n * @callback WatchMethod\n * @param {Iterable<string>} files watched files\n * @param {Iterable<string>} directories watched directories\n * @param {Iterable<string>} missing watched exitance entries\n * @param {number} startTime timestamp of start time\n * @param {WatchOptions} options options object\n * @param {function(Error=, Map<string, FileSystemInfoEntry | \"ignore\">, Map<string, FileSystemInfoEntry | \"ignore\">, Set<string>, Set<string>): void} callback aggregated callback\n * @param {function(string, number): void} callbackUndelayed callback when the first change was detected\n * @returns {Watcher} a watcher\n */\n\n// TODO webpack 6 make optional methods required\n\n/**\n * @typedef {Object} OutputFileSystem\n * @property {function(string, Buffer|string, Callback): void} writeFile\n * @property {function(string, Callback): void} mkdir\n * @property {function(string, DirentArrayCallback): void=} readdir\n * @property {function(string, Callback): void=} rmdir\n * @property {function(string, Callback): void=} unlink\n * @property {function(string, StatsCallback): void} stat\n * @property {function(string, StatsCallback): void=} lstat\n * @property {function(string, BufferOrStringCallback): void} readFile\n * @property {(function(string, string): string)=} join\n * @property {(function(string, string): string)=} relative\n * @property {(function(string): string)=} dirname\n */\n\n/**\n * @typedef {Object} InputFileSystem\n * @property {function(string, BufferOrStringCallback): void} readFile\n * @property {(function(string, ReadJsonCallback): void)=} readJson\n * @property {function(string, BufferOrStringCallback): void} readlink\n * @property {function(string, DirentArrayCallback): void} readdir\n * @property {function(string, StatsCallback): void} stat\n * @property {function(string, StatsCallback): void=} lstat\n * @property {(function(string, BufferOrStringCallback): void)=} realpath\n * @property {(function(string=): void)=} purge\n * @property {(function(string, string): string)=} join\n * @property {(function(string, string): string)=} relative\n * @property {(function(string): string)=} dirname\n */\n\n/**\n * @typedef {Object} WatchFileSystem\n * @property {WatchMethod} watch\n */\n\n/**\n * @typedef {Object} IntermediateFileSystemExtras\n * @property {function(string): void} mkdirSync\n * @property {function(string): NodeJS.WritableStream} createWriteStream\n * @property {function(string, string, NumberCallback): void} open\n * @property {function(number, Buffer, number, number, number, NumberCallback): void} read\n * @property {function(number, Callback): void} close\n * @property {function(string, string, Callback): void} rename\n */\n\n/** @typedef {InputFileSystem & OutputFileSystem & IntermediateFileSystemExtras} IntermediateFileSystem */\n\n/**\n *\n * @param {InputFileSystem|OutputFileSystem|undefined} fs a file system\n * @param {string} rootPath the root path\n * @param {string} targetPath the target path\n * @returns {string} location of targetPath relative to rootPath\n */\nconst relative = (fs, rootPath, targetPath) => {\n\tif (fs && fs.relative) {\n\t\treturn fs.relative(rootPath, targetPath);\n\t} else if (path.posix.isAbsolute(rootPath)) {\n\t\treturn path.posix.relative(rootPath, targetPath);\n\t} else if (path.win32.isAbsolute(rootPath)) {\n\t\treturn path.win32.relative(rootPath, targetPath);\n\t} else {\n\t\tthrow new Error(\n\t\t\t`${rootPath} is neither a posix nor a windows path, and there is no 'relative' method defined in the file system`\n\t\t);\n\t}\n};\nexports.relative = relative;\n\n/**\n * @param {InputFileSystem|OutputFileSystem|undefined} fs a file system\n * @param {string} rootPath a path\n * @param {string} filename a filename\n * @returns {string} the joined path\n */\nconst join = (fs, rootPath, filename) => {\n\tif (fs && fs.join) {\n\t\treturn fs.join(rootPath, filename);\n\t} else if (path.posix.isAbsolute(rootPath)) {\n\t\treturn path.posix.join(rootPath, filename);\n\t} else if (path.win32.isAbsolute(rootPath)) {\n\t\treturn path.win32.join(rootPath, filename);\n\t} else {\n\t\tthrow new Error(\n\t\t\t`${rootPath} is neither a posix nor a windows path, and there is no 'join' method defined in the file system`\n\t\t);\n\t}\n};\nexports.join = join;\n\n/**\n * @param {InputFileSystem|OutputFileSystem|undefined} fs a file system\n * @param {string} absPath an absolute path\n * @returns {string} the parent directory of the absolute path\n */\nconst dirname = (fs, absPath) => {\n\tif (fs && fs.dirname) {\n\t\treturn fs.dirname(absPath);\n\t} else if (path.posix.isAbsolute(absPath)) {\n\t\treturn path.posix.dirname(absPath);\n\t} else if (path.win32.isAbsolute(absPath)) {\n\t\treturn path.win32.dirname(absPath);\n\t} else {\n\t\tthrow new Error(\n\t\t\t`${absPath} is neither a posix nor a windows path, and there is no 'dirname' method defined in the file system`\n\t\t);\n\t}\n};\nexports.dirname = dirname;\n\n/**\n * @param {OutputFileSystem} fs a file system\n * @param {string} p an absolute path\n * @param {function(Error=): void} callback callback function for the error\n * @returns {void}\n */\nconst mkdirp = (fs, p, callback) => {\n\tfs.mkdir(p, err => {\n\t\tif (err) {\n\t\t\tif (err.code === \"ENOENT\") {\n\t\t\t\tconst dir = dirname(fs, p);\n\t\t\t\tif (dir === p) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmkdirp(fs, dir, err => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tfs.mkdir(p, err => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tif (err.code === \"EEXIST\") {\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t} else if (err.code === \"EEXIST\") {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcallback(err);\n\t\t\treturn;\n\t\t}\n\t\tcallback();\n\t});\n};\nexports.mkdirp = mkdirp;\n\n/**\n * @param {IntermediateFileSystem} fs a file system\n * @param {string} p an absolute path\n * @returns {void}\n */\nconst mkdirpSync = (fs, p) => {\n\ttry {\n\t\tfs.mkdirSync(p);\n\t} catch (err) {\n\t\tif (err) {\n\t\t\tif (err.code === \"ENOENT\") {\n\t\t\t\tconst dir = dirname(fs, p);\n\t\t\t\tif (dir === p) {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t\tmkdirpSync(fs, dir);\n\t\t\t\tfs.mkdirSync(p);\n\t\t\t\treturn;\n\t\t\t} else if (err.code === \"EEXIST\") {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthrow err;\n\t\t}\n\t}\n};\nexports.mkdirpSync = mkdirpSync;\n\n/**\n * @param {InputFileSystem} fs a file system\n * @param {string} p an absolute path\n * @param {ReadJsonCallback} callback callback\n * @returns {void}\n */\nconst readJson = (fs, p, callback) => {\n\tif (\"readJson\" in fs) return fs.readJson(p, callback);\n\tfs.readFile(p, (err, buf) => {\n\t\tif (err) return callback(err);\n\t\tlet data;\n\t\ttry {\n\t\t\tdata = JSON.parse(buf.toString(\"utf-8\"));\n\t\t} catch (e) {\n\t\t\treturn callback(e);\n\t\t}\n\t\treturn callback(null, data);\n\t});\n};\nexports.readJson = readJson;\n\n/**\n * @param {InputFileSystem} fs a file system\n * @param {string} p an absolute path\n * @param {ReadJsonCallback} callback callback\n * @returns {void}\n */\nconst lstatReadlinkAbsolute = (fs, p, callback) => {\n\tlet i = 3;\n\tconst doReadLink = () => {\n\t\tfs.readlink(p, (err, target) => {\n\t\t\tif (err && --i > 0) {\n\t\t\t\t// It might was just changed from symlink to file\n\t\t\t\t// we retry 2 times to catch this case before throwing the error\n\t\t\t\treturn doStat();\n\t\t\t}\n\t\t\tif (err || !target) return doStat();\n\t\t\tconst value = target.toString();\n\t\t\tcallback(null, join(fs, dirname(fs, p), value));\n\t\t});\n\t};\n\tconst doStat = () => {\n\t\tif (\"lstat\" in fs) {\n\t\t\treturn fs.lstat(p, (err, stats) => {\n\t\t\t\tif (err) return callback(err);\n\t\t\t\tif (stats.isSymbolicLink()) {\n\t\t\t\t\treturn doReadLink();\n\t\t\t\t}\n\t\t\t\tcallback(null, stats);\n\t\t\t});\n\t\t} else {\n\t\t\treturn fs.stat(p, callback);\n\t\t}\n\t};\n\tif (\"lstat\" in fs) return doStat();\n\tdoReadLink();\n};\nexports.lstatReadlinkAbsolute = lstatReadlinkAbsolute;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApeC,UAAf,KAA8B;EAC9C,IAAIF,EAAE,IAAIA,EAAE,CAACD,QAAb,EAAuB;IACtB,OAAOC,EAAE,CAACD,QAAH,CAAYE,QAAZ,EAAsBC,UAAtB,CAAP;EACA,CAFD,MAEO,IAAIL,IAAI,CAACM,KAAL,CAAWC,UAAX,CAAsBH,QAAtB,CAAJ,EAAqC;IAC3C,OAAOJ,IAAI,CAACM,KAAL,CAAWJ,QAAX,CAAoBE,QAApB,EAA8BC,UAA9B,CAAP;EACA,CAFM,MAEA,IAAIL,IAAI,CAACQ,KAAL,CAAWD,UAAX,CAAsBH,QAAtB,CAAJ,EAAqC;IAC3C,OAAOJ,IAAI,CAACQ,KAAL,CAAWN,QAAX,CAAoBE,QAApB,EAA8BC,UAA9B,CAAP;EACA,CAFM,MAEA;IACN,MAAM,IAAII,KAAJ,CACJ,GAAEL,QAAS,sGADP,CAAN;EAGA;AACD,CAZD;;AAaAM,OAAO,CAACR,QAAR,GAAmBA,QAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMS,IAAI,GAAG,CAACR,EAAD,EAAKC,QAAL,EAAeQ,QAAf,KAA4B;EACxC,IAAIT,EAAE,IAAIA,EAAE,CAACQ,IAAb,EAAmB;IAClB,OAAOR,EAAE,CAACQ,IAAH,CAAQP,QAAR,EAAkBQ,QAAlB,CAAP;EACA,CAFD,MAEO,IAAIZ,IAAI,CAACM,KAAL,CAAWC,UAAX,CAAsBH,QAAtB,CAAJ,EAAqC;IAC3C,OAAOJ,IAAI,CAACM,KAAL,CAAWK,IAAX,CAAgBP,QAAhB,EAA0BQ,QAA1B,CAAP;EACA,CAFM,MAEA,IAAIZ,IAAI,CAACQ,KAAL,CAAWD,UAAX,CAAsBH,QAAtB,CAAJ,EAAqC;IAC3C,OAAOJ,IAAI,CAACQ,KAAL,CAAWG,IAAX,CAAgBP,QAAhB,EAA0BQ,QAA1B,CAAP;EACA,CAFM,MAEA;IACN,MAAM,IAAIH,KAAJ,CACJ,GAAEL,QAAS,kGADP,CAAN;EAGA;AACD,CAZD;;AAaAM,OAAO,CAACC,IAAR,GAAeA,IAAf;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAME,OAAO,GAAG,CAACV,EAAD,EAAKW,OAAL,KAAiB;EAChC,IAAIX,EAAE,IAAIA,EAAE,CAACU,OAAb,EAAsB;IACrB,OAAOV,EAAE,CAACU,OAAH,CAAWC,OAAX,CAAP;EACA,CAFD,MAEO,IAAId,IAAI,CAACM,KAAL,CAAWC,UAAX,CAAsBO,OAAtB,CAAJ,EAAoC;IAC1C,OAAOd,IAAI,CAACM,KAAL,CAAWO,OAAX,CAAmBC,OAAnB,CAAP;EACA,CAFM,MAEA,IAAId,IAAI,CAACQ,KAAL,CAAWD,UAAX,CAAsBO,OAAtB,CAAJ,EAAoC;IAC1C,OAAOd,IAAI,CAACQ,KAAL,CAAWK,OAAX,CAAmBC,OAAnB,CAAP;EACA,CAFM,MAEA;IACN,MAAM,IAAIL,KAAJ,CACJ,GAAEK,OAAQ,qGADN,CAAN;EAGA;AACD,CAZD;;AAaAJ,OAAO,CAACG,OAAR,GAAkBA,OAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAME,MAAM,GAAG,CAACZ,EAAD,EAAKa,CAAL,EAAQC,QAAR,KAAqB;EACnCd,EAAE,CAACe,KAAH,CAASF,CAAT,EAAYG,GAAG,IAAI;IAClB,IAAIA,GAAJ,EAAS;MACR,IAAIA,GAAG,CAACC,IAAJ,KAAa,QAAjB,EAA2B;QAC1B,MAAMC,GAAG,GAAGR,OAAO,CAACV,EAAD,EAAKa,CAAL,CAAnB;;QACA,IAAIK,GAAG,KAAKL,CAAZ,EAAe;UACdC,QAAQ,CAACE,GAAD,CAAR;UACA;QACA;;QACDJ,MAAM,CAACZ,EAAD,EAAKkB,GAAL,EAAUF,GAAG,IAAI;UACtB,IAAIA,GAAJ,EAAS;YACRF,QAAQ,CAACE,GAAD,CAAR;YACA;UACA;;UACDhB,EAAE,CAACe,KAAH,CAASF,CAAT,EAAYG,GAAG,IAAI;YAClB,IAAIA,GAAJ,EAAS;cACR,IAAIA,GAAG,CAACC,IAAJ,KAAa,QAAjB,EAA2B;gBAC1BH,QAAQ;gBACR;cACA;;cACDA,QAAQ,CAACE,GAAD,CAAR;cACA;YACA;;YACDF,QAAQ;UACR,CAVD;QAWA,CAhBK,CAAN;QAiBA;MACA,CAxBD,MAwBO,IAAIE,GAAG,CAACC,IAAJ,KAAa,QAAjB,EAA2B;QACjCH,QAAQ;QACR;MACA;;MACDA,QAAQ,CAACE,GAAD,CAAR;MACA;IACA;;IACDF,QAAQ;EACR,CAlCD;AAmCA,CApCD;;AAqCAP,OAAO,CAACK,MAAR,GAAiBA,MAAjB;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMO,UAAU,GAAG,CAACnB,EAAD,EAAKa,CAAL,KAAW;EAC7B,IAAI;IACHb,EAAE,CAACoB,SAAH,CAAaP,CAAb;EACA,CAFD,CAEE,OAAOG,GAAP,EAAY;IACb,IAAIA,GAAJ,EAAS;MACR,IAAIA,GAAG,CAACC,IAAJ,KAAa,QAAjB,EAA2B;QAC1B,MAAMC,GAAG,GAAGR,OAAO,CAACV,EAAD,EAAKa,CAAL,CAAnB;;QACA,IAAIK,GAAG,KAAKL,CAAZ,EAAe;UACd,MAAMG,GAAN;QACA;;QACDG,UAAU,CAACnB,EAAD,EAAKkB,GAAL,CAAV;QACAlB,EAAE,CAACoB,SAAH,CAAaP,CAAb;QACA;MACA,CARD,MAQO,IAAIG,GAAG,CAACC,IAAJ,KAAa,QAAjB,EAA2B;QACjC;MACA;;MACD,MAAMD,GAAN;IACA;EACD;AACD,CAnBD;;AAoBAT,OAAO,CAACY,UAAR,GAAqBA,UAArB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAME,QAAQ,GAAG,CAACrB,EAAD,EAAKa,CAAL,EAAQC,QAAR,KAAqB;EACrC,IAAI,cAAcd,EAAlB,EAAsB,OAAOA,EAAE,CAACqB,QAAH,CAAYR,CAAZ,EAAeC,QAAf,CAAP;EACtBd,EAAE,CAACsB,QAAH,CAAYT,CAAZ,EAAe,CAACG,GAAD,EAAMO,GAAN,KAAc;IAC5B,IAAIP,GAAJ,EAAS,OAAOF,QAAQ,CAACE,GAAD,CAAf;IACT,IAAIQ,IAAJ;;IACA,IAAI;MACHA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACI,QAAJ,CAAa,OAAb,CAAX,CAAP;IACA,CAFD,CAEE,OAAOC,CAAP,EAAU;MACX,OAAOd,QAAQ,CAACc,CAAD,CAAf;IACA;;IACD,OAAOd,QAAQ,CAAC,IAAD,EAAOU,IAAP,CAAf;EACA,CATD;AAUA,CAZD;;AAaAjB,OAAO,CAACc,QAAR,GAAmBA,QAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMQ,qBAAqB,GAAG,CAAC7B,EAAD,EAAKa,CAAL,EAAQC,QAAR,KAAqB;EAClD,IAAIgB,CAAC,GAAG,CAAR;;EACA,MAAMC,UAAU,GAAG,MAAM;IACxB/B,EAAE,CAACgC,QAAH,CAAYnB,CAAZ,EAAe,CAACG,GAAD,EAAMiB,MAAN,KAAiB;MAC/B,IAAIjB,GAAG,IAAI,EAAEc,CAAF,GAAM,CAAjB,EAAoB;QACnB;QACA;QACA,OAAOI,MAAM,EAAb;MACA;;MACD,IAAIlB,GAAG,IAAI,CAACiB,MAAZ,EAAoB,OAAOC,MAAM,EAAb;MACpB,MAAMC,KAAK,GAAGF,MAAM,CAACN,QAAP,EAAd;MACAb,QAAQ,CAAC,IAAD,EAAON,IAAI,CAACR,EAAD,EAAKU,OAAO,CAACV,EAAD,EAAKa,CAAL,CAAZ,EAAqBsB,KAArB,CAAX,CAAR;IACA,CATD;EAUA,CAXD;;EAYA,MAAMD,MAAM,GAAG,MAAM;IACpB,IAAI,WAAWlC,EAAf,EAAmB;MAClB,OAAOA,EAAE,CAACoC,KAAH,CAASvB,CAAT,EAAY,CAACG,GAAD,EAAMqB,KAAN,KAAgB;QAClC,IAAIrB,GAAJ,EAAS,OAAOF,QAAQ,CAACE,GAAD,CAAf;;QACT,IAAIqB,KAAK,CAACC,cAAN,EAAJ,EAA4B;UAC3B,OAAOP,UAAU,EAAjB;QACA;;QACDjB,QAAQ,CAAC,IAAD,EAAOuB,KAAP,CAAR;MACA,CANM,CAAP;IAOA,CARD,MAQO;MACN,OAAOrC,EAAE,CAACuC,IAAH,CAAQ1B,CAAR,EAAWC,QAAX,CAAP;IACA;EACD,CAZD;;EAaA,IAAI,WAAWd,EAAf,EAAmB,OAAOkC,MAAM,EAAb;EACnBH,UAAU;AACV,CA7BD;;AA8BAxB,OAAO,CAACsB,qBAAR,GAAgCA,qBAAhC"},"metadata":{},"sourceType":"script"}