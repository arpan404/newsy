{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"../declarations/WebpackOptions\").IgnoreWarningsNormalized} IgnoreWarningsNormalized */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass IgnoreWarningsPlugin {\n  /**\n   * @param {IgnoreWarningsNormalized} ignoreWarnings conditions to ignore warnings\n   */\n  constructor(ignoreWarnings) {\n    this._ignoreWarnings = ignoreWarnings;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"IgnoreWarningsPlugin\", compilation => {\n      compilation.hooks.processWarnings.tap(\"IgnoreWarningsPlugin\", warnings => {\n        return warnings.filter(warning => {\n          return !this._ignoreWarnings.some(ignore => ignore(warning, compilation));\n        });\n      });\n    });\n  }\n\n}\n\nmodule.exports = IgnoreWarningsPlugin;","map":{"version":3,"names":["IgnoreWarningsPlugin","constructor","ignoreWarnings","_ignoreWarnings","apply","compiler","hooks","compilation","tap","processWarnings","warnings","filter","warning","some","ignore","module","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/IgnoreWarningsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../declarations/WebpackOptions\").IgnoreWarningsNormalized} IgnoreWarningsNormalized */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass IgnoreWarningsPlugin {\n\t/**\n\t * @param {IgnoreWarningsNormalized} ignoreWarnings conditions to ignore warnings\n\t */\n\tconstructor(ignoreWarnings) {\n\t\tthis._ignoreWarnings = ignoreWarnings;\n\t}\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"IgnoreWarningsPlugin\", compilation => {\n\t\t\tcompilation.hooks.processWarnings.tap(\n\t\t\t\t\"IgnoreWarningsPlugin\",\n\t\t\t\twarnings => {\n\t\t\t\t\treturn warnings.filter(warning => {\n\t\t\t\t\t\treturn !this._ignoreWarnings.some(ignore =>\n\t\t\t\t\t\t\tignore(warning, compilation)\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = IgnoreWarningsPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AACA;;AAEA,MAAMA,oBAAN,CAA2B;EAC1B;AACD;AACA;EACCC,WAAW,CAACC,cAAD,EAAiB;IAC3B,KAAKC,eAAL,GAAuBD,cAAvB;EACA;EACD;AACD;AACA;AACA;AACA;;;EACCE,KAAK,CAACC,QAAD,EAAW;IACfA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CAA+B,sBAA/B,EAAuDD,WAAW,IAAI;MACrEA,WAAW,CAACD,KAAZ,CAAkBG,eAAlB,CAAkCD,GAAlC,CACC,sBADD,EAECE,QAAQ,IAAI;QACX,OAAOA,QAAQ,CAACC,MAAT,CAAgBC,OAAO,IAAI;UACjC,OAAO,CAAC,KAAKT,eAAL,CAAqBU,IAArB,CAA0BC,MAAM,IACvCA,MAAM,CAACF,OAAD,EAAUL,WAAV,CADC,CAAR;QAGA,CAJM,CAAP;MAKA,CARF;IAUA,CAXD;EAYA;;AAzByB;;AA4B3BQ,MAAM,CAACC,OAAP,GAAiBhB,oBAAjB"},"metadata":{},"sourceType":"script"}