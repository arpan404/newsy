{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst StartupChunkDependenciesPlugin = require(\"../runtime/StartupChunkDependenciesPlugin\");\n\nconst ImportScriptsChunkLoadingRuntimeModule = require(\"./ImportScriptsChunkLoadingRuntimeModule\");\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n\nclass ImportScriptsChunkLoadingPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    new StartupChunkDependenciesPlugin({\n      chunkLoading: \"import-scripts\",\n      asyncChunkLoading: true\n    }).apply(compiler);\n    compiler.hooks.thisCompilation.tap(\"ImportScriptsChunkLoadingPlugin\", compilation => {\n      const globalChunkLoading = compilation.outputOptions.chunkLoading;\n\n      const isEnabledForChunk = chunk => {\n        const options = chunk.getEntryOptions();\n        const chunkLoading = options && options.chunkLoading !== undefined ? options.chunkLoading : globalChunkLoading;\n        return chunkLoading === \"import-scripts\";\n      };\n\n      const onceForChunkSet = new WeakSet();\n\n      const handler = (chunk, set) => {\n        if (onceForChunkSet.has(chunk)) return;\n        onceForChunkSet.add(chunk);\n        if (!isEnabledForChunk(chunk)) return;\n        const withCreateScriptUrl = !!compilation.outputOptions.trustedTypes;\n        set.add(RuntimeGlobals.moduleFactoriesAddOnly);\n        set.add(RuntimeGlobals.hasOwnProperty);\n\n        if (withCreateScriptUrl) {\n          set.add(RuntimeGlobals.createScriptUrl);\n        }\n\n        compilation.addRuntimeModule(chunk, new ImportScriptsChunkLoadingRuntimeModule(set, withCreateScriptUrl));\n      };\n\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.ensureChunkHandlers).tap(\"ImportScriptsChunkLoadingPlugin\", handler);\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.hmrDownloadUpdateHandlers).tap(\"ImportScriptsChunkLoadingPlugin\", handler);\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.hmrDownloadManifest).tap(\"ImportScriptsChunkLoadingPlugin\", handler);\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.baseURI).tap(\"ImportScriptsChunkLoadingPlugin\", handler);\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.ensureChunkHandlers).tap(\"ImportScriptsChunkLoadingPlugin\", (chunk, set) => {\n        if (!isEnabledForChunk(chunk)) return;\n        set.add(RuntimeGlobals.publicPath);\n        set.add(RuntimeGlobals.getChunkScriptFilename);\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.hmrDownloadUpdateHandlers).tap(\"ImportScriptsChunkLoadingPlugin\", (chunk, set) => {\n        if (!isEnabledForChunk(chunk)) return;\n        set.add(RuntimeGlobals.publicPath);\n        set.add(RuntimeGlobals.getChunkUpdateScriptFilename);\n        set.add(RuntimeGlobals.moduleCache);\n        set.add(RuntimeGlobals.hmrModuleData);\n        set.add(RuntimeGlobals.moduleFactoriesAddOnly);\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.hmrDownloadManifest).tap(\"ImportScriptsChunkLoadingPlugin\", (chunk, set) => {\n        if (!isEnabledForChunk(chunk)) return;\n        set.add(RuntimeGlobals.publicPath);\n        set.add(RuntimeGlobals.getUpdateManifestFilename);\n      });\n    });\n  }\n\n}\n\nmodule.exports = ImportScriptsChunkLoadingPlugin;","map":{"version":3,"names":["RuntimeGlobals","require","StartupChunkDependenciesPlugin","ImportScriptsChunkLoadingRuntimeModule","ImportScriptsChunkLoadingPlugin","apply","compiler","chunkLoading","asyncChunkLoading","hooks","thisCompilation","tap","compilation","globalChunkLoading","outputOptions","isEnabledForChunk","chunk","options","getEntryOptions","undefined","onceForChunkSet","WeakSet","handler","set","has","add","withCreateScriptUrl","trustedTypes","moduleFactoriesAddOnly","hasOwnProperty","createScriptUrl","addRuntimeModule","runtimeRequirementInTree","for","ensureChunkHandlers","hmrDownloadUpdateHandlers","hmrDownloadManifest","baseURI","publicPath","getChunkScriptFilename","getChunkUpdateScriptFilename","moduleCache","hmrModuleData","getUpdateManifestFilename","module","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/webworker/ImportScriptsChunkLoadingPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst StartupChunkDependenciesPlugin = require(\"../runtime/StartupChunkDependenciesPlugin\");\nconst ImportScriptsChunkLoadingRuntimeModule = require(\"./ImportScriptsChunkLoadingRuntimeModule\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass ImportScriptsChunkLoadingPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tnew StartupChunkDependenciesPlugin({\n\t\t\tchunkLoading: \"import-scripts\",\n\t\t\tasyncChunkLoading: true\n\t\t}).apply(compiler);\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"ImportScriptsChunkLoadingPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tconst globalChunkLoading = compilation.outputOptions.chunkLoading;\n\t\t\t\tconst isEnabledForChunk = chunk => {\n\t\t\t\t\tconst options = chunk.getEntryOptions();\n\t\t\t\t\tconst chunkLoading =\n\t\t\t\t\t\toptions && options.chunkLoading !== undefined\n\t\t\t\t\t\t\t? options.chunkLoading\n\t\t\t\t\t\t\t: globalChunkLoading;\n\t\t\t\t\treturn chunkLoading === \"import-scripts\";\n\t\t\t\t};\n\t\t\t\tconst onceForChunkSet = new WeakSet();\n\t\t\t\tconst handler = (chunk, set) => {\n\t\t\t\t\tif (onceForChunkSet.has(chunk)) return;\n\t\t\t\t\tonceForChunkSet.add(chunk);\n\t\t\t\t\tif (!isEnabledForChunk(chunk)) return;\n\t\t\t\t\tconst withCreateScriptUrl = !!compilation.outputOptions.trustedTypes;\n\t\t\t\t\tset.add(RuntimeGlobals.moduleFactoriesAddOnly);\n\t\t\t\t\tset.add(RuntimeGlobals.hasOwnProperty);\n\t\t\t\t\tif (withCreateScriptUrl) {\n\t\t\t\t\t\tset.add(RuntimeGlobals.createScriptUrl);\n\t\t\t\t\t}\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew ImportScriptsChunkLoadingRuntimeModule(set, withCreateScriptUrl)\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.ensureChunkHandlers)\n\t\t\t\t\t.tap(\"ImportScriptsChunkLoadingPlugin\", handler);\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.hmrDownloadUpdateHandlers)\n\t\t\t\t\t.tap(\"ImportScriptsChunkLoadingPlugin\", handler);\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.hmrDownloadManifest)\n\t\t\t\t\t.tap(\"ImportScriptsChunkLoadingPlugin\", handler);\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.baseURI)\n\t\t\t\t\t.tap(\"ImportScriptsChunkLoadingPlugin\", handler);\n\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.ensureChunkHandlers)\n\t\t\t\t\t.tap(\"ImportScriptsChunkLoadingPlugin\", (chunk, set) => {\n\t\t\t\t\t\tif (!isEnabledForChunk(chunk)) return;\n\t\t\t\t\t\tset.add(RuntimeGlobals.publicPath);\n\t\t\t\t\t\tset.add(RuntimeGlobals.getChunkScriptFilename);\n\t\t\t\t\t});\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.hmrDownloadUpdateHandlers)\n\t\t\t\t\t.tap(\"ImportScriptsChunkLoadingPlugin\", (chunk, set) => {\n\t\t\t\t\t\tif (!isEnabledForChunk(chunk)) return;\n\t\t\t\t\t\tset.add(RuntimeGlobals.publicPath);\n\t\t\t\t\t\tset.add(RuntimeGlobals.getChunkUpdateScriptFilename);\n\t\t\t\t\t\tset.add(RuntimeGlobals.moduleCache);\n\t\t\t\t\t\tset.add(RuntimeGlobals.hmrModuleData);\n\t\t\t\t\t\tset.add(RuntimeGlobals.moduleFactoriesAddOnly);\n\t\t\t\t\t});\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.hmrDownloadManifest)\n\t\t\t\t\t.tap(\"ImportScriptsChunkLoadingPlugin\", (chunk, set) => {\n\t\t\t\t\t\tif (!isEnabledForChunk(chunk)) return;\n\t\t\t\t\t\tset.add(RuntimeGlobals.publicPath);\n\t\t\t\t\t\tset.add(RuntimeGlobals.getUpdateManifestFilename);\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = ImportScriptsChunkLoadingPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}