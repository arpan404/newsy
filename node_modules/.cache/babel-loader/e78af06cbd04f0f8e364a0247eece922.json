{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\n\nconst {\n  PathType,\n  getType\n} = require(\"./util/path\");\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\n/** @typedef {{alias: string|Array<string>|false, name: string, onlyModule?: boolean}} AliasOption */\n\n\nmodule.exports = class AliasPlugin {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {AliasOption | Array<AliasOption>} options options\n   * @param {string | ResolveStepHook} target target\n   */\n  constructor(source, options, target) {\n    this.source = source;\n    this.options = Array.isArray(options) ? options : [options];\n    this.target = target;\n  }\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n\n\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n\n    const getAbsolutePathWithSlashEnding = maybeAbsolutePath => {\n      const type = getType(maybeAbsolutePath);\n\n      if (type === PathType.AbsolutePosix || type === PathType.AbsoluteWin) {\n        return resolver.join(maybeAbsolutePath, \"_\").slice(0, -1);\n      }\n\n      return null;\n    };\n\n    const isSubPath = (path, maybeSubPath) => {\n      const absolutePath = getAbsolutePathWithSlashEnding(maybeSubPath);\n      if (!absolutePath) return false;\n      return path.startsWith(absolutePath);\n    };\n\n    resolver.getHook(this.source).tapAsync(\"AliasPlugin\", (request, resolveContext, callback) => {\n      const innerRequest = request.request || request.path;\n      if (!innerRequest) return callback();\n      forEachBail(this.options, (item, callback) => {\n        let shouldStop = false;\n\n        if (innerRequest === item.name || !item.onlyModule && (request.request ? innerRequest.startsWith(`${item.name}/`) : isSubPath(innerRequest, item.name))) {\n          const remainingRequest = innerRequest.substr(item.name.length);\n\n          const resolveWithAlias = (alias, callback) => {\n            if (alias === false) {\n              /** @type {ResolveRequest} */\n              const ignoreObj = { ...request,\n                path: false\n              };\n\n              if (typeof resolveContext.yield === \"function\") {\n                resolveContext.yield(ignoreObj);\n                return callback(null, null);\n              }\n\n              return callback(null, ignoreObj);\n            }\n\n            if (innerRequest !== alias && !innerRequest.startsWith(alias + \"/\")) {\n              shouldStop = true;\n              const newRequestStr = alias + remainingRequest;\n              const obj = { ...request,\n                request: newRequestStr,\n                fullySpecified: false\n              };\n              return resolver.doResolve(target, obj, \"aliased with mapping '\" + item.name + \"': '\" + alias + \"' to '\" + newRequestStr + \"'\", resolveContext, (err, result) => {\n                if (err) return callback(err);\n                if (result) return callback(null, result);\n                return callback();\n              });\n            }\n\n            return callback();\n          };\n\n          const stoppingCallback = (err, result) => {\n            if (err) return callback(err);\n            if (result) return callback(null, result); // Don't allow other aliasing or raw request\n\n            if (shouldStop) return callback(null, null);\n            return callback();\n          };\n\n          if (Array.isArray(item.alias)) {\n            return forEachBail(item.alias, resolveWithAlias, stoppingCallback);\n          } else {\n            return resolveWithAlias(item.alias, stoppingCallback);\n          }\n        }\n\n        return callback();\n      }, callback);\n    });\n  }\n\n};","map":{"version":3,"names":["forEachBail","require","PathType","getType","module","exports","AliasPlugin","constructor","source","options","target","Array","isArray","apply","resolver","ensureHook","getAbsolutePathWithSlashEnding","maybeAbsolutePath","type","AbsolutePosix","AbsoluteWin","join","slice","isSubPath","path","maybeSubPath","absolutePath","startsWith","getHook","tapAsync","request","resolveContext","callback","innerRequest","item","shouldStop","name","onlyModule","remainingRequest","substr","length","resolveWithAlias","alias","ignoreObj","yield","newRequestStr","obj","fullySpecified","doResolve","err","result","stoppingCallback"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/enhanced-resolve/lib/AliasPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\nconst { PathType, getType } = require(\"./util/path\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {{alias: string|Array<string>|false, name: string, onlyModule?: boolean}} AliasOption */\n\nmodule.exports = class AliasPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {AliasOption | Array<AliasOption>} options options\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, options, target) {\n\t\tthis.source = source;\n\t\tthis.options = Array.isArray(options) ? options : [options];\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tconst getAbsolutePathWithSlashEnding = maybeAbsolutePath => {\n\t\t\tconst type = getType(maybeAbsolutePath);\n\t\t\tif (type === PathType.AbsolutePosix || type === PathType.AbsoluteWin) {\n\t\t\t\treturn resolver.join(maybeAbsolutePath, \"_\").slice(0, -1);\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\tconst isSubPath = (path, maybeSubPath) => {\n\t\t\tconst absolutePath = getAbsolutePathWithSlashEnding(maybeSubPath);\n\t\t\tif (!absolutePath) return false;\n\t\t\treturn path.startsWith(absolutePath);\n\t\t};\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"AliasPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst innerRequest = request.request || request.path;\n\t\t\t\tif (!innerRequest) return callback();\n\t\t\t\tforEachBail(\n\t\t\t\t\tthis.options,\n\t\t\t\t\t(item, callback) => {\n\t\t\t\t\t\tlet shouldStop = false;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tinnerRequest === item.name ||\n\t\t\t\t\t\t\t(!item.onlyModule &&\n\t\t\t\t\t\t\t\t(request.request\n\t\t\t\t\t\t\t\t\t? innerRequest.startsWith(`${item.name}/`)\n\t\t\t\t\t\t\t\t\t: isSubPath(innerRequest, item.name)))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst remainingRequest = innerRequest.substr(item.name.length);\n\t\t\t\t\t\t\tconst resolveWithAlias = (alias, callback) => {\n\t\t\t\t\t\t\t\tif (alias === false) {\n\t\t\t\t\t\t\t\t\t/** @type {ResolveRequest} */\n\t\t\t\t\t\t\t\t\tconst ignoreObj = {\n\t\t\t\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\t\t\t\tpath: false\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tif (typeof resolveContext.yield === \"function\") {\n\t\t\t\t\t\t\t\t\t\tresolveContext.yield(ignoreObj);\n\t\t\t\t\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn callback(null, ignoreObj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tinnerRequest !== alias &&\n\t\t\t\t\t\t\t\t\t!innerRequest.startsWith(alias + \"/\")\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tshouldStop = true;\n\t\t\t\t\t\t\t\t\tconst newRequestStr = alias + remainingRequest;\n\t\t\t\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\t\t\t\trequest: newRequestStr,\n\t\t\t\t\t\t\t\t\t\tfullySpecified: false\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\treturn resolver.doResolve(\n\t\t\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\t\t\t\"aliased with mapping '\" +\n\t\t\t\t\t\t\t\t\t\t\titem.name +\n\t\t\t\t\t\t\t\t\t\t\t\"': '\" +\n\t\t\t\t\t\t\t\t\t\t\talias +\n\t\t\t\t\t\t\t\t\t\t\t\"' to '\" +\n\t\t\t\t\t\t\t\t\t\t\tnewRequestStr +\n\t\t\t\t\t\t\t\t\t\t\t\"'\",\n\t\t\t\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\t\t\t\tif (result) return callback(null, result);\n\t\t\t\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tconst stoppingCallback = (err, result) => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t\tif (result) return callback(null, result);\n\t\t\t\t\t\t\t\t// Don't allow other aliasing or raw request\n\t\t\t\t\t\t\t\tif (shouldStop) return callback(null, null);\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif (Array.isArray(item.alias)) {\n\t\t\t\t\t\t\t\treturn forEachBail(\n\t\t\t\t\t\t\t\t\titem.alias,\n\t\t\t\t\t\t\t\t\tresolveWithAlias,\n\t\t\t\t\t\t\t\t\tstoppingCallback\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn resolveWithAlias(item.alias, stoppingCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t},\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}