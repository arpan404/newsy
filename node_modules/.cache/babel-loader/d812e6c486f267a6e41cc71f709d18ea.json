{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  join,\n  dirname,\n  readJson\n} = require(\"../util/fs\");\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\n\n/**\n * @param {string} str maybe required version\n * @returns {boolean} true, if it looks like a version\n */\n\n\nexports.isRequiredVersion = str => {\n  return /^([\\d^=v<>~]|[*xX]$)/.test(str);\n};\n/**\n *\n * @param {InputFileSystem} fs file system\n * @param {string} directory directory to start looking into\n * @param {string[]} descriptionFiles possible description filenames\n * @param {function((Error | null)=, {data: object, path: string}=): void} callback callback\n */\n\n\nconst getDescriptionFile = (fs, directory, descriptionFiles, callback) => {\n  let i = 0;\n\n  const tryLoadCurrent = () => {\n    if (i >= descriptionFiles.length) {\n      const parentDirectory = dirname(fs, directory);\n      if (!parentDirectory || parentDirectory === directory) return callback();\n      return getDescriptionFile(fs, parentDirectory, descriptionFiles, callback);\n    }\n\n    const filePath = join(fs, directory, descriptionFiles[i]);\n    readJson(fs, filePath, (err, data) => {\n      if (err) {\n        if (\"code\" in err && err.code === \"ENOENT\") {\n          i++;\n          return tryLoadCurrent();\n        }\n\n        return callback(err);\n      }\n\n      if (!data || typeof data !== \"object\" || Array.isArray(data)) {\n        return callback(new Error(`Description file ${filePath} is not an object`));\n      }\n\n      callback(null, {\n        data,\n        path: filePath\n      });\n    });\n  };\n\n  tryLoadCurrent();\n};\n\nexports.getDescriptionFile = getDescriptionFile;\n\nexports.getRequiredVersionFromDescriptionFile = (data, packageName) => {\n  if (data.optionalDependencies && typeof data.optionalDependencies === \"object\" && packageName in data.optionalDependencies) {\n    return data.optionalDependencies[packageName];\n  }\n\n  if (data.dependencies && typeof data.dependencies === \"object\" && packageName in data.dependencies) {\n    return data.dependencies[packageName];\n  }\n\n  if (data.peerDependencies && typeof data.peerDependencies === \"object\" && packageName in data.peerDependencies) {\n    return data.peerDependencies[packageName];\n  }\n\n  if (data.devDependencies && typeof data.devDependencies === \"object\" && packageName in data.devDependencies) {\n    return data.devDependencies[packageName];\n  }\n};","map":{"version":3,"names":["join","dirname","readJson","require","exports","isRequiredVersion","str","test","getDescriptionFile","fs","directory","descriptionFiles","callback","i","tryLoadCurrent","length","parentDirectory","filePath","err","data","code","Array","isArray","Error","path","getRequiredVersionFromDescriptionFile","packageName","optionalDependencies","dependencies","peerDependencies","devDependencies"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/sharing/utils.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { join, dirname, readJson } = require(\"../util/fs\");\n\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\n\n/**\n * @param {string} str maybe required version\n * @returns {boolean} true, if it looks like a version\n */\nexports.isRequiredVersion = str => {\n\treturn /^([\\d^=v<>~]|[*xX]$)/.test(str);\n};\n\n/**\n *\n * @param {InputFileSystem} fs file system\n * @param {string} directory directory to start looking into\n * @param {string[]} descriptionFiles possible description filenames\n * @param {function((Error | null)=, {data: object, path: string}=): void} callback callback\n */\nconst getDescriptionFile = (fs, directory, descriptionFiles, callback) => {\n\tlet i = 0;\n\tconst tryLoadCurrent = () => {\n\t\tif (i >= descriptionFiles.length) {\n\t\t\tconst parentDirectory = dirname(fs, directory);\n\t\t\tif (!parentDirectory || parentDirectory === directory) return callback();\n\t\t\treturn getDescriptionFile(\n\t\t\t\tfs,\n\t\t\t\tparentDirectory,\n\t\t\t\tdescriptionFiles,\n\t\t\t\tcallback\n\t\t\t);\n\t\t}\n\t\tconst filePath = join(fs, directory, descriptionFiles[i]);\n\t\treadJson(fs, filePath, (err, data) => {\n\t\t\tif (err) {\n\t\t\t\tif (\"code\" in err && err.code === \"ENOENT\") {\n\t\t\t\t\ti++;\n\t\t\t\t\treturn tryLoadCurrent();\n\t\t\t\t}\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t\tif (!data || typeof data !== \"object\" || Array.isArray(data)) {\n\t\t\t\treturn callback(\n\t\t\t\t\tnew Error(`Description file ${filePath} is not an object`)\n\t\t\t\t);\n\t\t\t}\n\t\t\tcallback(null, { data, path: filePath });\n\t\t});\n\t};\n\ttryLoadCurrent();\n};\nexports.getDescriptionFile = getDescriptionFile;\n\nexports.getRequiredVersionFromDescriptionFile = (data, packageName) => {\n\tif (\n\t\tdata.optionalDependencies &&\n\t\ttypeof data.optionalDependencies === \"object\" &&\n\t\tpackageName in data.optionalDependencies\n\t) {\n\t\treturn data.optionalDependencies[packageName];\n\t}\n\tif (\n\t\tdata.dependencies &&\n\t\ttypeof data.dependencies === \"object\" &&\n\t\tpackageName in data.dependencies\n\t) {\n\t\treturn data.dependencies[packageName];\n\t}\n\tif (\n\t\tdata.peerDependencies &&\n\t\ttypeof data.peerDependencies === \"object\" &&\n\t\tpackageName in data.peerDependencies\n\t) {\n\t\treturn data.peerDependencies[packageName];\n\t}\n\tif (\n\t\tdata.devDependencies &&\n\t\ttypeof data.devDependencies === \"object\" &&\n\t\tpackageName in data.devDependencies\n\t) {\n\t\treturn data.devDependencies[packageName];\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAM;EAAEA,IAAF;EAAQC,OAAR;EAAiBC;AAAjB,IAA8BC,OAAO,CAAC,YAAD,CAA3C;AAEA;;AAEA;AACA;AACA;AACA;;;AACAC,OAAO,CAACC,iBAAR,GAA4BC,GAAG,IAAI;EAClC,OAAO,uBAAuBC,IAAvB,CAA4BD,GAA5B,CAAP;AACA,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,kBAAkB,GAAG,CAACC,EAAD,EAAKC,SAAL,EAAgBC,gBAAhB,EAAkCC,QAAlC,KAA+C;EACzE,IAAIC,CAAC,GAAG,CAAR;;EACA,MAAMC,cAAc,GAAG,MAAM;IAC5B,IAAID,CAAC,IAAIF,gBAAgB,CAACI,MAA1B,EAAkC;MACjC,MAAMC,eAAe,GAAGf,OAAO,CAACQ,EAAD,EAAKC,SAAL,CAA/B;MACA,IAAI,CAACM,eAAD,IAAoBA,eAAe,KAAKN,SAA5C,EAAuD,OAAOE,QAAQ,EAAf;MACvD,OAAOJ,kBAAkB,CACxBC,EADwB,EAExBO,eAFwB,EAGxBL,gBAHwB,EAIxBC,QAJwB,CAAzB;IAMA;;IACD,MAAMK,QAAQ,GAAGjB,IAAI,CAACS,EAAD,EAAKC,SAAL,EAAgBC,gBAAgB,CAACE,CAAD,CAAhC,CAArB;IACAX,QAAQ,CAACO,EAAD,EAAKQ,QAAL,EAAe,CAACC,GAAD,EAAMC,IAAN,KAAe;MACrC,IAAID,GAAJ,EAAS;QACR,IAAI,UAAUA,GAAV,IAAiBA,GAAG,CAACE,IAAJ,KAAa,QAAlC,EAA4C;UAC3CP,CAAC;UACD,OAAOC,cAAc,EAArB;QACA;;QACD,OAAOF,QAAQ,CAACM,GAAD,CAAf;MACA;;MACD,IAAI,CAACC,IAAD,IAAS,OAAOA,IAAP,KAAgB,QAAzB,IAAqCE,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAzC,EAA8D;QAC7D,OAAOP,QAAQ,CACd,IAAIW,KAAJ,CAAW,oBAAmBN,QAAS,mBAAvC,CADc,CAAf;MAGA;;MACDL,QAAQ,CAAC,IAAD,EAAO;QAAEO,IAAF;QAAQK,IAAI,EAAEP;MAAd,CAAP,CAAR;IACA,CAdO,CAAR;EAeA,CA3BD;;EA4BAH,cAAc;AACd,CA/BD;;AAgCAV,OAAO,CAACI,kBAAR,GAA6BA,kBAA7B;;AAEAJ,OAAO,CAACqB,qCAAR,GAAgD,CAACN,IAAD,EAAOO,WAAP,KAAuB;EACtE,IACCP,IAAI,CAACQ,oBAAL,IACA,OAAOR,IAAI,CAACQ,oBAAZ,KAAqC,QADrC,IAEAD,WAAW,IAAIP,IAAI,CAACQ,oBAHrB,EAIE;IACD,OAAOR,IAAI,CAACQ,oBAAL,CAA0BD,WAA1B,CAAP;EACA;;EACD,IACCP,IAAI,CAACS,YAAL,IACA,OAAOT,IAAI,CAACS,YAAZ,KAA6B,QAD7B,IAEAF,WAAW,IAAIP,IAAI,CAACS,YAHrB,EAIE;IACD,OAAOT,IAAI,CAACS,YAAL,CAAkBF,WAAlB,CAAP;EACA;;EACD,IACCP,IAAI,CAACU,gBAAL,IACA,OAAOV,IAAI,CAACU,gBAAZ,KAAiC,QADjC,IAEAH,WAAW,IAAIP,IAAI,CAACU,gBAHrB,EAIE;IACD,OAAOV,IAAI,CAACU,gBAAL,CAAsBH,WAAtB,CAAP;EACA;;EACD,IACCP,IAAI,CAACW,eAAL,IACA,OAAOX,IAAI,CAACW,eAAZ,KAAgC,QADhC,IAEAJ,WAAW,IAAIP,IAAI,CAACW,eAHrB,EAIE;IACD,OAAOX,IAAI,CAACW,eAAL,CAAqBJ,WAArB,CAAP;EACA;AACD,CA7BD"},"metadata":{},"sourceType":"script"}