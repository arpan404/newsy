{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sergey Melyukov @smelukov\n*/\n\"use strict\";\n\nconst InnerGraph = require(\"./optimize/InnerGraph\");\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @typedef {import(\"./javascript/JavascriptParser\")} JavascriptParser */\n\n\nclass JavascriptMetaInfoPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"JavascriptMetaInfoPlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n\n      /**\n       * @param {JavascriptParser} parser the parser\n       * @returns {void}\n       */\n      const handler = parser => {\n        parser.hooks.call.for(\"eval\").tap(\"JavascriptMetaInfoPlugin\", () => {\n          parser.state.module.buildInfo.moduleConcatenationBailout = \"eval()\";\n          parser.state.module.buildInfo.usingEval = true;\n          const currentSymbol = InnerGraph.getTopLevelSymbol(parser.state);\n\n          if (currentSymbol) {\n            InnerGraph.addUsage(parser.state, null, currentSymbol);\n          } else {\n            InnerGraph.bailout(parser.state);\n          }\n        });\n        parser.hooks.finish.tap(\"JavascriptMetaInfoPlugin\", () => {\n          let topLevelDeclarations = parser.state.module.buildInfo.topLevelDeclarations;\n\n          if (topLevelDeclarations === undefined) {\n            topLevelDeclarations = parser.state.module.buildInfo.topLevelDeclarations = new Set();\n          }\n\n          for (const name of parser.scope.definitions.asSet()) {\n            const freeInfo = parser.getFreeInfoFromVariable(name);\n\n            if (freeInfo === undefined) {\n              topLevelDeclarations.add(name);\n            }\n          }\n        });\n      };\n\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"JavascriptMetaInfoPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"JavascriptMetaInfoPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"JavascriptMetaInfoPlugin\", handler);\n    });\n  }\n\n}\n\nmodule.exports = JavascriptMetaInfoPlugin;","map":{"version":3,"names":["InnerGraph","require","JavascriptMetaInfoPlugin","apply","compiler","hooks","compilation","tap","normalModuleFactory","handler","parser","call","for","state","module","buildInfo","moduleConcatenationBailout","usingEval","currentSymbol","getTopLevelSymbol","addUsage","bailout","finish","topLevelDeclarations","undefined","Set","name","scope","definitions","asSet","freeInfo","getFreeInfoFromVariable","add","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/JavascriptMetaInfoPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sergey Melyukov @smelukov\n*/\n\n\"use strict\";\n\nconst InnerGraph = require(\"./optimize/InnerGraph\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./javascript/JavascriptParser\")} JavascriptParser */\n\nclass JavascriptMetaInfoPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"JavascriptMetaInfoPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\t/**\n\t\t\t\t * @param {JavascriptParser} parser the parser\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst handler = parser => {\n\t\t\t\t\tparser.hooks.call.for(\"eval\").tap(\"JavascriptMetaInfoPlugin\", () => {\n\t\t\t\t\t\tparser.state.module.buildInfo.moduleConcatenationBailout = \"eval()\";\n\t\t\t\t\t\tparser.state.module.buildInfo.usingEval = true;\n\t\t\t\t\t\tconst currentSymbol = InnerGraph.getTopLevelSymbol(parser.state);\n\t\t\t\t\t\tif (currentSymbol) {\n\t\t\t\t\t\t\tInnerGraph.addUsage(parser.state, null, currentSymbol);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tInnerGraph.bailout(parser.state);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.finish.tap(\"JavascriptMetaInfoPlugin\", () => {\n\t\t\t\t\t\tlet topLevelDeclarations =\n\t\t\t\t\t\t\tparser.state.module.buildInfo.topLevelDeclarations;\n\t\t\t\t\t\tif (topLevelDeclarations === undefined) {\n\t\t\t\t\t\t\ttopLevelDeclarations =\n\t\t\t\t\t\t\t\tparser.state.module.buildInfo.topLevelDeclarations = new Set();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const name of parser.scope.definitions.asSet()) {\n\t\t\t\t\t\t\tconst freeInfo = parser.getFreeInfoFromVariable(name);\n\t\t\t\t\t\t\tif (freeInfo === undefined) {\n\t\t\t\t\t\t\t\ttopLevelDeclarations.add(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"JavascriptMetaInfoPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"JavascriptMetaInfoPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"JavascriptMetaInfoPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = JavascriptMetaInfoPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,uBAAD,CAA1B;AAEA;;AACA;;;AAEA,MAAMC,wBAAN,CAA+B;EAC9B;AACD;AACA;AACA;AACA;EACCC,KAAK,CAACC,QAAD,EAAW;IACfA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,0BADD,EAEC,CAACD,WAAD,WAA0C;MAAA,IAA5B;QAAEE;MAAF,CAA4B;;MACzC;AACJ;AACA;AACA;MACI,MAAMC,OAAO,GAAGC,MAAM,IAAI;QACzBA,MAAM,CAACL,KAAP,CAAaM,IAAb,CAAkBC,GAAlB,CAAsB,MAAtB,EAA8BL,GAA9B,CAAkC,0BAAlC,EAA8D,MAAM;UACnEG,MAAM,CAACG,KAAP,CAAaC,MAAb,CAAoBC,SAApB,CAA8BC,0BAA9B,GAA2D,QAA3D;UACAN,MAAM,CAACG,KAAP,CAAaC,MAAb,CAAoBC,SAApB,CAA8BE,SAA9B,GAA0C,IAA1C;UACA,MAAMC,aAAa,GAAGlB,UAAU,CAACmB,iBAAX,CAA6BT,MAAM,CAACG,KAApC,CAAtB;;UACA,IAAIK,aAAJ,EAAmB;YAClBlB,UAAU,CAACoB,QAAX,CAAoBV,MAAM,CAACG,KAA3B,EAAkC,IAAlC,EAAwCK,aAAxC;UACA,CAFD,MAEO;YACNlB,UAAU,CAACqB,OAAX,CAAmBX,MAAM,CAACG,KAA1B;UACA;QACD,CATD;QAUAH,MAAM,CAACL,KAAP,CAAaiB,MAAb,CAAoBf,GAApB,CAAwB,0BAAxB,EAAoD,MAAM;UACzD,IAAIgB,oBAAoB,GACvBb,MAAM,CAACG,KAAP,CAAaC,MAAb,CAAoBC,SAApB,CAA8BQ,oBAD/B;;UAEA,IAAIA,oBAAoB,KAAKC,SAA7B,EAAwC;YACvCD,oBAAoB,GACnBb,MAAM,CAACG,KAAP,CAAaC,MAAb,CAAoBC,SAApB,CAA8BQ,oBAA9B,GAAqD,IAAIE,GAAJ,EADtD;UAEA;;UACD,KAAK,MAAMC,IAAX,IAAmBhB,MAAM,CAACiB,KAAP,CAAaC,WAAb,CAAyBC,KAAzB,EAAnB,EAAqD;YACpD,MAAMC,QAAQ,GAAGpB,MAAM,CAACqB,uBAAP,CAA+BL,IAA/B,CAAjB;;YACA,IAAII,QAAQ,KAAKN,SAAjB,EAA4B;cAC3BD,oBAAoB,CAACS,GAArB,CAAyBN,IAAzB;YACA;UACD;QACD,CAbD;MAcA,CAzBD;;MA2BAlB,mBAAmB,CAACH,KAApB,CAA0BK,MAA1B,CACEE,GADF,CACM,iBADN,EAEEL,GAFF,CAEM,0BAFN,EAEkCE,OAFlC;MAGAD,mBAAmB,CAACH,KAApB,CAA0BK,MAA1B,CACEE,GADF,CACM,oBADN,EAEEL,GAFF,CAEM,0BAFN,EAEkCE,OAFlC;MAGAD,mBAAmB,CAACH,KAApB,CAA0BK,MAA1B,CACEE,GADF,CACM,gBADN,EAEEL,GAFF,CAEM,0BAFN,EAEkCE,OAFlC;IAGA,CA3CF;EA6CA;;AApD6B;;AAuD/BK,MAAM,CAACmB,OAAP,GAAiB/B,wBAAjB"},"metadata":{},"sourceType":"script"}