{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\n\nconst AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\n\nconst AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\n\nconst AMDRequireDependenciesBlock = require(\"./AMDRequireDependenciesBlock\");\n\nconst AMDRequireDependency = require(\"./AMDRequireDependency\");\n\nconst AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\n\nconst ConstDependency = require(\"./ConstDependency\");\n\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\n\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\n\nconst {\n  getLocalModule\n} = require(\"./LocalModulesHelpers\");\n\nconst UnsupportedDependency = require(\"./UnsupportedDependency\");\n\nconst getFunctionExpression = require(\"./getFunctionExpression\");\n\nclass AMDRequireDependenciesBlockParserPlugin {\n  constructor(options) {\n    this.options = options;\n  }\n\n  processFunctionArgument(parser, expression) {\n    let bindThis = true;\n    const fnData = getFunctionExpression(expression);\n\n    if (fnData) {\n      parser.inScope(fnData.fn.params.filter(i => {\n        return ![\"require\", \"module\", \"exports\"].includes(i.name);\n      }), () => {\n        if (fnData.fn.body.type === \"BlockStatement\") {\n          parser.walkStatement(fnData.fn.body);\n        } else {\n          parser.walkExpression(fnData.fn.body);\n        }\n      });\n      parser.walkExpressions(fnData.expressions);\n\n      if (fnData.needThis === false) {\n        bindThis = false;\n      }\n    } else {\n      parser.walkExpression(expression);\n    }\n\n    return bindThis;\n  }\n\n  apply(parser) {\n    parser.hooks.call.for(\"require\").tap(\"AMDRequireDependenciesBlockParserPlugin\", this.processCallRequire.bind(this, parser));\n  }\n\n  processArray(parser, expr, param) {\n    if (param.isArray()) {\n      for (const p of param.items) {\n        const result = this.processItem(parser, expr, p);\n\n        if (result === undefined) {\n          this.processContext(parser, expr, p);\n        }\n      }\n\n      return true;\n    } else if (param.isConstArray()) {\n      const deps = [];\n\n      for (const request of param.array) {\n        let dep, localModule;\n\n        if (request === \"require\") {\n          dep = \"__webpack_require__\";\n        } else if ([\"exports\", \"module\"].includes(request)) {\n          dep = request;\n        } else if (localModule = getLocalModule(parser.state, request)) {\n          localModule.flagUsed();\n          dep = new LocalModuleDependency(localModule, undefined, false);\n          dep.loc = expr.loc;\n          parser.state.module.addPresentationalDependency(dep);\n        } else {\n          dep = this.newRequireItemDependency(request);\n          dep.loc = expr.loc;\n          dep.optional = !!parser.scope.inTry;\n          parser.state.current.addDependency(dep);\n        }\n\n        deps.push(dep);\n      }\n\n      const dep = this.newRequireArrayDependency(deps, param.range);\n      dep.loc = expr.loc;\n      dep.optional = !!parser.scope.inTry;\n      parser.state.module.addPresentationalDependency(dep);\n      return true;\n    }\n  }\n\n  processItem(parser, expr, param) {\n    if (param.isConditional()) {\n      for (const p of param.options) {\n        const result = this.processItem(parser, expr, p);\n\n        if (result === undefined) {\n          this.processContext(parser, expr, p);\n        }\n      }\n\n      return true;\n    } else if (param.isString()) {\n      let dep, localModule;\n\n      if (param.string === \"require\") {\n        dep = new ConstDependency(\"__webpack_require__\", param.string, [RuntimeGlobals.require]);\n      } else if (param.string === \"module\") {\n        dep = new ConstDependency(parser.state.module.buildInfo.moduleArgument, param.range, [RuntimeGlobals.module]);\n      } else if (param.string === \"exports\") {\n        dep = new ConstDependency(parser.state.module.buildInfo.exportsArgument, param.range, [RuntimeGlobals.exports]);\n      } else if (localModule = getLocalModule(parser.state, param.string)) {\n        localModule.flagUsed();\n        dep = new LocalModuleDependency(localModule, param.range, false);\n      } else {\n        dep = this.newRequireItemDependency(param.string, param.range);\n        dep.loc = expr.loc;\n        dep.optional = !!parser.scope.inTry;\n        parser.state.current.addDependency(dep);\n        return true;\n      }\n\n      dep.loc = expr.loc;\n      parser.state.module.addPresentationalDependency(dep);\n      return true;\n    }\n  }\n\n  processContext(parser, expr, param) {\n    const dep = ContextDependencyHelpers.create(AMDRequireContextDependency, param.range, param, expr, this.options, {\n      category: \"amd\"\n    }, parser);\n    if (!dep) return;\n    dep.loc = expr.loc;\n    dep.optional = !!parser.scope.inTry;\n    parser.state.current.addDependency(dep);\n    return true;\n  }\n\n  processArrayForRequestString(param) {\n    if (param.isArray()) {\n      const result = param.items.map(item => this.processItemForRequestString(item));\n      if (result.every(Boolean)) return result.join(\" \");\n    } else if (param.isConstArray()) {\n      return param.array.join(\" \");\n    }\n  }\n\n  processItemForRequestString(param) {\n    if (param.isConditional()) {\n      const result = param.options.map(item => this.processItemForRequestString(item));\n      if (result.every(Boolean)) return result.join(\"|\");\n    } else if (param.isString()) {\n      return param.string;\n    }\n  }\n\n  processCallRequire(parser, expr) {\n    let param;\n    let depBlock;\n    let dep;\n    let result;\n    const old = parser.state.current;\n\n    if (expr.arguments.length >= 1) {\n      param = parser.evaluateExpression(expr.arguments[0]);\n      depBlock = this.newRequireDependenciesBlock(expr.loc, this.processArrayForRequestString(param));\n      dep = this.newRequireDependency(expr.range, param.range, expr.arguments.length > 1 ? expr.arguments[1].range : null, expr.arguments.length > 2 ? expr.arguments[2].range : null);\n      dep.loc = expr.loc;\n      depBlock.addDependency(dep);\n      parser.state.current = depBlock;\n    }\n\n    if (expr.arguments.length === 1) {\n      parser.inScope([], () => {\n        result = this.processArray(parser, expr, param);\n      });\n      parser.state.current = old;\n      if (!result) return;\n      parser.state.current.addBlock(depBlock);\n      return true;\n    }\n\n    if (expr.arguments.length === 2 || expr.arguments.length === 3) {\n      try {\n        parser.inScope([], () => {\n          result = this.processArray(parser, expr, param);\n        });\n\n        if (!result) {\n          const dep = new UnsupportedDependency(\"unsupported\", expr.range);\n          old.addPresentationalDependency(dep);\n\n          if (parser.state.module) {\n            parser.state.module.addError(new UnsupportedFeatureWarning(\"Cannot statically analyse 'require(…, …)' in line \" + expr.loc.start.line, expr.loc));\n          }\n\n          depBlock = null;\n          return true;\n        }\n\n        dep.functionBindThis = this.processFunctionArgument(parser, expr.arguments[1]);\n\n        if (expr.arguments.length === 3) {\n          dep.errorCallbackBindThis = this.processFunctionArgument(parser, expr.arguments[2]);\n        }\n      } finally {\n        parser.state.current = old;\n        if (depBlock) parser.state.current.addBlock(depBlock);\n      }\n\n      return true;\n    }\n  }\n\n  newRequireDependenciesBlock(loc, request) {\n    return new AMDRequireDependenciesBlock(loc, request);\n  }\n\n  newRequireDependency(outerRange, arrayRange, functionRange, errorCallbackRange) {\n    return new AMDRequireDependency(outerRange, arrayRange, functionRange, errorCallbackRange);\n  }\n\n  newRequireItemDependency(request, range) {\n    return new AMDRequireItemDependency(request, range);\n  }\n\n  newRequireArrayDependency(depsArray, range) {\n    return new AMDRequireArrayDependency(depsArray, range);\n  }\n\n}\n\nmodule.exports = AMDRequireDependenciesBlockParserPlugin;","map":{"version":3,"names":["RuntimeGlobals","require","UnsupportedFeatureWarning","AMDRequireArrayDependency","AMDRequireContextDependency","AMDRequireDependenciesBlock","AMDRequireDependency","AMDRequireItemDependency","ConstDependency","ContextDependencyHelpers","LocalModuleDependency","getLocalModule","UnsupportedDependency","getFunctionExpression","AMDRequireDependenciesBlockParserPlugin","constructor","options","processFunctionArgument","parser","expression","bindThis","fnData","inScope","fn","params","filter","i","includes","name","body","type","walkStatement","walkExpression","walkExpressions","expressions","needThis","apply","hooks","call","for","tap","processCallRequire","bind","processArray","expr","param","isArray","p","items","result","processItem","undefined","processContext","isConstArray","deps","request","array","dep","localModule","state","flagUsed","loc","module","addPresentationalDependency","newRequireItemDependency","optional","scope","inTry","current","addDependency","push","newRequireArrayDependency","range","isConditional","isString","string","buildInfo","moduleArgument","exportsArgument","exports","create","category","processArrayForRequestString","map","item","processItemForRequestString","every","Boolean","join","depBlock","old","arguments","length","evaluateExpression","newRequireDependenciesBlock","newRequireDependency","addBlock","addError","start","line","functionBindThis","errorCallbackBindThis","outerRange","arrayRange","functionRange","errorCallbackRange","depsArray"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/dependencies/AMDRequireDependenciesBlockParserPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\nconst AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\nconst AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\nconst AMDRequireDependenciesBlock = require(\"./AMDRequireDependenciesBlock\");\nconst AMDRequireDependency = require(\"./AMDRequireDependency\");\nconst AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\nconst { getLocalModule } = require(\"./LocalModulesHelpers\");\nconst UnsupportedDependency = require(\"./UnsupportedDependency\");\nconst getFunctionExpression = require(\"./getFunctionExpression\");\n\nclass AMDRequireDependenciesBlockParserPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tprocessFunctionArgument(parser, expression) {\n\t\tlet bindThis = true;\n\t\tconst fnData = getFunctionExpression(expression);\n\t\tif (fnData) {\n\t\t\tparser.inScope(\n\t\t\t\tfnData.fn.params.filter(i => {\n\t\t\t\t\treturn ![\"require\", \"module\", \"exports\"].includes(i.name);\n\t\t\t\t}),\n\t\t\t\t() => {\n\t\t\t\t\tif (fnData.fn.body.type === \"BlockStatement\") {\n\t\t\t\t\t\tparser.walkStatement(fnData.fn.body);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparser.walkExpression(fnData.fn.body);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tparser.walkExpressions(fnData.expressions);\n\t\t\tif (fnData.needThis === false) {\n\t\t\t\tbindThis = false;\n\t\t\t}\n\t\t} else {\n\t\t\tparser.walkExpression(expression);\n\t\t}\n\t\treturn bindThis;\n\t}\n\n\tapply(parser) {\n\t\tparser.hooks.call\n\t\t\t.for(\"require\")\n\t\t\t.tap(\n\t\t\t\t\"AMDRequireDependenciesBlockParserPlugin\",\n\t\t\t\tthis.processCallRequire.bind(this, parser)\n\t\t\t);\n\t}\n\n\tprocessArray(parser, expr, param) {\n\t\tif (param.isArray()) {\n\t\t\tfor (const p of param.items) {\n\t\t\t\tconst result = this.processItem(parser, expr, p);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tthis.processContext(parser, expr, p);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (param.isConstArray()) {\n\t\t\tconst deps = [];\n\t\t\tfor (const request of param.array) {\n\t\t\t\tlet dep, localModule;\n\t\t\t\tif (request === \"require\") {\n\t\t\t\t\tdep = \"__webpack_require__\";\n\t\t\t\t} else if ([\"exports\", \"module\"].includes(request)) {\n\t\t\t\t\tdep = request;\n\t\t\t\t} else if ((localModule = getLocalModule(parser.state, request))) {\n\t\t\t\t\tlocalModule.flagUsed();\n\t\t\t\t\tdep = new LocalModuleDependency(localModule, undefined, false);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t} else {\n\t\t\t\t\tdep = this.newRequireItemDependency(request);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t}\n\t\t\t\tdeps.push(dep);\n\t\t\t}\n\t\t\tconst dep = this.newRequireArrayDependency(deps, param.range);\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\treturn true;\n\t\t}\n\t}\n\tprocessItem(parser, expr, param) {\n\t\tif (param.isConditional()) {\n\t\t\tfor (const p of param.options) {\n\t\t\t\tconst result = this.processItem(parser, expr, p);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tthis.processContext(parser, expr, p);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (param.isString()) {\n\t\t\tlet dep, localModule;\n\t\t\tif (param.string === \"require\") {\n\t\t\t\tdep = new ConstDependency(\"__webpack_require__\", param.string, [\n\t\t\t\t\tRuntimeGlobals.require\n\t\t\t\t]);\n\t\t\t} else if (param.string === \"module\") {\n\t\t\t\tdep = new ConstDependency(\n\t\t\t\t\tparser.state.module.buildInfo.moduleArgument,\n\t\t\t\t\tparam.range,\n\t\t\t\t\t[RuntimeGlobals.module]\n\t\t\t\t);\n\t\t\t} else if (param.string === \"exports\") {\n\t\t\t\tdep = new ConstDependency(\n\t\t\t\t\tparser.state.module.buildInfo.exportsArgument,\n\t\t\t\t\tparam.range,\n\t\t\t\t\t[RuntimeGlobals.exports]\n\t\t\t\t);\n\t\t\t} else if ((localModule = getLocalModule(parser.state, param.string))) {\n\t\t\t\tlocalModule.flagUsed();\n\t\t\t\tdep = new LocalModuleDependency(localModule, param.range, false);\n\t\t\t} else {\n\t\t\t\tdep = this.newRequireItemDependency(param.string, param.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tdep.loc = expr.loc;\n\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\treturn true;\n\t\t}\n\t}\n\tprocessContext(parser, expr, param) {\n\t\tconst dep = ContextDependencyHelpers.create(\n\t\t\tAMDRequireContextDependency,\n\t\t\tparam.range,\n\t\t\tparam,\n\t\t\texpr,\n\t\t\tthis.options,\n\t\t\t{\n\t\t\t\tcategory: \"amd\"\n\t\t\t},\n\t\t\tparser\n\t\t);\n\t\tif (!dep) return;\n\t\tdep.loc = expr.loc;\n\t\tdep.optional = !!parser.scope.inTry;\n\t\tparser.state.current.addDependency(dep);\n\t\treturn true;\n\t}\n\n\tprocessArrayForRequestString(param) {\n\t\tif (param.isArray()) {\n\t\t\tconst result = param.items.map(item =>\n\t\t\t\tthis.processItemForRequestString(item)\n\t\t\t);\n\t\t\tif (result.every(Boolean)) return result.join(\" \");\n\t\t} else if (param.isConstArray()) {\n\t\t\treturn param.array.join(\" \");\n\t\t}\n\t}\n\n\tprocessItemForRequestString(param) {\n\t\tif (param.isConditional()) {\n\t\t\tconst result = param.options.map(item =>\n\t\t\t\tthis.processItemForRequestString(item)\n\t\t\t);\n\t\t\tif (result.every(Boolean)) return result.join(\"|\");\n\t\t} else if (param.isString()) {\n\t\t\treturn param.string;\n\t\t}\n\t}\n\n\tprocessCallRequire(parser, expr) {\n\t\tlet param;\n\t\tlet depBlock;\n\t\tlet dep;\n\t\tlet result;\n\n\t\tconst old = parser.state.current;\n\n\t\tif (expr.arguments.length >= 1) {\n\t\t\tparam = parser.evaluateExpression(expr.arguments[0]);\n\t\t\tdepBlock = this.newRequireDependenciesBlock(\n\t\t\t\texpr.loc,\n\t\t\t\tthis.processArrayForRequestString(param)\n\t\t\t);\n\t\t\tdep = this.newRequireDependency(\n\t\t\t\texpr.range,\n\t\t\t\tparam.range,\n\t\t\t\texpr.arguments.length > 1 ? expr.arguments[1].range : null,\n\t\t\t\texpr.arguments.length > 2 ? expr.arguments[2].range : null\n\t\t\t);\n\t\t\tdep.loc = expr.loc;\n\t\t\tdepBlock.addDependency(dep);\n\n\t\t\tparser.state.current = depBlock;\n\t\t}\n\n\t\tif (expr.arguments.length === 1) {\n\t\t\tparser.inScope([], () => {\n\t\t\t\tresult = this.processArray(parser, expr, param);\n\t\t\t});\n\t\t\tparser.state.current = old;\n\t\t\tif (!result) return;\n\t\t\tparser.state.current.addBlock(depBlock);\n\t\t\treturn true;\n\t\t}\n\n\t\tif (expr.arguments.length === 2 || expr.arguments.length === 3) {\n\t\t\ttry {\n\t\t\t\tparser.inScope([], () => {\n\t\t\t\t\tresult = this.processArray(parser, expr, param);\n\t\t\t\t});\n\t\t\t\tif (!result) {\n\t\t\t\t\tconst dep = new UnsupportedDependency(\"unsupported\", expr.range);\n\t\t\t\t\told.addPresentationalDependency(dep);\n\t\t\t\t\tif (parser.state.module) {\n\t\t\t\t\t\tparser.state.module.addError(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\t\"Cannot statically analyse 'require(…, …)' in line \" +\n\t\t\t\t\t\t\t\t\texpr.loc.start.line,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tdepBlock = null;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tdep.functionBindThis = this.processFunctionArgument(\n\t\t\t\t\tparser,\n\t\t\t\t\texpr.arguments[1]\n\t\t\t\t);\n\t\t\t\tif (expr.arguments.length === 3) {\n\t\t\t\t\tdep.errorCallbackBindThis = this.processFunctionArgument(\n\t\t\t\t\t\tparser,\n\t\t\t\t\t\texpr.arguments[2]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tparser.state.current = old;\n\t\t\t\tif (depBlock) parser.state.current.addBlock(depBlock);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tnewRequireDependenciesBlock(loc, request) {\n\t\treturn new AMDRequireDependenciesBlock(loc, request);\n\t}\n\tnewRequireDependency(\n\t\touterRange,\n\t\tarrayRange,\n\t\tfunctionRange,\n\t\terrorCallbackRange\n\t) {\n\t\treturn new AMDRequireDependency(\n\t\t\touterRange,\n\t\t\tarrayRange,\n\t\t\tfunctionRange,\n\t\t\terrorCallbackRange\n\t\t);\n\t}\n\tnewRequireItemDependency(request, range) {\n\t\treturn new AMDRequireItemDependency(request, range);\n\t}\n\tnewRequireArrayDependency(depsArray, range) {\n\t\treturn new AMDRequireArrayDependency(depsArray, range);\n\t}\n}\nmodule.exports = AMDRequireDependenciesBlockParserPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}