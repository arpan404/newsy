{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Parser = require(\"../Parser\");\n\nconst ConstDependency = require(\"../dependencies/ConstDependency\");\n\nconst CssExportDependency = require(\"../dependencies/CssExportDependency\");\n\nconst CssImportDependency = require(\"../dependencies/CssImportDependency\");\n\nconst CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\n\nconst CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\n\nconst CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\n\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\n\nconst walkCssTokens = require(\"./walkCssTokens\");\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\n\n\nconst CC_LEFT_CURLY = \"{\".charCodeAt(0);\nconst CC_RIGHT_CURLY = \"}\".charCodeAt(0);\nconst CC_COLON = \":\".charCodeAt(0);\nconst CC_SLASH = \"/\".charCodeAt(0);\nconst CC_SEMICOLON = \";\".charCodeAt(0);\n\nconst cssUnescape = str => {\n  return str.replace(/\\\\([0-9a-fA-F]{1,6}[ \\t\\n\\r\\f]?|[\\s\\S])/g, match => {\n    if (match.length > 2) {\n      return String.fromCharCode(parseInt(match.slice(1).trim(), 16));\n    } else {\n      return match[1];\n    }\n  });\n};\n\nclass LocConverter {\n  constructor(input) {\n    this._input = input;\n    this.line = 1;\n    this.column = 0;\n    this.pos = 0;\n  }\n\n  get(pos) {\n    if (this.pos !== pos) {\n      if (this.pos < pos) {\n        const str = this._input.slice(this.pos, pos);\n\n        let i = str.lastIndexOf(\"\\n\");\n\n        if (i === -1) {\n          this.column += str.length;\n        } else {\n          this.column = str.length - i - 1;\n          this.line++;\n\n          while (i > 0 && (i = str.lastIndexOf(\"\\n\", i - 1)) !== -1) this.line++;\n        }\n      } else {\n        let i = this._input.lastIndexOf(\"\\n\", this.pos);\n\n        while (i >= pos) {\n          this.line--;\n          i = i > 0 ? this._input.lastIndexOf(\"\\n\", i - 1) : -1;\n        }\n\n        this.column = pos - i;\n      }\n\n      this.pos = pos;\n    }\n\n    return this;\n  }\n\n}\n\nconst CSS_MODE_TOP_LEVEL = 0;\nconst CSS_MODE_IN_RULE = 1;\nconst CSS_MODE_IN_LOCAL_RULE = 2;\nconst CSS_MODE_AT_IMPORT_EXPECT_URL = 3; // TODO implement layer and supports for @import\n\nconst CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS = 4;\nconst CSS_MODE_AT_IMPORT_EXPECT_MEDIA = 5;\nconst CSS_MODE_AT_OTHER = 6;\n\nconst explainMode = mode => {\n  switch (mode) {\n    case CSS_MODE_TOP_LEVEL:\n      return \"parsing top level css\";\n\n    case CSS_MODE_IN_RULE:\n      return \"parsing css rule content (global)\";\n\n    case CSS_MODE_IN_LOCAL_RULE:\n      return \"parsing css rule content (local)\";\n\n    case CSS_MODE_AT_IMPORT_EXPECT_URL:\n      return \"parsing @import (expecting url)\";\n\n    case CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS:\n      return \"parsing @import (expecting optionally supports or media query)\";\n\n    case CSS_MODE_AT_IMPORT_EXPECT_MEDIA:\n      return \"parsing @import (expecting optionally media query)\";\n\n    case CSS_MODE_AT_OTHER:\n      return \"parsing at-rule\";\n\n    default:\n      return mode;\n  }\n};\n\nclass CssParser extends Parser {\n  constructor() {\n    let {\n      allowPseudoBlocks = true,\n      allowModeSwitch = true,\n      defaultMode = \"global\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    this.allowPseudoBlocks = allowPseudoBlocks;\n    this.allowModeSwitch = allowModeSwitch;\n    this.defaultMode = defaultMode;\n  }\n  /**\n   * @param {string | Buffer | PreparsedAst} source the source to parse\n   * @param {ParserState} state the parser state\n   * @returns {ParserState} the parser state\n   */\n\n\n  parse(source, state) {\n    if (Buffer.isBuffer(source)) {\n      source = source.toString(\"utf-8\");\n    } else if (typeof source === \"object\") {\n      throw new Error(\"webpackAst is unexpected for the CssParser\");\n    }\n\n    if (source[0] === \"\\ufeff\") {\n      source = source.slice(1);\n    }\n\n    const module = state.module;\n    const declaredCssVariables = new Set();\n    const locConverter = new LocConverter(source);\n    let mode = CSS_MODE_TOP_LEVEL;\n    let modePos = 0;\n    let modeNestingLevel = 0;\n    let modeData = undefined;\n    let singleClassSelector = undefined;\n    let lastIdentifier = undefined;\n    const modeStack = [];\n\n    const isTopLevelLocal = () => modeData === \"local\" || this.defaultMode === \"local\" && modeData === undefined;\n\n    const eatWhiteLine = (input, pos) => {\n      for (;;) {\n        const cc = input.charCodeAt(pos);\n\n        if (cc === 32 || cc === 9) {\n          pos++;\n          continue;\n        }\n\n        if (cc === 10) pos++;\n        break;\n      }\n\n      return pos;\n    };\n\n    const eatUntil = chars => {\n      const charCodes = Array.from({\n        length: chars.length\n      }, (_, i) => chars.charCodeAt(i));\n      const arr = Array.from({\n        length: charCodes.reduce((a, b) => Math.max(a, b), 0) + 1\n      }, () => false);\n      charCodes.forEach(cc => arr[cc] = true);\n      return (input, pos) => {\n        for (;;) {\n          const cc = input.charCodeAt(pos);\n\n          if (cc < arr.length && arr[cc]) {\n            return pos;\n          }\n\n          pos++;\n          if (pos === input.length) return pos;\n        }\n      };\n    };\n\n    const eatText = (input, pos, eater) => {\n      let text = \"\";\n\n      for (;;) {\n        if (input.charCodeAt(pos) === CC_SLASH) {\n          const newPos = walkCssTokens.eatComments(input, pos);\n\n          if (pos !== newPos) {\n            pos = newPos;\n            if (pos === input.length) break;\n          } else {\n            text += \"/\";\n            pos++;\n            if (pos === input.length) break;\n          }\n        }\n\n        const newPos = eater(input, pos);\n\n        if (pos !== newPos) {\n          text += input.slice(pos, newPos);\n          pos = newPos;\n        } else {\n          break;\n        }\n\n        if (pos === input.length) break;\n      }\n\n      return [pos, text.trimRight()];\n    };\n\n    const eatExportName = eatUntil(\":};/\");\n    const eatExportValue = eatUntil(\"};/\");\n\n    const parseExports = (input, pos) => {\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      const cc = input.charCodeAt(pos);\n      if (cc !== CC_LEFT_CURLY) throw new Error(`Unexpected ${input[pos]} at ${pos} during parsing of ':export' (expected '{')`);\n      pos++;\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\n      for (;;) {\n        if (input.charCodeAt(pos) === CC_RIGHT_CURLY) break;\n        pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n        if (pos === input.length) return pos;\n        let start = pos;\n        let name;\n        [pos, name] = eatText(input, pos, eatExportName);\n        if (pos === input.length) return pos;\n\n        if (input.charCodeAt(pos) !== CC_COLON) {\n          throw new Error(`Unexpected ${input[pos]} at ${pos} during parsing of export name in ':export' (expected ':')`);\n        }\n\n        pos++;\n        if (pos === input.length) return pos;\n        pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n        if (pos === input.length) return pos;\n        let value;\n        [pos, value] = eatText(input, pos, eatExportValue);\n        if (pos === input.length) return pos;\n        const cc = input.charCodeAt(pos);\n\n        if (cc === CC_SEMICOLON) {\n          pos++;\n          if (pos === input.length) return pos;\n          pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n          if (pos === input.length) return pos;\n        } else if (cc !== CC_RIGHT_CURLY) {\n          throw new Error(`Unexpected ${input[pos]} at ${pos} during parsing of export value in ':export' (expected ';' or '}')`);\n        }\n\n        const dep = new CssExportDependency(name, value);\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(start);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(pos);\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n      }\n\n      pos++;\n      if (pos === input.length) return pos;\n      pos = eatWhiteLine(input, pos);\n      return pos;\n    };\n\n    const eatPropertyName = eatUntil(\":{};\");\n\n    const processLocalDeclaration = (input, pos) => {\n      modeData = undefined;\n      const start = pos;\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      const propertyNameStart = pos;\n      const [propertyNameEnd, propertyName] = eatText(input, pos, eatPropertyName);\n      if (input.charCodeAt(propertyNameEnd) !== CC_COLON) return start;\n      pos = propertyNameEnd + 1;\n\n      if (propertyName.startsWith(\"--\")) {\n        // CSS Variable\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(propertyNameStart);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(propertyNameEnd);\n        const name = propertyName.slice(2);\n        const dep = new CssLocalIdentifierDependency(name, [propertyNameStart, propertyNameEnd], \"--\");\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n        declaredCssVariables.add(name);\n      } else if (propertyName === \"animation-name\" || propertyName === \"animation\") {\n        modeData = \"animation\";\n        lastIdentifier = undefined;\n      }\n\n      return pos;\n    };\n\n    const processDeclarationValueDone = (input, pos) => {\n      if (modeData === \"animation\" && lastIdentifier) {\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(lastIdentifier[0]);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(lastIdentifier[1]);\n        const name = input.slice(lastIdentifier[0], lastIdentifier[1]);\n        const dep = new CssSelfLocalIdentifierDependency(name, lastIdentifier);\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n      }\n    };\n\n    const eatKeyframes = eatUntil(\"{};/\");\n    const eatNameInVar = eatUntil(\",)};/\");\n    walkCssTokens(source, {\n      isSelector: () => {\n        return mode !== CSS_MODE_IN_RULE && mode !== CSS_MODE_IN_LOCAL_RULE;\n      },\n      url: (input, start, end, contentStart, contentEnd) => {\n        const value = cssUnescape(input.slice(contentStart, contentEnd));\n\n        switch (mode) {\n          case CSS_MODE_AT_IMPORT_EXPECT_URL:\n            {\n              modeData.url = value;\n              mode = CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS;\n              break;\n            }\n\n          case CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS:\n          case CSS_MODE_AT_IMPORT_EXPECT_MEDIA:\n            throw new Error(`Unexpected ${input.slice(start, end)} at ${start} during ${explainMode(mode)}`);\n\n          default:\n            {\n              const dep = new CssUrlDependency(value, [start, end], \"url\");\n              const {\n                line: sl,\n                column: sc\n              } = locConverter.get(start);\n              const {\n                line: el,\n                column: ec\n              } = locConverter.get(end);\n              dep.setLoc(sl, sc, el, ec);\n              module.addDependency(dep);\n              module.addCodeGenerationDependency(dep);\n              break;\n            }\n        }\n\n        return end;\n      },\n      string: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_AT_IMPORT_EXPECT_URL:\n            {\n              modeData.url = cssUnescape(input.slice(start + 1, end - 1));\n              mode = CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS;\n              break;\n            }\n        }\n\n        return end;\n      },\n      atKeyword: (input, start, end) => {\n        const name = input.slice(start, end);\n\n        if (name === \"@namespace\") {\n          throw new Error(\"@namespace is not supported in bundled CSS\");\n        }\n\n        if (name === \"@import\") {\n          if (mode !== CSS_MODE_TOP_LEVEL) {\n            throw new Error(`Unexpected @import at ${start} during ${explainMode(mode)}`);\n          }\n\n          mode = CSS_MODE_AT_IMPORT_EXPECT_URL;\n          modePos = end;\n          modeData = {\n            start: start,\n            url: undefined,\n            supports: undefined\n          };\n        }\n\n        if (name === \"@keyframes\") {\n          let pos = end;\n          pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n          if (pos === input.length) return pos;\n          const [newPos, name] = eatText(input, pos, eatKeyframes);\n          const {\n            line: sl,\n            column: sc\n          } = locConverter.get(pos);\n          const {\n            line: el,\n            column: ec\n          } = locConverter.get(newPos);\n          const dep = new CssLocalIdentifierDependency(name, [pos, newPos]);\n          dep.setLoc(sl, sc, el, ec);\n          module.addDependency(dep);\n          pos = newPos;\n          if (pos === input.length) return pos;\n\n          if (input.charCodeAt(pos) !== CC_LEFT_CURLY) {\n            throw new Error(`Unexpected ${input[pos]} at ${pos} during parsing of @keyframes (expected '{')`);\n          }\n\n          mode = CSS_MODE_IN_LOCAL_RULE;\n          modeNestingLevel = 1;\n          return pos + 1;\n        }\n\n        return end;\n      },\n      semicolon: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_AT_IMPORT_EXPECT_URL:\n            throw new Error(`Expected URL for @import at ${start}`);\n\n          case CSS_MODE_AT_IMPORT_EXPECT_MEDIA:\n          case CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS:\n            {\n              const {\n                line: sl,\n                column: sc\n              } = locConverter.get(modeData.start);\n              const {\n                line: el,\n                column: ec\n              } = locConverter.get(end);\n              end = eatWhiteLine(input, end);\n              const media = input.slice(modePos, start).trim();\n              const dep = new CssImportDependency(modeData.url, [modeData.start, end], modeData.supports, media);\n              dep.setLoc(sl, sc, el, ec);\n              module.addDependency(dep);\n              break;\n            }\n\n          case CSS_MODE_IN_LOCAL_RULE:\n            {\n              processDeclarationValueDone(input, start);\n              return processLocalDeclaration(input, end);\n            }\n\n          case CSS_MODE_IN_RULE:\n            {\n              return end;\n            }\n        }\n\n        mode = CSS_MODE_TOP_LEVEL;\n        modeData = undefined;\n        singleClassSelector = undefined;\n        return end;\n      },\n      leftCurlyBracket: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            mode = isTopLevelLocal() ? CSS_MODE_IN_LOCAL_RULE : CSS_MODE_IN_RULE;\n            modeNestingLevel = 1;\n            if (mode === CSS_MODE_IN_LOCAL_RULE) return processLocalDeclaration(input, end);\n            break;\n\n          case CSS_MODE_IN_RULE:\n          case CSS_MODE_IN_LOCAL_RULE:\n            modeNestingLevel++;\n            break;\n        }\n\n        return end;\n      },\n      rightCurlyBracket: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_IN_LOCAL_RULE:\n            processDeclarationValueDone(input, start);\n\n          /* falls through */\n\n          case CSS_MODE_IN_RULE:\n            if (--modeNestingLevel === 0) {\n              mode = CSS_MODE_TOP_LEVEL;\n              modeData = undefined;\n              singleClassSelector = undefined;\n            }\n\n            break;\n        }\n\n        return end;\n      },\n      id: (input, start, end) => {\n        singleClassSelector = false;\n\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            if (isTopLevelLocal()) {\n              const name = input.slice(start + 1, end);\n              const dep = new CssLocalIdentifierDependency(name, [start + 1, end]);\n              const {\n                line: sl,\n                column: sc\n              } = locConverter.get(start);\n              const {\n                line: el,\n                column: ec\n              } = locConverter.get(end);\n              dep.setLoc(sl, sc, el, ec);\n              module.addDependency(dep);\n            }\n\n            break;\n        }\n\n        return end;\n      },\n      identifier: (input, start, end) => {\n        singleClassSelector = false;\n\n        switch (mode) {\n          case CSS_MODE_IN_LOCAL_RULE:\n            if (modeData === \"animation\") {\n              lastIdentifier = [start, end];\n            }\n\n            break;\n        }\n\n        return end;\n      },\n      class: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              if (isTopLevelLocal()) {\n                const name = input.slice(start + 1, end);\n                const dep = new CssLocalIdentifierDependency(name, [start + 1, end]);\n                const {\n                  line: sl,\n                  column: sc\n                } = locConverter.get(start);\n                const {\n                  line: el,\n                  column: ec\n                } = locConverter.get(end);\n                dep.setLoc(sl, sc, el, ec);\n                module.addDependency(dep);\n                if (singleClassSelector === undefined) singleClassSelector = name;\n              } else {\n                singleClassSelector = false;\n              }\n\n              break;\n            }\n        }\n\n        return end;\n      },\n      leftParenthesis: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              modeStack.push(false);\n              break;\n            }\n        }\n\n        return end;\n      },\n      rightParenthesis: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              const newModeData = modeStack.pop();\n\n              if (newModeData !== false) {\n                modeData = newModeData;\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              }\n\n              break;\n            }\n        }\n\n        return end;\n      },\n      pseudoClass: (input, start, end) => {\n        singleClassSelector = false;\n\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              const name = input.slice(start, end);\n\n              if (this.allowModeSwitch && name === \":global\") {\n                modeData = \"global\";\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              } else if (this.allowModeSwitch && name === \":local\") {\n                modeData = \"local\";\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              } else if (this.allowPseudoBlocks && name === \":export\") {\n                const pos = parseExports(input, end);\n                const dep = new ConstDependency(\"\", [start, pos]);\n                module.addPresentationalDependency(dep);\n                return pos;\n              }\n\n              break;\n            }\n        }\n\n        return end;\n      },\n      pseudoFunction: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              const name = input.slice(start, end - 1);\n\n              if (this.allowModeSwitch && name === \":global\") {\n                modeStack.push(modeData);\n                modeData = \"global\";\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              } else if (this.allowModeSwitch && name === \":local\") {\n                modeStack.push(modeData);\n                modeData = \"local\";\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              } else {\n                modeStack.push(false);\n              }\n\n              break;\n            }\n        }\n\n        return end;\n      },\n      function: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_IN_LOCAL_RULE:\n            {\n              const name = input.slice(start, end - 1);\n\n              if (name === \"var\") {\n                let pos = walkCssTokens.eatWhitespaceAndComments(input, end);\n                if (pos === input.length) return pos;\n                const [newPos, name] = eatText(input, pos, eatNameInVar);\n                if (!name.startsWith(\"--\")) return end;\n                const {\n                  line: sl,\n                  column: sc\n                } = locConverter.get(pos);\n                const {\n                  line: el,\n                  column: ec\n                } = locConverter.get(newPos);\n                const dep = new CssSelfLocalIdentifierDependency(name.slice(2), [pos, newPos], \"--\", declaredCssVariables);\n                dep.setLoc(sl, sc, el, ec);\n                module.addDependency(dep);\n                return newPos;\n              }\n\n              break;\n            }\n        }\n\n        return end;\n      },\n      comma: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            modeData = undefined;\n            modeStack.length = 0;\n            break;\n\n          case CSS_MODE_IN_LOCAL_RULE:\n            processDeclarationValueDone(input, start);\n            break;\n        }\n\n        return end;\n      }\n    });\n    module.buildInfo.strict = true;\n    module.buildMeta.exportsType = \"namespace\";\n    module.addDependency(new StaticExportsDependency([], true));\n    return state;\n  }\n\n}\n\nmodule.exports = CssParser;","map":{"version":3,"names":["Parser","require","ConstDependency","CssExportDependency","CssImportDependency","CssLocalIdentifierDependency","CssSelfLocalIdentifierDependency","CssUrlDependency","StaticExportsDependency","walkCssTokens","CC_LEFT_CURLY","charCodeAt","CC_RIGHT_CURLY","CC_COLON","CC_SLASH","CC_SEMICOLON","cssUnescape","str","replace","match","length","String","fromCharCode","parseInt","slice","trim","LocConverter","constructor","input","_input","line","column","pos","get","i","lastIndexOf","CSS_MODE_TOP_LEVEL","CSS_MODE_IN_RULE","CSS_MODE_IN_LOCAL_RULE","CSS_MODE_AT_IMPORT_EXPECT_URL","CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS","CSS_MODE_AT_IMPORT_EXPECT_MEDIA","CSS_MODE_AT_OTHER","explainMode","mode","CssParser","allowPseudoBlocks","allowModeSwitch","defaultMode","parse","source","state","Buffer","isBuffer","toString","Error","module","declaredCssVariables","Set","locConverter","modePos","modeNestingLevel","modeData","undefined","singleClassSelector","lastIdentifier","modeStack","isTopLevelLocal","eatWhiteLine","cc","eatUntil","chars","charCodes","Array","from","_","arr","reduce","a","b","Math","max","forEach","eatText","eater","text","newPos","eatComments","trimRight","eatExportName","eatExportValue","parseExports","eatWhitespaceAndComments","start","name","value","dep","sl","sc","el","ec","setLoc","addDependency","eatPropertyName","processLocalDeclaration","propertyNameStart","propertyNameEnd","propertyName","startsWith","add","processDeclarationValueDone","eatKeyframes","eatNameInVar","isSelector","url","end","contentStart","contentEnd","addCodeGenerationDependency","string","atKeyword","supports","semicolon","media","leftCurlyBracket","rightCurlyBracket","id","identifier","class","leftParenthesis","push","rightParenthesis","newModeData","pop","addPresentationalDependency","pseudoClass","pseudoFunction","function","comma","buildInfo","strict","buildMeta","exportsType","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/css/CssParser.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Parser = require(\"../Parser\");\nconst ConstDependency = require(\"../dependencies/ConstDependency\");\nconst CssExportDependency = require(\"../dependencies/CssExportDependency\");\nconst CssImportDependency = require(\"../dependencies/CssImportDependency\");\nconst CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\nconst CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\nconst CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst walkCssTokens = require(\"./walkCssTokens\");\n\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\n\nconst CC_LEFT_CURLY = \"{\".charCodeAt(0);\nconst CC_RIGHT_CURLY = \"}\".charCodeAt(0);\nconst CC_COLON = \":\".charCodeAt(0);\nconst CC_SLASH = \"/\".charCodeAt(0);\nconst CC_SEMICOLON = \";\".charCodeAt(0);\n\nconst cssUnescape = str => {\n\treturn str.replace(/\\\\([0-9a-fA-F]{1,6}[ \\t\\n\\r\\f]?|[\\s\\S])/g, match => {\n\t\tif (match.length > 2) {\n\t\t\treturn String.fromCharCode(parseInt(match.slice(1).trim(), 16));\n\t\t} else {\n\t\t\treturn match[1];\n\t\t}\n\t});\n};\n\nclass LocConverter {\n\tconstructor(input) {\n\t\tthis._input = input;\n\t\tthis.line = 1;\n\t\tthis.column = 0;\n\t\tthis.pos = 0;\n\t}\n\n\tget(pos) {\n\t\tif (this.pos !== pos) {\n\t\t\tif (this.pos < pos) {\n\t\t\t\tconst str = this._input.slice(this.pos, pos);\n\t\t\t\tlet i = str.lastIndexOf(\"\\n\");\n\t\t\t\tif (i === -1) {\n\t\t\t\t\tthis.column += str.length;\n\t\t\t\t} else {\n\t\t\t\t\tthis.column = str.length - i - 1;\n\t\t\t\t\tthis.line++;\n\t\t\t\t\twhile (i > 0 && (i = str.lastIndexOf(\"\\n\", i - 1)) !== -1)\n\t\t\t\t\t\tthis.line++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet i = this._input.lastIndexOf(\"\\n\", this.pos);\n\t\t\t\twhile (i >= pos) {\n\t\t\t\t\tthis.line--;\n\t\t\t\t\ti = i > 0 ? this._input.lastIndexOf(\"\\n\", i - 1) : -1;\n\t\t\t\t}\n\t\t\t\tthis.column = pos - i;\n\t\t\t}\n\t\t\tthis.pos = pos;\n\t\t}\n\t\treturn this;\n\t}\n}\n\nconst CSS_MODE_TOP_LEVEL = 0;\nconst CSS_MODE_IN_RULE = 1;\nconst CSS_MODE_IN_LOCAL_RULE = 2;\nconst CSS_MODE_AT_IMPORT_EXPECT_URL = 3;\n// TODO implement layer and supports for @import\nconst CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS = 4;\nconst CSS_MODE_AT_IMPORT_EXPECT_MEDIA = 5;\nconst CSS_MODE_AT_OTHER = 6;\n\nconst explainMode = mode => {\n\tswitch (mode) {\n\t\tcase CSS_MODE_TOP_LEVEL:\n\t\t\treturn \"parsing top level css\";\n\t\tcase CSS_MODE_IN_RULE:\n\t\t\treturn \"parsing css rule content (global)\";\n\t\tcase CSS_MODE_IN_LOCAL_RULE:\n\t\t\treturn \"parsing css rule content (local)\";\n\t\tcase CSS_MODE_AT_IMPORT_EXPECT_URL:\n\t\t\treturn \"parsing @import (expecting url)\";\n\t\tcase CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS:\n\t\t\treturn \"parsing @import (expecting optionally supports or media query)\";\n\t\tcase CSS_MODE_AT_IMPORT_EXPECT_MEDIA:\n\t\t\treturn \"parsing @import (expecting optionally media query)\";\n\t\tcase CSS_MODE_AT_OTHER:\n\t\t\treturn \"parsing at-rule\";\n\t\tdefault:\n\t\t\treturn mode;\n\t}\n};\n\nclass CssParser extends Parser {\n\tconstructor({\n\t\tallowPseudoBlocks = true,\n\t\tallowModeSwitch = true,\n\t\tdefaultMode = \"global\"\n\t} = {}) {\n\t\tsuper();\n\t\tthis.allowPseudoBlocks = allowPseudoBlocks;\n\t\tthis.allowModeSwitch = allowModeSwitch;\n\t\tthis.defaultMode = defaultMode;\n\t}\n\n\t/**\n\t * @param {string | Buffer | PreparsedAst} source the source to parse\n\t * @param {ParserState} state the parser state\n\t * @returns {ParserState} the parser state\n\t */\n\tparse(source, state) {\n\t\tif (Buffer.isBuffer(source)) {\n\t\t\tsource = source.toString(\"utf-8\");\n\t\t} else if (typeof source === \"object\") {\n\t\t\tthrow new Error(\"webpackAst is unexpected for the CssParser\");\n\t\t}\n\t\tif (source[0] === \"\\ufeff\") {\n\t\t\tsource = source.slice(1);\n\t\t}\n\n\t\tconst module = state.module;\n\n\t\tconst declaredCssVariables = new Set();\n\n\t\tconst locConverter = new LocConverter(source);\n\t\tlet mode = CSS_MODE_TOP_LEVEL;\n\t\tlet modePos = 0;\n\t\tlet modeNestingLevel = 0;\n\t\tlet modeData = undefined;\n\t\tlet singleClassSelector = undefined;\n\t\tlet lastIdentifier = undefined;\n\t\tconst modeStack = [];\n\t\tconst isTopLevelLocal = () =>\n\t\t\tmodeData === \"local\" ||\n\t\t\t(this.defaultMode === \"local\" && modeData === undefined);\n\t\tconst eatWhiteLine = (input, pos) => {\n\t\t\tfor (;;) {\n\t\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\t\tif (cc === 32 || cc === 9) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (cc === 10) pos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn pos;\n\t\t};\n\t\tconst eatUntil = chars => {\n\t\t\tconst charCodes = Array.from({ length: chars.length }, (_, i) =>\n\t\t\t\tchars.charCodeAt(i)\n\t\t\t);\n\t\t\tconst arr = Array.from(\n\t\t\t\t{ length: charCodes.reduce((a, b) => Math.max(a, b), 0) + 1 },\n\t\t\t\t() => false\n\t\t\t);\n\t\t\tcharCodes.forEach(cc => (arr[cc] = true));\n\t\t\treturn (input, pos) => {\n\t\t\t\tfor (;;) {\n\t\t\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\t\t\tif (cc < arr.length && arr[cc]) {\n\t\t\t\t\t\treturn pos;\n\t\t\t\t\t}\n\t\t\t\t\tpos++;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tconst eatText = (input, pos, eater) => {\n\t\t\tlet text = \"\";\n\t\t\tfor (;;) {\n\t\t\t\tif (input.charCodeAt(pos) === CC_SLASH) {\n\t\t\t\t\tconst newPos = walkCssTokens.eatComments(input, pos);\n\t\t\t\t\tif (pos !== newPos) {\n\t\t\t\t\t\tpos = newPos;\n\t\t\t\t\t\tif (pos === input.length) break;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext += \"/\";\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tif (pos === input.length) break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst newPos = eater(input, pos);\n\t\t\t\tif (pos !== newPos) {\n\t\t\t\t\ttext += input.slice(pos, newPos);\n\t\t\t\t\tpos = newPos;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (pos === input.length) break;\n\t\t\t}\n\t\t\treturn [pos, text.trimRight()];\n\t\t};\n\t\tconst eatExportName = eatUntil(\":};/\");\n\t\tconst eatExportValue = eatUntil(\"};/\");\n\t\tconst parseExports = (input, pos) => {\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\tif (cc !== CC_LEFT_CURLY)\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Unexpected ${input[pos]} at ${pos} during parsing of ':export' (expected '{')`\n\t\t\t\t);\n\t\t\tpos++;\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tfor (;;) {\n\t\t\t\tif (input.charCodeAt(pos) === CC_RIGHT_CURLY) break;\n\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tlet start = pos;\n\t\t\t\tlet name;\n\t\t\t\t[pos, name] = eatText(input, pos, eatExportName);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tif (input.charCodeAt(pos) !== CC_COLON) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Unexpected ${input[pos]} at ${pos} during parsing of export name in ':export' (expected ':')`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tpos++;\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tlet value;\n\t\t\t\t[pos, value] = eatText(input, pos, eatExportValue);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\t\tif (cc === CC_SEMICOLON) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t} else if (cc !== CC_RIGHT_CURLY) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Unexpected ${input[pos]} at ${pos} during parsing of export value in ':export' (expected ';' or '}')`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconst dep = new CssExportDependency(name, value);\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(pos);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t}\n\t\t\tpos++;\n\t\t\tif (pos === input.length) return pos;\n\t\t\tpos = eatWhiteLine(input, pos);\n\t\t\treturn pos;\n\t\t};\n\t\tconst eatPropertyName = eatUntil(\":{};\");\n\t\tconst processLocalDeclaration = (input, pos) => {\n\t\t\tmodeData = undefined;\n\t\t\tconst start = pos;\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tconst propertyNameStart = pos;\n\t\t\tconst [propertyNameEnd, propertyName] = eatText(\n\t\t\t\tinput,\n\t\t\t\tpos,\n\t\t\t\teatPropertyName\n\t\t\t);\n\t\t\tif (input.charCodeAt(propertyNameEnd) !== CC_COLON) return start;\n\t\t\tpos = propertyNameEnd + 1;\n\t\t\tif (propertyName.startsWith(\"--\")) {\n\t\t\t\t// CSS Variable\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(propertyNameStart);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(propertyNameEnd);\n\t\t\t\tconst name = propertyName.slice(2);\n\t\t\t\tconst dep = new CssLocalIdentifierDependency(\n\t\t\t\t\tname,\n\t\t\t\t\t[propertyNameStart, propertyNameEnd],\n\t\t\t\t\t\"--\"\n\t\t\t\t);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t\tdeclaredCssVariables.add(name);\n\t\t\t} else if (\n\t\t\t\tpropertyName === \"animation-name\" ||\n\t\t\t\tpropertyName === \"animation\"\n\t\t\t) {\n\t\t\t\tmodeData = \"animation\";\n\t\t\t\tlastIdentifier = undefined;\n\t\t\t}\n\t\t\treturn pos;\n\t\t};\n\t\tconst processDeclarationValueDone = (input, pos) => {\n\t\t\tif (modeData === \"animation\" && lastIdentifier) {\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(lastIdentifier[0]);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(lastIdentifier[1]);\n\t\t\t\tconst name = input.slice(lastIdentifier[0], lastIdentifier[1]);\n\t\t\t\tconst dep = new CssSelfLocalIdentifierDependency(name, lastIdentifier);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t}\n\t\t};\n\t\tconst eatKeyframes = eatUntil(\"{};/\");\n\t\tconst eatNameInVar = eatUntil(\",)};/\");\n\t\twalkCssTokens(source, {\n\t\t\tisSelector: () => {\n\t\t\t\treturn mode !== CSS_MODE_IN_RULE && mode !== CSS_MODE_IN_LOCAL_RULE;\n\t\t\t},\n\t\t\turl: (input, start, end, contentStart, contentEnd) => {\n\t\t\t\tconst value = cssUnescape(input.slice(contentStart, contentEnd));\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_URL: {\n\t\t\t\t\t\tmodeData.url = value;\n\t\t\t\t\t\tmode = CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS:\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_MEDIA:\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Unexpected ${input.slice(\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t)} at ${start} during ${explainMode(mode)}`\n\t\t\t\t\t\t);\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tconst dep = new CssUrlDependency(value, [start, end], \"url\");\n\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\tmodule.addCodeGenerationDependency(dep);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tstring: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_URL: {\n\t\t\t\t\t\tmodeData.url = cssUnescape(input.slice(start + 1, end - 1));\n\t\t\t\t\t\tmode = CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tatKeyword: (input, start, end) => {\n\t\t\t\tconst name = input.slice(start, end);\n\t\t\t\tif (name === \"@namespace\") {\n\t\t\t\t\tthrow new Error(\"@namespace is not supported in bundled CSS\");\n\t\t\t\t}\n\t\t\t\tif (name === \"@import\") {\n\t\t\t\t\tif (mode !== CSS_MODE_TOP_LEVEL) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Unexpected @import at ${start} during ${explainMode(mode)}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tmode = CSS_MODE_AT_IMPORT_EXPECT_URL;\n\t\t\t\t\tmodePos = end;\n\t\t\t\t\tmodeData = {\n\t\t\t\t\t\tstart: start,\n\t\t\t\t\t\turl: undefined,\n\t\t\t\t\t\tsupports: undefined\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (name === \"@keyframes\") {\n\t\t\t\t\tlet pos = end;\n\t\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tconst [newPos, name] = eatText(input, pos, eatKeyframes);\n\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(pos);\n\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(newPos);\n\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [pos, newPos]);\n\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\tpos = newPos;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tif (input.charCodeAt(pos) !== CC_LEFT_CURLY) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Unexpected ${input[pos]} at ${pos} during parsing of @keyframes (expected '{')`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tmode = CSS_MODE_IN_LOCAL_RULE;\n\t\t\t\t\tmodeNestingLevel = 1;\n\t\t\t\t\treturn pos + 1;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tsemicolon: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_URL:\n\t\t\t\t\t\tthrow new Error(`Expected URL for @import at ${start}`);\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_MEDIA:\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS: {\n\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(modeData.start);\n\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\tend = eatWhiteLine(input, end);\n\t\t\t\t\t\tconst media = input.slice(modePos, start).trim();\n\t\t\t\t\t\tconst dep = new CssImportDependency(\n\t\t\t\t\t\t\tmodeData.url,\n\t\t\t\t\t\t\t[modeData.start, end],\n\t\t\t\t\t\t\tmodeData.supports,\n\t\t\t\t\t\t\tmedia\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE: {\n\t\t\t\t\t\tprocessDeclarationValueDone(input, start);\n\t\t\t\t\t\treturn processLocalDeclaration(input, end);\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_IN_RULE: {\n\t\t\t\t\t\treturn end;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmode = CSS_MODE_TOP_LEVEL;\n\t\t\t\tmodeData = undefined;\n\t\t\t\tsingleClassSelector = undefined;\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tleftCurlyBracket: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL:\n\t\t\t\t\t\tmode = isTopLevelLocal()\n\t\t\t\t\t\t\t? CSS_MODE_IN_LOCAL_RULE\n\t\t\t\t\t\t\t: CSS_MODE_IN_RULE;\n\t\t\t\t\t\tmodeNestingLevel = 1;\n\t\t\t\t\t\tif (mode === CSS_MODE_IN_LOCAL_RULE)\n\t\t\t\t\t\t\treturn processLocalDeclaration(input, end);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CSS_MODE_IN_RULE:\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE:\n\t\t\t\t\t\tmodeNestingLevel++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\trightCurlyBracket: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE:\n\t\t\t\t\t\tprocessDeclarationValueDone(input, start);\n\t\t\t\t\t/* falls through */\n\t\t\t\t\tcase CSS_MODE_IN_RULE:\n\t\t\t\t\t\tif (--modeNestingLevel === 0) {\n\t\t\t\t\t\t\tmode = CSS_MODE_TOP_LEVEL;\n\t\t\t\t\t\t\tmodeData = undefined;\n\t\t\t\t\t\t\tsingleClassSelector = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tid: (input, start, end) => {\n\t\t\t\tsingleClassSelector = false;\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL:\n\t\t\t\t\t\tif (isTopLevelLocal()) {\n\t\t\t\t\t\t\tconst name = input.slice(start + 1, end);\n\t\t\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [\n\t\t\t\t\t\t\t\tstart + 1,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tidentifier: (input, start, end) => {\n\t\t\t\tsingleClassSelector = false;\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE:\n\t\t\t\t\t\tif (modeData === \"animation\") {\n\t\t\t\t\t\t\tlastIdentifier = [start, end];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tclass: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tif (isTopLevelLocal()) {\n\t\t\t\t\t\t\tconst name = input.slice(start + 1, end);\n\t\t\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [\n\t\t\t\t\t\t\t\tstart + 1,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t\tif (singleClassSelector === undefined) singleClassSelector = name;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsingleClassSelector = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tleftParenthesis: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tmodeStack.push(false);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\trightParenthesis: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tconst newModeData = modeStack.pop();\n\t\t\t\t\t\tif (newModeData !== false) {\n\t\t\t\t\t\t\tmodeData = newModeData;\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tpseudoClass: (input, start, end) => {\n\t\t\t\tsingleClassSelector = false;\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tconst name = input.slice(start, end);\n\t\t\t\t\t\tif (this.allowModeSwitch && name === \":global\") {\n\t\t\t\t\t\t\tmodeData = \"global\";\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t} else if (this.allowModeSwitch && name === \":local\") {\n\t\t\t\t\t\t\tmodeData = \"local\";\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t} else if (this.allowPseudoBlocks && name === \":export\") {\n\t\t\t\t\t\t\tconst pos = parseExports(input, end);\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, pos]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t\treturn pos;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tpseudoFunction: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tconst name = input.slice(start, end - 1);\n\t\t\t\t\t\tif (this.allowModeSwitch && name === \":global\") {\n\t\t\t\t\t\t\tmodeStack.push(modeData);\n\t\t\t\t\t\t\tmodeData = \"global\";\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t} else if (this.allowModeSwitch && name === \":local\") {\n\t\t\t\t\t\t\tmodeStack.push(modeData);\n\t\t\t\t\t\t\tmodeData = \"local\";\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmodeStack.push(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tfunction: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE: {\n\t\t\t\t\t\tconst name = input.slice(start, end - 1);\n\t\t\t\t\t\tif (name === \"var\") {\n\t\t\t\t\t\t\tlet pos = walkCssTokens.eatWhitespaceAndComments(input, end);\n\t\t\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\t\t\tconst [newPos, name] = eatText(input, pos, eatNameInVar);\n\t\t\t\t\t\t\tif (!name.startsWith(\"--\")) return end;\n\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(pos);\n\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(newPos);\n\t\t\t\t\t\t\tconst dep = new CssSelfLocalIdentifierDependency(\n\t\t\t\t\t\t\t\tname.slice(2),\n\t\t\t\t\t\t\t\t[pos, newPos],\n\t\t\t\t\t\t\t\t\"--\",\n\t\t\t\t\t\t\t\tdeclaredCssVariables\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t\treturn newPos;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tcomma: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL:\n\t\t\t\t\t\tmodeData = undefined;\n\t\t\t\t\t\tmodeStack.length = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE:\n\t\t\t\t\t\tprocessDeclarationValueDone(input, start);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t}\n\t\t});\n\n\t\tmodule.buildInfo.strict = true;\n\t\tmodule.buildMeta.exportsType = \"namespace\";\n\t\tmodule.addDependency(new StaticExportsDependency([], true));\n\t\treturn state;\n\t}\n}\n\nmodule.exports = CssParser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}