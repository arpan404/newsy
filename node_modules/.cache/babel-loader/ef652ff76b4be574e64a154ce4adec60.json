{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst NullDependency = require(\"./NullDependency\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../Dependency\")} Dependency */\n\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n\n/** @typedef {import(\"../DependencyTemplate\").CssDependencyTemplateContext} DependencyTemplateContext */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n\nclass CssLocalIdentifierDependency extends NullDependency {\n  /**\n   * @param {string} name name\n   * @param {[number, number]} range range\n   * @param {string=} prefix prefix\n   */\n  constructor(name, range) {\n    let prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n    super();\n    this.name = name;\n    this.range = range;\n    this.prefix = prefix;\n  }\n\n  get type() {\n    return \"css local identifier\";\n  }\n  /**\n   * Returns the exported names\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {ExportsSpec | undefined} export names\n   */\n\n\n  getExports(moduleGraph) {\n    const name = this.name;\n    return {\n      exports: [{\n        name,\n        canMangle: true\n      }],\n      dependencies: undefined\n    };\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.name);\n    write(this.range);\n    write(this.prefix);\n    super.serialize(context);\n  }\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.name = read();\n    this.range = read();\n    this.prefix = read();\n    super.deserialize(context);\n  }\n\n}\n\nconst escapeCssIdentifier = (str, omitUnderscore) => {\n  const escaped = `${str}`.replace( // cspell:word uffff\n  /[^a-zA-Z0-9_\\u0081-\\uffff-]/g, s => `\\\\${s}`);\n  return !omitUnderscore && /^(?!--)[0-9-]/.test(escaped) ? `_${escaped}` : escaped;\n};\n\nCssLocalIdentifierDependency.Template = class CssLocalIdentifierDependencyTemplate extends NullDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, _ref) {\n    let {\n      module,\n      moduleGraph,\n      chunkGraph,\n      runtime,\n      runtimeTemplate,\n      cssExports\n    } = _ref;\n    const dep =\n    /** @type {CssLocalIdentifierDependency} */\n    dependency;\n    const used = moduleGraph.getExportInfo(module, dep.name).getUsedName(dep.name, runtime);\n    const moduleId = chunkGraph.getModuleId(module);\n    const identifier = dep.prefix + (runtimeTemplate.outputOptions.uniqueName ? runtimeTemplate.outputOptions.uniqueName + \"-\" : \"\") + (used ? moduleId + \"-\" + used : \"-\");\n    source.replace(dep.range[0], dep.range[1] - 1, escapeCssIdentifier(identifier, dep.prefix));\n    if (used) cssExports.set(used, identifier);\n  }\n\n};\nmakeSerializable(CssLocalIdentifierDependency, \"webpack/lib/dependencies/CssLocalIdentifierDependency\");\nmodule.exports = CssLocalIdentifierDependency;","map":{"version":3,"names":["makeSerializable","require","NullDependency","CssLocalIdentifierDependency","constructor","name","range","prefix","type","getExports","moduleGraph","exports","canMangle","dependencies","undefined","serialize","context","write","deserialize","read","escapeCssIdentifier","str","omitUnderscore","escaped","replace","s","test","Template","CssLocalIdentifierDependencyTemplate","apply","dependency","source","module","chunkGraph","runtime","runtimeTemplate","cssExports","dep","used","getExportInfo","getUsedName","moduleId","getModuleId","identifier","outputOptions","uniqueName","set"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/dependencies/CssLocalIdentifierDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst NullDependency = require(\"./NullDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n/** @typedef {import(\"../DependencyTemplate\").CssDependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\nclass CssLocalIdentifierDependency extends NullDependency {\n\t/**\n\t * @param {string} name name\n\t * @param {[number, number]} range range\n\t * @param {string=} prefix prefix\n\t */\n\tconstructor(name, range, prefix = \"\") {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.range = range;\n\t\tthis.prefix = prefix;\n\t}\n\n\tget type() {\n\t\treturn \"css local identifier\";\n\t}\n\n\t/**\n\t * Returns the exported names\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {ExportsSpec | undefined} export names\n\t */\n\tgetExports(moduleGraph) {\n\t\tconst name = this.name;\n\t\treturn {\n\t\t\texports: [\n\t\t\t\t{\n\t\t\t\t\tname,\n\t\t\t\t\tcanMangle: true\n\t\t\t\t}\n\t\t\t],\n\t\t\tdependencies: undefined\n\t\t};\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.name);\n\t\twrite(this.range);\n\t\twrite(this.prefix);\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.name = read();\n\t\tthis.range = read();\n\t\tthis.prefix = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nconst escapeCssIdentifier = (str, omitUnderscore) => {\n\tconst escaped = `${str}`.replace(\n\t\t// cspell:word uffff\n\t\t/[^a-zA-Z0-9_\\u0081-\\uffff-]/g,\n\t\ts => `\\\\${s}`\n\t);\n\treturn !omitUnderscore && /^(?!--)[0-9-]/.test(escaped)\n\t\t? `_${escaped}`\n\t\t: escaped;\n};\n\nCssLocalIdentifierDependency.Template = class CssLocalIdentifierDependencyTemplate extends (\n\tNullDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(\n\t\tdependency,\n\t\tsource,\n\t\t{ module, moduleGraph, chunkGraph, runtime, runtimeTemplate, cssExports }\n\t) {\n\t\tconst dep = /** @type {CssLocalIdentifierDependency} */ (dependency);\n\t\tconst used = moduleGraph\n\t\t\t.getExportInfo(module, dep.name)\n\t\t\t.getUsedName(dep.name, runtime);\n\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\tconst identifier =\n\t\t\tdep.prefix +\n\t\t\t(runtimeTemplate.outputOptions.uniqueName\n\t\t\t\t? runtimeTemplate.outputOptions.uniqueName + \"-\"\n\t\t\t\t: \"\") +\n\t\t\t(used ? moduleId + \"-\" + used : \"-\");\n\t\tsource.replace(\n\t\t\tdep.range[0],\n\t\t\tdep.range[1] - 1,\n\t\t\tescapeCssIdentifier(identifier, dep.prefix)\n\t\t);\n\t\tif (used) cssExports.set(used, identifier);\n\t}\n};\n\nmakeSerializable(\n\tCssLocalIdentifierDependency,\n\t\"webpack/lib/dependencies/CssLocalIdentifierDependency\"\n);\n\nmodule.exports = CssLocalIdentifierDependency;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}