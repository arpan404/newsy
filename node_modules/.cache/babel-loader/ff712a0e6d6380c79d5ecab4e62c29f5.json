{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  fileURLToPath\n} = require(\"url\");\n\nconst CommentCompilationWarning = require(\"../CommentCompilationWarning\");\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\n\nconst WebpackError = require(\"../WebpackError\");\n\nconst BasicEvaluatedExpression = require(\"../javascript/BasicEvaluatedExpression\");\n\nconst {\n  evaluateToIdentifier,\n  evaluateToString,\n  expressionIsUnsupported,\n  toConstantDependency\n} = require(\"../javascript/JavascriptParserHelpers\");\n\nconst CommonJsFullRequireDependency = require(\"./CommonJsFullRequireDependency\");\n\nconst CommonJsRequireContextDependency = require(\"./CommonJsRequireContextDependency\");\n\nconst CommonJsRequireDependency = require(\"./CommonJsRequireDependency\");\n\nconst ConstDependency = require(\"./ConstDependency\");\n\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\n\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\n\nconst {\n  getLocalModule\n} = require(\"./LocalModulesHelpers\");\n\nconst RequireHeaderDependency = require(\"./RequireHeaderDependency\");\n\nconst RequireResolveContextDependency = require(\"./RequireResolveContextDependency\");\n\nconst RequireResolveDependency = require(\"./RequireResolveDependency\");\n\nconst RequireResolveHeaderDependency = require(\"./RequireResolveHeaderDependency\");\n/** @typedef {import(\"estree\").CallExpression} CallExpressionNode */\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n\n\nconst createRequireSpecifierTag = Symbol(\"createRequire\");\nconst createdRequireIdentifierTag = Symbol(\"createRequire()\");\n\nclass CommonJsImportsParserPlugin {\n  /**\n   * @param {JavascriptParserOptions} options parser options\n   */\n  constructor(options) {\n    this.options = options;\n  }\n\n  apply(parser) {\n    const options = this.options;\n\n    const getContext = () => {\n      if (parser.currentTagData) {\n        const {\n          context\n        } = parser.currentTagData;\n        return context;\n      }\n    }; //#region metadata\n\n\n    const tapRequireExpression = (expression, getMembers) => {\n      parser.hooks.typeof.for(expression).tap(\"CommonJsImportsParserPlugin\", toConstantDependency(parser, JSON.stringify(\"function\")));\n      parser.hooks.evaluateTypeof.for(expression).tap(\"CommonJsImportsParserPlugin\", evaluateToString(\"function\"));\n      parser.hooks.evaluateIdentifier.for(expression).tap(\"CommonJsImportsParserPlugin\", evaluateToIdentifier(expression, \"require\", getMembers, true));\n    };\n\n    const tapRequireExpressionTag = tag => {\n      parser.hooks.typeof.for(tag).tap(\"CommonJsImportsParserPlugin\", toConstantDependency(parser, JSON.stringify(\"function\")));\n      parser.hooks.evaluateTypeof.for(tag).tap(\"CommonJsImportsParserPlugin\", evaluateToString(\"function\"));\n    };\n\n    tapRequireExpression(\"require\", () => []);\n    tapRequireExpression(\"require.resolve\", () => [\"resolve\"]);\n    tapRequireExpression(\"require.resolveWeak\", () => [\"resolveWeak\"]); //#endregion\n    // Weird stuff //\n\n    parser.hooks.assign.for(\"require\").tap(\"CommonJsImportsParserPlugin\", expr => {\n      // to not leak to global \"require\", we need to define a local require here.\n      const dep = new ConstDependency(\"var require;\", 0);\n      dep.loc = expr.loc;\n      parser.state.module.addPresentationalDependency(dep);\n      return true;\n    }); //#region Unsupported\n\n    parser.hooks.expression.for(\"require.main\").tap(\"CommonJsImportsParserPlugin\", expressionIsUnsupported(parser, \"require.main is not supported by webpack.\"));\n    parser.hooks.call.for(\"require.main.require\").tap(\"CommonJsImportsParserPlugin\", expressionIsUnsupported(parser, \"require.main.require is not supported by webpack.\"));\n    parser.hooks.expression.for(\"module.parent.require\").tap(\"CommonJsImportsParserPlugin\", expressionIsUnsupported(parser, \"module.parent.require is not supported by webpack.\"));\n    parser.hooks.call.for(\"module.parent.require\").tap(\"CommonJsImportsParserPlugin\", expressionIsUnsupported(parser, \"module.parent.require is not supported by webpack.\")); //#endregion\n    //#region Renaming\n\n    const defineUndefined = expr => {\n      // To avoid \"not defined\" error, replace the value with undefined\n      const dep = new ConstDependency(\"undefined\", expr.range);\n      dep.loc = expr.loc;\n      parser.state.module.addPresentationalDependency(dep);\n      return false;\n    };\n\n    parser.hooks.canRename.for(\"require\").tap(\"CommonJsImportsParserPlugin\", () => true);\n    parser.hooks.rename.for(\"require\").tap(\"CommonJsImportsParserPlugin\", defineUndefined); //#endregion\n    //#region Inspection\n\n    const requireCache = toConstantDependency(parser, RuntimeGlobals.moduleCache, [RuntimeGlobals.moduleCache, RuntimeGlobals.moduleId, RuntimeGlobals.moduleLoaded]);\n    parser.hooks.expression.for(\"require.cache\").tap(\"CommonJsImportsParserPlugin\", requireCache); //#endregion\n    //#region Require as expression\n\n    const requireAsExpressionHandler = expr => {\n      const dep = new CommonJsRequireContextDependency({\n        request: options.unknownContextRequest,\n        recursive: options.unknownContextRecursive,\n        regExp: options.unknownContextRegExp,\n        mode: \"sync\"\n      }, expr.range, undefined, parser.scope.inShorthand, getContext());\n      dep.critical = options.unknownContextCritical && \"require function is used in a way in which dependencies cannot be statically extracted\";\n      dep.loc = expr.loc;\n      dep.optional = !!parser.scope.inTry;\n      parser.state.current.addDependency(dep);\n      return true;\n    };\n\n    parser.hooks.expression.for(\"require\").tap(\"CommonJsImportsParserPlugin\", requireAsExpressionHandler); //#endregion\n    //#region Require\n\n    const processRequireItem = (expr, param) => {\n      if (param.isString()) {\n        const dep = new CommonJsRequireDependency(param.string, param.range, getContext());\n        dep.loc = expr.loc;\n        dep.optional = !!parser.scope.inTry;\n        parser.state.current.addDependency(dep);\n        return true;\n      }\n    };\n\n    const processRequireContext = (expr, param) => {\n      const dep = ContextDependencyHelpers.create(CommonJsRequireContextDependency, expr.range, param, expr, options, {\n        category: \"commonjs\"\n      }, parser, undefined, getContext());\n      if (!dep) return;\n      dep.loc = expr.loc;\n      dep.optional = !!parser.scope.inTry;\n      parser.state.current.addDependency(dep);\n      return true;\n    };\n\n    const createRequireHandler = callNew => expr => {\n      if (options.commonjsMagicComments) {\n        const {\n          options: requireOptions,\n          errors: commentErrors\n        } = parser.parseCommentOptions(expr.range);\n\n        if (commentErrors) {\n          for (const e of commentErrors) {\n            const {\n              comment\n            } = e;\n            parser.state.module.addWarning(new CommentCompilationWarning(`Compilation error while processing magic comment(-s): /*${comment.value}*/: ${e.message}`, comment.loc));\n          }\n        }\n\n        if (requireOptions) {\n          if (requireOptions.webpackIgnore !== undefined) {\n            if (typeof requireOptions.webpackIgnore !== \"boolean\") {\n              parser.state.module.addWarning(new UnsupportedFeatureWarning(`\\`webpackIgnore\\` expected a boolean, but received: ${requireOptions.webpackIgnore}.`, expr.loc));\n            } else {\n              // Do not instrument `require()` if `webpackIgnore` is `true`\n              if (requireOptions.webpackIgnore) {\n                return true;\n              }\n            }\n          }\n        }\n      }\n\n      if (expr.arguments.length !== 1) return;\n      let localModule;\n      const param = parser.evaluateExpression(expr.arguments[0]);\n\n      if (param.isConditional()) {\n        let isExpression = false;\n\n        for (const p of param.options) {\n          const result = processRequireItem(expr, p);\n\n          if (result === undefined) {\n            isExpression = true;\n          }\n        }\n\n        if (!isExpression) {\n          const dep = new RequireHeaderDependency(expr.callee.range);\n          dep.loc = expr.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return true;\n        }\n      }\n\n      if (param.isString() && (localModule = getLocalModule(parser.state, param.string))) {\n        localModule.flagUsed();\n        const dep = new LocalModuleDependency(localModule, expr.range, callNew);\n        dep.loc = expr.loc;\n        parser.state.module.addPresentationalDependency(dep);\n        return true;\n      } else {\n        const result = processRequireItem(expr, param);\n\n        if (result === undefined) {\n          processRequireContext(expr, param);\n        } else {\n          const dep = new RequireHeaderDependency(expr.callee.range);\n          dep.loc = expr.loc;\n          parser.state.module.addPresentationalDependency(dep);\n        }\n\n        return true;\n      }\n    };\n\n    parser.hooks.call.for(\"require\").tap(\"CommonJsImportsParserPlugin\", createRequireHandler(false));\n    parser.hooks.new.for(\"require\").tap(\"CommonJsImportsParserPlugin\", createRequireHandler(true));\n    parser.hooks.call.for(\"module.require\").tap(\"CommonJsImportsParserPlugin\", createRequireHandler(false));\n    parser.hooks.new.for(\"module.require\").tap(\"CommonJsImportsParserPlugin\", createRequireHandler(true)); //#endregion\n    //#region Require with property access\n\n    const chainHandler = (expr, calleeMembers, callExpr, members) => {\n      if (callExpr.arguments.length !== 1) return;\n      const param = parser.evaluateExpression(callExpr.arguments[0]);\n\n      if (param.isString() && !getLocalModule(parser.state, param.string)) {\n        const dep = new CommonJsFullRequireDependency(param.string, expr.range, members);\n        dep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n        dep.optional = !!parser.scope.inTry;\n        dep.loc = expr.loc;\n        parser.state.current.addDependency(dep);\n        return true;\n      }\n    };\n\n    const callChainHandler = (expr, calleeMembers, callExpr, members) => {\n      if (callExpr.arguments.length !== 1) return;\n      const param = parser.evaluateExpression(callExpr.arguments[0]);\n\n      if (param.isString() && !getLocalModule(parser.state, param.string)) {\n        const dep = new CommonJsFullRequireDependency(param.string, expr.callee.range, members);\n        dep.call = true;\n        dep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n        dep.optional = !!parser.scope.inTry;\n        dep.loc = expr.callee.loc;\n        parser.state.current.addDependency(dep);\n        parser.walkExpressions(expr.arguments);\n        return true;\n      }\n    };\n\n    parser.hooks.memberChainOfCallMemberChain.for(\"require\").tap(\"CommonJsImportsParserPlugin\", chainHandler);\n    parser.hooks.memberChainOfCallMemberChain.for(\"module.require\").tap(\"CommonJsImportsParserPlugin\", chainHandler);\n    parser.hooks.callMemberChainOfCallMemberChain.for(\"require\").tap(\"CommonJsImportsParserPlugin\", callChainHandler);\n    parser.hooks.callMemberChainOfCallMemberChain.for(\"module.require\").tap(\"CommonJsImportsParserPlugin\", callChainHandler); //#endregion\n    //#region Require.resolve\n\n    const processResolve = (expr, weak) => {\n      if (expr.arguments.length !== 1) return;\n      const param = parser.evaluateExpression(expr.arguments[0]);\n\n      if (param.isConditional()) {\n        for (const option of param.options) {\n          const result = processResolveItem(expr, option, weak);\n\n          if (result === undefined) {\n            processResolveContext(expr, option, weak);\n          }\n        }\n\n        const dep = new RequireResolveHeaderDependency(expr.callee.range);\n        dep.loc = expr.loc;\n        parser.state.module.addPresentationalDependency(dep);\n        return true;\n      } else {\n        const result = processResolveItem(expr, param, weak);\n\n        if (result === undefined) {\n          processResolveContext(expr, param, weak);\n        }\n\n        const dep = new RequireResolveHeaderDependency(expr.callee.range);\n        dep.loc = expr.loc;\n        parser.state.module.addPresentationalDependency(dep);\n        return true;\n      }\n    };\n\n    const processResolveItem = (expr, param, weak) => {\n      if (param.isString()) {\n        const dep = new RequireResolveDependency(param.string, param.range, getContext());\n        dep.loc = expr.loc;\n        dep.optional = !!parser.scope.inTry;\n        dep.weak = weak;\n        parser.state.current.addDependency(dep);\n        return true;\n      }\n    };\n\n    const processResolveContext = (expr, param, weak) => {\n      const dep = ContextDependencyHelpers.create(RequireResolveContextDependency, param.range, param, expr, options, {\n        category: \"commonjs\",\n        mode: weak ? \"weak\" : \"sync\"\n      }, parser, getContext());\n      if (!dep) return;\n      dep.loc = expr.loc;\n      dep.optional = !!parser.scope.inTry;\n      parser.state.current.addDependency(dep);\n      return true;\n    };\n\n    parser.hooks.call.for(\"require.resolve\").tap(\"CommonJsImportsParserPlugin\", expr => {\n      return processResolve(expr, false);\n    });\n    parser.hooks.call.for(\"require.resolveWeak\").tap(\"CommonJsImportsParserPlugin\", expr => {\n      return processResolve(expr, true);\n    }); //#endregion\n    //#region Create require\n\n    if (!options.createRequire) return;\n    let moduleName;\n    let specifierName;\n\n    if (options.createRequire === true) {\n      moduleName = \"module\";\n      specifierName = \"createRequire\";\n    } else {\n      const match = /^(.*) from (.*)$/.exec(options.createRequire);\n\n      if (match) {\n        [, specifierName, moduleName] = match;\n      }\n\n      if (!specifierName || !moduleName) {\n        const err = new WebpackError(`Parsing javascript parser option \"createRequire\" failed, got ${JSON.stringify(options.createRequire)}`);\n        err.details = 'Expected string in format \"createRequire from module\", where \"createRequire\" is specifier name and \"module\" name of the module';\n        throw err;\n      }\n    }\n\n    tapRequireExpressionTag(createdRequireIdentifierTag);\n    tapRequireExpressionTag(createRequireSpecifierTag);\n    parser.hooks.evaluateCallExpression.for(createRequireSpecifierTag).tap(\"CommonJsImportsParserPlugin\", expr => {\n      const context = parseCreateRequireArguments(expr);\n      if (context === undefined) return;\n      const ident = parser.evaluatedVariable({\n        tag: createdRequireIdentifierTag,\n        data: {\n          context\n        },\n        next: undefined\n      });\n      return new BasicEvaluatedExpression().setIdentifier(ident, ident, () => []).setSideEffects(false).setRange(expr.range);\n    });\n    parser.hooks.unhandledExpressionMemberChain.for(createdRequireIdentifierTag).tap(\"CommonJsImportsParserPlugin\", (expr, members) => {\n      return expressionIsUnsupported(parser, `createRequire().${members.join(\".\")} is not supported by webpack.`)(expr);\n    });\n    parser.hooks.canRename.for(createdRequireIdentifierTag).tap(\"CommonJsImportsParserPlugin\", () => true);\n    parser.hooks.canRename.for(createRequireSpecifierTag).tap(\"CommonJsImportsParserPlugin\", () => true);\n    parser.hooks.rename.for(createRequireSpecifierTag).tap(\"CommonJsImportsParserPlugin\", defineUndefined);\n    parser.hooks.expression.for(createdRequireIdentifierTag).tap(\"CommonJsImportsParserPlugin\", requireAsExpressionHandler);\n    parser.hooks.call.for(createdRequireIdentifierTag).tap(\"CommonJsImportsParserPlugin\", createRequireHandler(false));\n    /**\n     * @param {CallExpressionNode} expr call expression\n     * @returns {string} context\n     */\n\n    const parseCreateRequireArguments = expr => {\n      const args = expr.arguments;\n\n      if (args.length !== 1) {\n        const err = new WebpackError(\"module.createRequire supports only one argument.\");\n        err.loc = expr.loc;\n        parser.state.module.addWarning(err);\n        return;\n      }\n\n      const arg = args[0];\n      const evaluated = parser.evaluateExpression(arg);\n\n      if (!evaluated.isString()) {\n        const err = new WebpackError(\"module.createRequire failed parsing argument.\");\n        err.loc = arg.loc;\n        parser.state.module.addWarning(err);\n        return;\n      }\n\n      const ctx = evaluated.string.startsWith(\"file://\") ? fileURLToPath(evaluated.string) : evaluated.string; // argument always should be a filename\n\n      return ctx.slice(0, ctx.lastIndexOf(ctx.startsWith(\"/\") ? \"/\" : \"\\\\\"));\n    };\n\n    parser.hooks.import.tap({\n      name: \"CommonJsImportsParserPlugin\",\n      stage: -10\n    }, (statement, source) => {\n      if (source !== moduleName || statement.specifiers.length !== 1 || statement.specifiers[0].type !== \"ImportSpecifier\" || statement.specifiers[0].imported.type !== \"Identifier\" || statement.specifiers[0].imported.name !== specifierName) return; // clear for 'import { createRequire as x } from \"module\"'\n      // if any other specifier was used import module\n\n      const clearDep = new ConstDependency(parser.isAsiPosition(statement.range[0]) ? \";\" : \"\", statement.range);\n      clearDep.loc = statement.loc;\n      parser.state.module.addPresentationalDependency(clearDep);\n      parser.unsetAsiPosition(statement.range[1]);\n      return true;\n    });\n    parser.hooks.importSpecifier.tap({\n      name: \"CommonJsImportsParserPlugin\",\n      stage: -10\n    }, (statement, source, id, name) => {\n      if (source !== moduleName || id !== specifierName) return;\n      parser.tagVariable(name, createRequireSpecifierTag);\n      return true;\n    });\n    parser.hooks.preDeclarator.tap(\"CommonJsImportsParserPlugin\", declarator => {\n      if (declarator.id.type !== \"Identifier\" || !declarator.init || declarator.init.type !== \"CallExpression\" || declarator.init.callee.type !== \"Identifier\") return;\n      const variableInfo = parser.getVariableInfo(declarator.init.callee.name);\n\n      if (variableInfo && variableInfo.tagInfo && variableInfo.tagInfo.tag === createRequireSpecifierTag) {\n        const context = parseCreateRequireArguments(declarator.init);\n        if (context === undefined) return;\n        parser.tagVariable(declarator.id.name, createdRequireIdentifierTag, {\n          name: declarator.id.name,\n          context\n        });\n        return true;\n      }\n    });\n    parser.hooks.memberChainOfCallMemberChain.for(createRequireSpecifierTag).tap(\"CommonJsImportsParserPlugin\", (expr, calleeMembers, callExpr, members) => {\n      if (calleeMembers.length !== 0 || members.length !== 1 || members[0] !== \"cache\") return; // createRequire().cache\n\n      const context = parseCreateRequireArguments(callExpr);\n      if (context === undefined) return;\n      return requireCache(expr);\n    });\n    parser.hooks.callMemberChainOfCallMemberChain.for(createRequireSpecifierTag).tap(\"CommonJsImportsParserPlugin\", (expr, calleeMembers, innerCallExpression, members) => {\n      if (calleeMembers.length !== 0 || members.length !== 1 || members[0] !== \"resolve\") return; // createRequire().resolve()\n\n      return processResolve(expr, false);\n    });\n    parser.hooks.expressionMemberChain.for(createdRequireIdentifierTag).tap(\"CommonJsImportsParserPlugin\", (expr, members) => {\n      // require.cache\n      if (members.length === 1 && members[0] === \"cache\") {\n        return requireCache(expr);\n      }\n    });\n    parser.hooks.callMemberChain.for(createdRequireIdentifierTag).tap(\"CommonJsImportsParserPlugin\", (expr, members) => {\n      // require.resolve()\n      if (members.length === 1 && members[0] === \"resolve\") {\n        return processResolve(expr, false);\n      }\n    });\n    parser.hooks.call.for(createRequireSpecifierTag).tap(\"CommonJsImportsParserPlugin\", expr => {\n      const clearDep = new ConstDependency(\"/* createRequire() */ undefined\", expr.range);\n      clearDep.loc = expr.loc;\n      parser.state.module.addPresentationalDependency(clearDep);\n      return true;\n    }); //#endregion\n  }\n\n}\n\nmodule.exports = CommonJsImportsParserPlugin;","map":{"version":3,"names":["fileURLToPath","require","CommentCompilationWarning","RuntimeGlobals","UnsupportedFeatureWarning","WebpackError","BasicEvaluatedExpression","evaluateToIdentifier","evaluateToString","expressionIsUnsupported","toConstantDependency","CommonJsFullRequireDependency","CommonJsRequireContextDependency","CommonJsRequireDependency","ConstDependency","ContextDependencyHelpers","LocalModuleDependency","getLocalModule","RequireHeaderDependency","RequireResolveContextDependency","RequireResolveDependency","RequireResolveHeaderDependency","createRequireSpecifierTag","Symbol","createdRequireIdentifierTag","CommonJsImportsParserPlugin","constructor","options","apply","parser","getContext","currentTagData","context","tapRequireExpression","expression","getMembers","hooks","typeof","for","tap","JSON","stringify","evaluateTypeof","evaluateIdentifier","tapRequireExpressionTag","tag","assign","expr","dep","loc","state","module","addPresentationalDependency","call","defineUndefined","range","canRename","rename","requireCache","moduleCache","moduleId","moduleLoaded","requireAsExpressionHandler","request","unknownContextRequest","recursive","unknownContextRecursive","regExp","unknownContextRegExp","mode","undefined","scope","inShorthand","critical","unknownContextCritical","optional","inTry","current","addDependency","processRequireItem","param","isString","string","processRequireContext","create","category","createRequireHandler","callNew","commonjsMagicComments","requireOptions","errors","commentErrors","parseCommentOptions","e","comment","addWarning","value","message","webpackIgnore","arguments","length","localModule","evaluateExpression","isConditional","isExpression","p","result","callee","flagUsed","new","chainHandler","calleeMembers","callExpr","members","asiSafe","isAsiPosition","callChainHandler","walkExpressions","memberChainOfCallMemberChain","callMemberChainOfCallMemberChain","processResolve","weak","option","processResolveItem","processResolveContext","createRequire","moduleName","specifierName","match","exec","err","details","evaluateCallExpression","parseCreateRequireArguments","ident","evaluatedVariable","data","next","setIdentifier","setSideEffects","setRange","unhandledExpressionMemberChain","join","args","arg","evaluated","ctx","startsWith","slice","lastIndexOf","import","name","stage","statement","source","specifiers","type","imported","clearDep","unsetAsiPosition","importSpecifier","id","tagVariable","preDeclarator","declarator","init","variableInfo","getVariableInfo","tagInfo","innerCallExpression","expressionMemberChain","callMemberChain","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/dependencies/CommonJsImportsParserPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { fileURLToPath } = require(\"url\");\nconst CommentCompilationWarning = require(\"../CommentCompilationWarning\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\nconst WebpackError = require(\"../WebpackError\");\nconst BasicEvaluatedExpression = require(\"../javascript/BasicEvaluatedExpression\");\nconst {\n\tevaluateToIdentifier,\n\tevaluateToString,\n\texpressionIsUnsupported,\n\ttoConstantDependency\n} = require(\"../javascript/JavascriptParserHelpers\");\nconst CommonJsFullRequireDependency = require(\"./CommonJsFullRequireDependency\");\nconst CommonJsRequireContextDependency = require(\"./CommonJsRequireContextDependency\");\nconst CommonJsRequireDependency = require(\"./CommonJsRequireDependency\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\nconst { getLocalModule } = require(\"./LocalModulesHelpers\");\nconst RequireHeaderDependency = require(\"./RequireHeaderDependency\");\nconst RequireResolveContextDependency = require(\"./RequireResolveContextDependency\");\nconst RequireResolveDependency = require(\"./RequireResolveDependency\");\nconst RequireResolveHeaderDependency = require(\"./RequireResolveHeaderDependency\");\n\n/** @typedef {import(\"estree\").CallExpression} CallExpressionNode */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n\nconst createRequireSpecifierTag = Symbol(\"createRequire\");\nconst createdRequireIdentifierTag = Symbol(\"createRequire()\");\n\nclass CommonJsImportsParserPlugin {\n\t/**\n\t * @param {JavascriptParserOptions} options parser options\n\t */\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(parser) {\n\t\tconst options = this.options;\n\n\t\tconst getContext = () => {\n\t\t\tif (parser.currentTagData) {\n\t\t\t\tconst { context } = parser.currentTagData;\n\t\t\t\treturn context;\n\t\t\t}\n\t\t};\n\n\t\t//#region metadata\n\t\tconst tapRequireExpression = (expression, getMembers) => {\n\t\t\tparser.hooks.typeof\n\t\t\t\t.for(expression)\n\t\t\t\t.tap(\n\t\t\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"function\"))\n\t\t\t\t);\n\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t.for(expression)\n\t\t\t\t.tap(\"CommonJsImportsParserPlugin\", evaluateToString(\"function\"));\n\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t.for(expression)\n\t\t\t\t.tap(\n\t\t\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\t\t\tevaluateToIdentifier(expression, \"require\", getMembers, true)\n\t\t\t\t);\n\t\t};\n\t\tconst tapRequireExpressionTag = tag => {\n\t\t\tparser.hooks.typeof\n\t\t\t\t.for(tag)\n\t\t\t\t.tap(\n\t\t\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"function\"))\n\t\t\t\t);\n\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t.for(tag)\n\t\t\t\t.tap(\"CommonJsImportsParserPlugin\", evaluateToString(\"function\"));\n\t\t};\n\t\ttapRequireExpression(\"require\", () => []);\n\t\ttapRequireExpression(\"require.resolve\", () => [\"resolve\"]);\n\t\ttapRequireExpression(\"require.resolveWeak\", () => [\"resolveWeak\"]);\n\t\t//#endregion\n\n\t\t// Weird stuff //\n\t\tparser.hooks.assign\n\t\t\t.for(\"require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", expr => {\n\t\t\t\t// to not leak to global \"require\", we need to define a local require here.\n\t\t\t\tconst dep = new ConstDependency(\"var require;\", 0);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\treturn true;\n\t\t\t});\n\n\t\t//#region Unsupported\n\t\tparser.hooks.expression\n\t\t\t.for(\"require.main\")\n\t\t\t.tap(\n\t\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\t\texpressionIsUnsupported(\n\t\t\t\t\tparser,\n\t\t\t\t\t\"require.main is not supported by webpack.\"\n\t\t\t\t)\n\t\t\t);\n\t\tparser.hooks.call\n\t\t\t.for(\"require.main.require\")\n\t\t\t.tap(\n\t\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\t\texpressionIsUnsupported(\n\t\t\t\t\tparser,\n\t\t\t\t\t\"require.main.require is not supported by webpack.\"\n\t\t\t\t)\n\t\t\t);\n\t\tparser.hooks.expression\n\t\t\t.for(\"module.parent.require\")\n\t\t\t.tap(\n\t\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\t\texpressionIsUnsupported(\n\t\t\t\t\tparser,\n\t\t\t\t\t\"module.parent.require is not supported by webpack.\"\n\t\t\t\t)\n\t\t\t);\n\t\tparser.hooks.call\n\t\t\t.for(\"module.parent.require\")\n\t\t\t.tap(\n\t\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\t\texpressionIsUnsupported(\n\t\t\t\t\tparser,\n\t\t\t\t\t\"module.parent.require is not supported by webpack.\"\n\t\t\t\t)\n\t\t\t);\n\t\t//#endregion\n\n\t\t//#region Renaming\n\t\tconst defineUndefined = expr => {\n\t\t\t// To avoid \"not defined\" error, replace the value with undefined\n\t\t\tconst dep = new ConstDependency(\"undefined\", expr.range);\n\t\t\tdep.loc = expr.loc;\n\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\treturn false;\n\t\t};\n\t\tparser.hooks.canRename\n\t\t\t.for(\"require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", () => true);\n\t\tparser.hooks.rename\n\t\t\t.for(\"require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", defineUndefined);\n\t\t//#endregion\n\n\t\t//#region Inspection\n\t\tconst requireCache = toConstantDependency(\n\t\t\tparser,\n\t\t\tRuntimeGlobals.moduleCache,\n\t\t\t[\n\t\t\t\tRuntimeGlobals.moduleCache,\n\t\t\t\tRuntimeGlobals.moduleId,\n\t\t\t\tRuntimeGlobals.moduleLoaded\n\t\t\t]\n\t\t);\n\n\t\tparser.hooks.expression\n\t\t\t.for(\"require.cache\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", requireCache);\n\t\t//#endregion\n\n\t\t//#region Require as expression\n\t\tconst requireAsExpressionHandler = expr => {\n\t\t\tconst dep = new CommonJsRequireContextDependency(\n\t\t\t\t{\n\t\t\t\t\trequest: options.unknownContextRequest,\n\t\t\t\t\trecursive: options.unknownContextRecursive,\n\t\t\t\t\tregExp: options.unknownContextRegExp,\n\t\t\t\t\tmode: \"sync\"\n\t\t\t\t},\n\t\t\t\texpr.range,\n\t\t\t\tundefined,\n\t\t\t\tparser.scope.inShorthand,\n\t\t\t\tgetContext()\n\t\t\t);\n\t\t\tdep.critical =\n\t\t\t\toptions.unknownContextCritical &&\n\t\t\t\t\"require function is used in a way in which dependencies cannot be statically extracted\";\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t};\n\t\tparser.hooks.expression\n\t\t\t.for(\"require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", requireAsExpressionHandler);\n\t\t//#endregion\n\n\t\t//#region Require\n\t\tconst processRequireItem = (expr, param) => {\n\t\t\tif (param.isString()) {\n\t\t\t\tconst dep = new CommonJsRequireDependency(\n\t\t\t\t\tparam.string,\n\t\t\t\t\tparam.range,\n\t\t\t\t\tgetContext()\n\t\t\t\t);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tconst processRequireContext = (expr, param) => {\n\t\t\tconst dep = ContextDependencyHelpers.create(\n\t\t\t\tCommonJsRequireContextDependency,\n\t\t\t\texpr.range,\n\t\t\t\tparam,\n\t\t\t\texpr,\n\t\t\t\toptions,\n\t\t\t\t{\n\t\t\t\t\tcategory: \"commonjs\"\n\t\t\t\t},\n\t\t\t\tparser,\n\t\t\t\tundefined,\n\t\t\t\tgetContext()\n\t\t\t);\n\t\t\tif (!dep) return;\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t};\n\t\tconst createRequireHandler = callNew => expr => {\n\t\t\tif (options.commonjsMagicComments) {\n\t\t\t\tconst { options: requireOptions, errors: commentErrors } =\n\t\t\t\t\tparser.parseCommentOptions(expr.range);\n\n\t\t\t\tif (commentErrors) {\n\t\t\t\t\tfor (const e of commentErrors) {\n\t\t\t\t\t\tconst { comment } = e;\n\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\tnew CommentCompilationWarning(\n\t\t\t\t\t\t\t\t`Compilation error while processing magic comment(-s): /*${comment.value}*/: ${e.message}`,\n\t\t\t\t\t\t\t\tcomment.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (requireOptions) {\n\t\t\t\t\tif (requireOptions.webpackIgnore !== undefined) {\n\t\t\t\t\t\tif (typeof requireOptions.webpackIgnore !== \"boolean\") {\n\t\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\t\t`\\`webpackIgnore\\` expected a boolean, but received: ${requireOptions.webpackIgnore}.`,\n\t\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Do not instrument `require()` if `webpackIgnore` is `true`\n\t\t\t\t\t\t\tif (requireOptions.webpackIgnore) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (expr.arguments.length !== 1) return;\n\t\t\tlet localModule;\n\t\t\tconst param = parser.evaluateExpression(expr.arguments[0]);\n\t\t\tif (param.isConditional()) {\n\t\t\t\tlet isExpression = false;\n\t\t\t\tfor (const p of param.options) {\n\t\t\t\t\tconst result = processRequireItem(expr, p);\n\t\t\t\t\tif (result === undefined) {\n\t\t\t\t\t\tisExpression = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isExpression) {\n\t\t\t\t\tconst dep = new RequireHeaderDependency(expr.callee.range);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (\n\t\t\t\tparam.isString() &&\n\t\t\t\t(localModule = getLocalModule(parser.state, param.string))\n\t\t\t) {\n\t\t\t\tlocalModule.flagUsed();\n\t\t\t\tconst dep = new LocalModuleDependency(localModule, expr.range, callNew);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tconst result = processRequireItem(expr, param);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tprocessRequireContext(expr, param);\n\t\t\t\t} else {\n\t\t\t\t\tconst dep = new RequireHeaderDependency(expr.callee.range);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tparser.hooks.call\n\t\t\t.for(\"require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", createRequireHandler(false));\n\t\tparser.hooks.new\n\t\t\t.for(\"require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", createRequireHandler(true));\n\t\tparser.hooks.call\n\t\t\t.for(\"module.require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", createRequireHandler(false));\n\t\tparser.hooks.new\n\t\t\t.for(\"module.require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", createRequireHandler(true));\n\t\t//#endregion\n\n\t\t//#region Require with property access\n\t\tconst chainHandler = (expr, calleeMembers, callExpr, members) => {\n\t\t\tif (callExpr.arguments.length !== 1) return;\n\t\t\tconst param = parser.evaluateExpression(callExpr.arguments[0]);\n\t\t\tif (param.isString() && !getLocalModule(parser.state, param.string)) {\n\t\t\t\tconst dep = new CommonJsFullRequireDependency(\n\t\t\t\t\tparam.string,\n\t\t\t\t\texpr.range,\n\t\t\t\t\tmembers\n\t\t\t\t);\n\t\t\t\tdep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tconst callChainHandler = (expr, calleeMembers, callExpr, members) => {\n\t\t\tif (callExpr.arguments.length !== 1) return;\n\t\t\tconst param = parser.evaluateExpression(callExpr.arguments[0]);\n\t\t\tif (param.isString() && !getLocalModule(parser.state, param.string)) {\n\t\t\t\tconst dep = new CommonJsFullRequireDependency(\n\t\t\t\t\tparam.string,\n\t\t\t\t\texpr.callee.range,\n\t\t\t\t\tmembers\n\t\t\t\t);\n\t\t\t\tdep.call = true;\n\t\t\t\tdep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\tdep.loc = expr.callee.loc;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\tparser.walkExpressions(expr.arguments);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tparser.hooks.memberChainOfCallMemberChain\n\t\t\t.for(\"require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", chainHandler);\n\t\tparser.hooks.memberChainOfCallMemberChain\n\t\t\t.for(\"module.require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", chainHandler);\n\t\tparser.hooks.callMemberChainOfCallMemberChain\n\t\t\t.for(\"require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", callChainHandler);\n\t\tparser.hooks.callMemberChainOfCallMemberChain\n\t\t\t.for(\"module.require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", callChainHandler);\n\t\t//#endregion\n\n\t\t//#region Require.resolve\n\t\tconst processResolve = (expr, weak) => {\n\t\t\tif (expr.arguments.length !== 1) return;\n\t\t\tconst param = parser.evaluateExpression(expr.arguments[0]);\n\t\t\tif (param.isConditional()) {\n\t\t\t\tfor (const option of param.options) {\n\t\t\t\t\tconst result = processResolveItem(expr, option, weak);\n\t\t\t\t\tif (result === undefined) {\n\t\t\t\t\t\tprocessResolveContext(expr, option, weak);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst dep = new RequireResolveHeaderDependency(expr.callee.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tconst result = processResolveItem(expr, param, weak);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tprocessResolveContext(expr, param, weak);\n\t\t\t\t}\n\t\t\t\tconst dep = new RequireResolveHeaderDependency(expr.callee.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tconst processResolveItem = (expr, param, weak) => {\n\t\t\tif (param.isString()) {\n\t\t\t\tconst dep = new RequireResolveDependency(\n\t\t\t\t\tparam.string,\n\t\t\t\t\tparam.range,\n\t\t\t\t\tgetContext()\n\t\t\t\t);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\tdep.weak = weak;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tconst processResolveContext = (expr, param, weak) => {\n\t\t\tconst dep = ContextDependencyHelpers.create(\n\t\t\t\tRequireResolveContextDependency,\n\t\t\t\tparam.range,\n\t\t\t\tparam,\n\t\t\t\texpr,\n\t\t\t\toptions,\n\t\t\t\t{\n\t\t\t\t\tcategory: \"commonjs\",\n\t\t\t\t\tmode: weak ? \"weak\" : \"sync\"\n\t\t\t\t},\n\t\t\t\tparser,\n\t\t\t\tgetContext()\n\t\t\t);\n\t\t\tif (!dep) return;\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t};\n\n\t\tparser.hooks.call\n\t\t\t.for(\"require.resolve\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", expr => {\n\t\t\t\treturn processResolve(expr, false);\n\t\t\t});\n\t\tparser.hooks.call\n\t\t\t.for(\"require.resolveWeak\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", expr => {\n\t\t\t\treturn processResolve(expr, true);\n\t\t\t});\n\t\t//#endregion\n\n\t\t//#region Create require\n\n\t\tif (!options.createRequire) return;\n\n\t\tlet moduleName;\n\t\tlet specifierName;\n\n\t\tif (options.createRequire === true) {\n\t\t\tmoduleName = \"module\";\n\t\t\tspecifierName = \"createRequire\";\n\t\t} else {\n\t\t\tconst match = /^(.*) from (.*)$/.exec(options.createRequire);\n\t\t\tif (match) {\n\t\t\t\t[, specifierName, moduleName] = match;\n\t\t\t}\n\t\t\tif (!specifierName || !moduleName) {\n\t\t\t\tconst err = new WebpackError(\n\t\t\t\t\t`Parsing javascript parser option \"createRequire\" failed, got ${JSON.stringify(\n\t\t\t\t\t\toptions.createRequire\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t\terr.details =\n\t\t\t\t\t'Expected string in format \"createRequire from module\", where \"createRequire\" is specifier name and \"module\" name of the module';\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\n\t\ttapRequireExpressionTag(createdRequireIdentifierTag);\n\t\ttapRequireExpressionTag(createRequireSpecifierTag);\n\t\tparser.hooks.evaluateCallExpression\n\t\t\t.for(createRequireSpecifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", expr => {\n\t\t\t\tconst context = parseCreateRequireArguments(expr);\n\t\t\t\tif (context === undefined) return;\n\t\t\t\tconst ident = parser.evaluatedVariable({\n\t\t\t\t\ttag: createdRequireIdentifierTag,\n\t\t\t\t\tdata: { context },\n\t\t\t\t\tnext: undefined\n\t\t\t\t});\n\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t.setIdentifier(ident, ident, () => [])\n\t\t\t\t\t.setSideEffects(false)\n\t\t\t\t\t.setRange(expr.range);\n\t\t\t});\n\t\tparser.hooks.unhandledExpressionMemberChain\n\t\t\t.for(createdRequireIdentifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", (expr, members) => {\n\t\t\t\treturn expressionIsUnsupported(\n\t\t\t\t\tparser,\n\t\t\t\t\t`createRequire().${members.join(\".\")} is not supported by webpack.`\n\t\t\t\t)(expr);\n\t\t\t});\n\t\tparser.hooks.canRename\n\t\t\t.for(createdRequireIdentifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", () => true);\n\t\tparser.hooks.canRename\n\t\t\t.for(createRequireSpecifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", () => true);\n\t\tparser.hooks.rename\n\t\t\t.for(createRequireSpecifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", defineUndefined);\n\t\tparser.hooks.expression\n\t\t\t.for(createdRequireIdentifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", requireAsExpressionHandler);\n\t\tparser.hooks.call\n\t\t\t.for(createdRequireIdentifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", createRequireHandler(false));\n\t\t/**\n\t\t * @param {CallExpressionNode} expr call expression\n\t\t * @returns {string} context\n\t\t */\n\t\tconst parseCreateRequireArguments = expr => {\n\t\t\tconst args = expr.arguments;\n\t\t\tif (args.length !== 1) {\n\t\t\t\tconst err = new WebpackError(\n\t\t\t\t\t\"module.createRequire supports only one argument.\"\n\t\t\t\t);\n\t\t\t\terr.loc = expr.loc;\n\t\t\t\tparser.state.module.addWarning(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst arg = args[0];\n\t\t\tconst evaluated = parser.evaluateExpression(arg);\n\t\t\tif (!evaluated.isString()) {\n\t\t\t\tconst err = new WebpackError(\n\t\t\t\t\t\"module.createRequire failed parsing argument.\"\n\t\t\t\t);\n\t\t\t\terr.loc = arg.loc;\n\t\t\t\tparser.state.module.addWarning(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst ctx = evaluated.string.startsWith(\"file://\")\n\t\t\t\t? fileURLToPath(evaluated.string)\n\t\t\t\t: evaluated.string;\n\t\t\t// argument always should be a filename\n\t\t\treturn ctx.slice(0, ctx.lastIndexOf(ctx.startsWith(\"/\") ? \"/\" : \"\\\\\"));\n\t\t};\n\n\t\tparser.hooks.import.tap(\n\t\t\t{\n\t\t\t\tname: \"CommonJsImportsParserPlugin\",\n\t\t\t\tstage: -10\n\t\t\t},\n\t\t\t(statement, source) => {\n\t\t\t\tif (\n\t\t\t\t\tsource !== moduleName ||\n\t\t\t\t\tstatement.specifiers.length !== 1 ||\n\t\t\t\t\tstatement.specifiers[0].type !== \"ImportSpecifier\" ||\n\t\t\t\t\tstatement.specifiers[0].imported.type !== \"Identifier\" ||\n\t\t\t\t\tstatement.specifiers[0].imported.name !== specifierName\n\t\t\t\t)\n\t\t\t\t\treturn;\n\t\t\t\t// clear for 'import { createRequire as x } from \"module\"'\n\t\t\t\t// if any other specifier was used import module\n\t\t\t\tconst clearDep = new ConstDependency(\n\t\t\t\t\tparser.isAsiPosition(statement.range[0]) ? \";\" : \"\",\n\t\t\t\t\tstatement.range\n\t\t\t\t);\n\t\t\t\tclearDep.loc = statement.loc;\n\t\t\t\tparser.state.module.addPresentationalDependency(clearDep);\n\t\t\t\tparser.unsetAsiPosition(statement.range[1]);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.importSpecifier.tap(\n\t\t\t{\n\t\t\t\tname: \"CommonJsImportsParserPlugin\",\n\t\t\t\tstage: -10\n\t\t\t},\n\t\t\t(statement, source, id, name) => {\n\t\t\t\tif (source !== moduleName || id !== specifierName) return;\n\t\t\t\tparser.tagVariable(name, createRequireSpecifierTag);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.preDeclarator.tap(\n\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\tdeclarator => {\n\t\t\t\tif (\n\t\t\t\t\tdeclarator.id.type !== \"Identifier\" ||\n\t\t\t\t\t!declarator.init ||\n\t\t\t\t\tdeclarator.init.type !== \"CallExpression\" ||\n\t\t\t\t\tdeclarator.init.callee.type !== \"Identifier\"\n\t\t\t\t)\n\t\t\t\t\treturn;\n\t\t\t\tconst variableInfo = parser.getVariableInfo(\n\t\t\t\t\tdeclarator.init.callee.name\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\tvariableInfo &&\n\t\t\t\t\tvariableInfo.tagInfo &&\n\t\t\t\t\tvariableInfo.tagInfo.tag === createRequireSpecifierTag\n\t\t\t\t) {\n\t\t\t\t\tconst context = parseCreateRequireArguments(declarator.init);\n\t\t\t\t\tif (context === undefined) return;\n\t\t\t\t\tparser.tagVariable(declarator.id.name, createdRequireIdentifierTag, {\n\t\t\t\t\t\tname: declarator.id.name,\n\t\t\t\t\t\tcontext\n\t\t\t\t\t});\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tparser.hooks.memberChainOfCallMemberChain\n\t\t\t.for(createRequireSpecifierTag)\n\t\t\t.tap(\n\t\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\t\t(expr, calleeMembers, callExpr, members) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tcalleeMembers.length !== 0 ||\n\t\t\t\t\t\tmembers.length !== 1 ||\n\t\t\t\t\t\tmembers[0] !== \"cache\"\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\t\t\t\t\t// createRequire().cache\n\t\t\t\t\tconst context = parseCreateRequireArguments(callExpr);\n\t\t\t\t\tif (context === undefined) return;\n\t\t\t\t\treturn requireCache(expr);\n\t\t\t\t}\n\t\t\t);\n\t\tparser.hooks.callMemberChainOfCallMemberChain\n\t\t\t.for(createRequireSpecifierTag)\n\t\t\t.tap(\n\t\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\t\t(expr, calleeMembers, innerCallExpression, members) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tcalleeMembers.length !== 0 ||\n\t\t\t\t\t\tmembers.length !== 1 ||\n\t\t\t\t\t\tmembers[0] !== \"resolve\"\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\t\t\t\t\t// createRequire().resolve()\n\t\t\t\t\treturn processResolve(expr, false);\n\t\t\t\t}\n\t\t\t);\n\t\tparser.hooks.expressionMemberChain\n\t\t\t.for(createdRequireIdentifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", (expr, members) => {\n\t\t\t\t// require.cache\n\t\t\t\tif (members.length === 1 && members[0] === \"cache\") {\n\t\t\t\t\treturn requireCache(expr);\n\t\t\t\t}\n\t\t\t});\n\t\tparser.hooks.callMemberChain\n\t\t\t.for(createdRequireIdentifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", (expr, members) => {\n\t\t\t\t// require.resolve()\n\t\t\t\tif (members.length === 1 && members[0] === \"resolve\") {\n\t\t\t\t\treturn processResolve(expr, false);\n\t\t\t\t}\n\t\t\t});\n\t\tparser.hooks.call\n\t\t\t.for(createRequireSpecifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", expr => {\n\t\t\t\tconst clearDep = new ConstDependency(\n\t\t\t\t\t\"/* createRequire() */ undefined\",\n\t\t\t\t\texpr.range\n\t\t\t\t);\n\t\t\t\tclearDep.loc = expr.loc;\n\t\t\t\tparser.state.module.addPresentationalDependency(clearDep);\n\t\t\t\treturn true;\n\t\t\t});\n\t\t//#endregion\n\t}\n}\nmodule.exports = CommonJsImportsParserPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}