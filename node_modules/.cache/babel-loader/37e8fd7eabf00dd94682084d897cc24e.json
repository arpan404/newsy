{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra, Zackary Jackson @ScriptedAlchemy, Marais Rossouw @maraisr\n*/\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n/** @typedef {import(\"./ContainerEntryModule\").ExposeOptions} ExposeOptions */\n\n\nclass ContainerEntryDependency extends Dependency {\n  /**\n   * @param {string} name entry name\n   * @param {[string, ExposeOptions][]} exposes list of exposed modules\n   * @param {string} shareScope name of the share scope\n   */\n  constructor(name, exposes, shareScope) {\n    super();\n    this.name = name;\n    this.exposes = exposes;\n    this.shareScope = shareScope;\n  }\n  /**\n   * @returns {string | null} an identifier to merge equal requests\n   */\n\n\n  getResourceIdentifier() {\n    return `container-entry-${this.name}`;\n  }\n\n  get type() {\n    return \"container entry\";\n  }\n\n  get category() {\n    return \"esm\";\n  }\n\n}\n\nmakeSerializable(ContainerEntryDependency, \"webpack/lib/container/ContainerEntryDependency\");\nmodule.exports = ContainerEntryDependency;","map":{"version":3,"names":["Dependency","require","makeSerializable","ContainerEntryDependency","constructor","name","exposes","shareScope","getResourceIdentifier","type","category","module","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/container/ContainerEntryDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra, Zackary Jackson @ScriptedAlchemy, Marais Rossouw @maraisr\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst makeSerializable = require(\"../util/makeSerializable\");\n\n/** @typedef {import(\"./ContainerEntryModule\").ExposeOptions} ExposeOptions */\n\nclass ContainerEntryDependency extends Dependency {\n\t/**\n\t * @param {string} name entry name\n\t * @param {[string, ExposeOptions][]} exposes list of exposed modules\n\t * @param {string} shareScope name of the share scope\n\t */\n\tconstructor(name, exposes, shareScope) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.exposes = exposes;\n\t\tthis.shareScope = shareScope;\n\t}\n\n\t/**\n\t * @returns {string | null} an identifier to merge equal requests\n\t */\n\tgetResourceIdentifier() {\n\t\treturn `container-entry-${this.name}`;\n\t}\n\n\tget type() {\n\t\treturn \"container entry\";\n\t}\n\n\tget category() {\n\t\treturn \"esm\";\n\t}\n}\n\nmakeSerializable(\n\tContainerEntryDependency,\n\t\"webpack/lib/container/ContainerEntryDependency\"\n);\n\nmodule.exports = ContainerEntryDependency;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,0BAAD,CAAhC;AAEA;;;AAEA,MAAME,wBAAN,SAAuCH,UAAvC,CAAkD;EACjD;AACD;AACA;AACA;AACA;EACCI,WAAW,CAACC,IAAD,EAAOC,OAAP,EAAgBC,UAAhB,EAA4B;IACtC;IACA,KAAKF,IAAL,GAAYA,IAAZ;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKC,UAAL,GAAkBA,UAAlB;EACA;EAED;AACD;AACA;;;EACCC,qBAAqB,GAAG;IACvB,OAAQ,mBAAkB,KAAKH,IAAK,EAApC;EACA;;EAEO,IAAJI,IAAI,GAAG;IACV,OAAO,iBAAP;EACA;;EAEW,IAARC,QAAQ,GAAG;IACd,OAAO,KAAP;EACA;;AA1BgD;;AA6BlDR,gBAAgB,CACfC,wBADe,EAEf,gDAFe,CAAhB;AAKAQ,MAAM,CAACC,OAAP,GAAiBT,wBAAjB"},"metadata":{},"sourceType":"script"}