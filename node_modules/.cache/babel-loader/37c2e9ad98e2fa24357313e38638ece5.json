{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"./Dependency\")} Dependency */\n\n/** @typedef {import(\"./Module\")} Module */\n\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * Module itself is not connected, but transitive modules are connected transitively.\n */\n\nconst TRANSITIVE_ONLY = Symbol(\"transitive only\");\n/**\n * While determining the active state, this flag is used to signal a circular connection.\n */\n\nconst CIRCULAR_CONNECTION = Symbol(\"circular connection\");\n/** @typedef {boolean | typeof TRANSITIVE_ONLY | typeof CIRCULAR_CONNECTION} ConnectionState */\n\n/**\n * @param {ConnectionState} a first\n * @param {ConnectionState} b second\n * @returns {ConnectionState} merged\n */\n\nconst addConnectionStates = (a, b) => {\n  if (a === true || b === true) return true;\n  if (a === false) return b;\n  if (b === false) return a;\n  if (a === TRANSITIVE_ONLY) return b;\n  if (b === TRANSITIVE_ONLY) return a;\n  return a;\n};\n/**\n * @param {ConnectionState} a first\n * @param {ConnectionState} b second\n * @returns {ConnectionState} intersected\n */\n\n\nconst intersectConnectionStates = (a, b) => {\n  if (a === false || b === false) return false;\n  if (a === true) return b;\n  if (b === true) return a;\n  if (a === CIRCULAR_CONNECTION) return b;\n  if (b === CIRCULAR_CONNECTION) return a;\n  return a;\n};\n\nclass ModuleGraphConnection {\n  /**\n   * @param {Module|null} originModule the referencing module\n   * @param {Dependency|null} dependency the referencing dependency\n   * @param {Module} module the referenced module\n   * @param {string=} explanation some extra detail\n   * @param {boolean=} weak the reference is weak\n   * @param {false | function(ModuleGraphConnection, RuntimeSpec): ConnectionState=} condition condition for the connection\n   */\n  constructor(originModule, dependency, module, explanation) {\n    let weak = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    let condition = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : undefined;\n    this.originModule = originModule;\n    this.resolvedOriginModule = originModule;\n    this.dependency = dependency;\n    this.resolvedModule = module;\n    this.module = module;\n    this.weak = weak;\n    this.conditional = !!condition;\n    this._active = condition !== false;\n    /** @type {function(ModuleGraphConnection, RuntimeSpec): ConnectionState} */\n\n    this.condition = condition || undefined;\n    /** @type {Set<string>} */\n\n    this.explanations = undefined;\n\n    if (explanation) {\n      this.explanations = new Set();\n      this.explanations.add(explanation);\n    }\n  }\n\n  clone() {\n    const clone = new ModuleGraphConnection(this.resolvedOriginModule, this.dependency, this.resolvedModule, undefined, this.weak, this.condition);\n    clone.originModule = this.originModule;\n    clone.module = this.module;\n    clone.conditional = this.conditional;\n    clone._active = this._active;\n    if (this.explanations) clone.explanations = new Set(this.explanations);\n    return clone;\n  }\n  /**\n   * @param {function(ModuleGraphConnection, RuntimeSpec): ConnectionState} condition condition for the connection\n   * @returns {void}\n   */\n\n\n  addCondition(condition) {\n    if (this.conditional) {\n      const old = this.condition;\n\n      this.condition = (c, r) => intersectConnectionStates(old(c, r), condition(c, r));\n    } else if (this._active) {\n      this.conditional = true;\n      this.condition = condition;\n    }\n  }\n  /**\n   * @param {string} explanation the explanation to add\n   * @returns {void}\n   */\n\n\n  addExplanation(explanation) {\n    if (this.explanations === undefined) {\n      this.explanations = new Set();\n    }\n\n    this.explanations.add(explanation);\n  }\n\n  get explanation() {\n    if (this.explanations === undefined) return \"\";\n    return Array.from(this.explanations).join(\" \");\n  } // TODO webpack 5 remove\n\n\n  get active() {\n    throw new Error(\"Use getActiveState instead\");\n  }\n  /**\n   * @param {RuntimeSpec} runtime the runtime\n   * @returns {boolean} true, if the connection is active\n   */\n\n\n  isActive(runtime) {\n    if (!this.conditional) return this._active;\n    return this.condition(this, runtime) !== false;\n  }\n  /**\n   * @param {RuntimeSpec} runtime the runtime\n   * @returns {boolean} true, if the connection is active\n   */\n\n\n  isTargetActive(runtime) {\n    if (!this.conditional) return this._active;\n    return this.condition(this, runtime) === true;\n  }\n  /**\n   * @param {RuntimeSpec} runtime the runtime\n   * @returns {ConnectionState} true: fully active, false: inactive, TRANSITIVE: direct module inactive, but transitive connection maybe active\n   */\n\n\n  getActiveState(runtime) {\n    if (!this.conditional) return this._active;\n    return this.condition(this, runtime);\n  }\n  /**\n   * @param {boolean} value active or not\n   * @returns {void}\n   */\n\n\n  setActive(value) {\n    this.conditional = false;\n    this._active = value;\n  }\n\n  set active(value) {\n    throw new Error(\"Use setActive instead\");\n  }\n\n}\n/** @typedef {typeof TRANSITIVE_ONLY} TRANSITIVE_ONLY */\n\n/** @typedef {typeof CIRCULAR_CONNECTION} CIRCULAR_CONNECTION */\n\n\nmodule.exports = ModuleGraphConnection;\nmodule.exports.addConnectionStates = addConnectionStates;\nmodule.exports.TRANSITIVE_ONLY =\n/** @type {typeof TRANSITIVE_ONLY} */\nTRANSITIVE_ONLY;\nmodule.exports.CIRCULAR_CONNECTION =\n/** @type {typeof CIRCULAR_CONNECTION} */\nCIRCULAR_CONNECTION;","map":{"version":3,"names":["TRANSITIVE_ONLY","Symbol","CIRCULAR_CONNECTION","addConnectionStates","a","b","intersectConnectionStates","ModuleGraphConnection","constructor","originModule","dependency","module","explanation","weak","condition","undefined","resolvedOriginModule","resolvedModule","conditional","_active","explanations","Set","add","clone","addCondition","old","c","r","addExplanation","Array","from","join","active","Error","isActive","runtime","isTargetActive","getActiveState","setActive","value","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/ModuleGraphConnection.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * Module itself is not connected, but transitive modules are connected transitively.\n */\nconst TRANSITIVE_ONLY = Symbol(\"transitive only\");\n\n/**\n * While determining the active state, this flag is used to signal a circular connection.\n */\nconst CIRCULAR_CONNECTION = Symbol(\"circular connection\");\n\n/** @typedef {boolean | typeof TRANSITIVE_ONLY | typeof CIRCULAR_CONNECTION} ConnectionState */\n\n/**\n * @param {ConnectionState} a first\n * @param {ConnectionState} b second\n * @returns {ConnectionState} merged\n */\nconst addConnectionStates = (a, b) => {\n\tif (a === true || b === true) return true;\n\tif (a === false) return b;\n\tif (b === false) return a;\n\tif (a === TRANSITIVE_ONLY) return b;\n\tif (b === TRANSITIVE_ONLY) return a;\n\treturn a;\n};\n\n/**\n * @param {ConnectionState} a first\n * @param {ConnectionState} b second\n * @returns {ConnectionState} intersected\n */\nconst intersectConnectionStates = (a, b) => {\n\tif (a === false || b === false) return false;\n\tif (a === true) return b;\n\tif (b === true) return a;\n\tif (a === CIRCULAR_CONNECTION) return b;\n\tif (b === CIRCULAR_CONNECTION) return a;\n\treturn a;\n};\n\nclass ModuleGraphConnection {\n\t/**\n\t * @param {Module|null} originModule the referencing module\n\t * @param {Dependency|null} dependency the referencing dependency\n\t * @param {Module} module the referenced module\n\t * @param {string=} explanation some extra detail\n\t * @param {boolean=} weak the reference is weak\n\t * @param {false | function(ModuleGraphConnection, RuntimeSpec): ConnectionState=} condition condition for the connection\n\t */\n\tconstructor(\n\t\toriginModule,\n\t\tdependency,\n\t\tmodule,\n\t\texplanation,\n\t\tweak = false,\n\t\tcondition = undefined\n\t) {\n\t\tthis.originModule = originModule;\n\t\tthis.resolvedOriginModule = originModule;\n\t\tthis.dependency = dependency;\n\t\tthis.resolvedModule = module;\n\t\tthis.module = module;\n\t\tthis.weak = weak;\n\t\tthis.conditional = !!condition;\n\t\tthis._active = condition !== false;\n\t\t/** @type {function(ModuleGraphConnection, RuntimeSpec): ConnectionState} */\n\t\tthis.condition = condition || undefined;\n\t\t/** @type {Set<string>} */\n\t\tthis.explanations = undefined;\n\t\tif (explanation) {\n\t\t\tthis.explanations = new Set();\n\t\t\tthis.explanations.add(explanation);\n\t\t}\n\t}\n\n\tclone() {\n\t\tconst clone = new ModuleGraphConnection(\n\t\t\tthis.resolvedOriginModule,\n\t\t\tthis.dependency,\n\t\t\tthis.resolvedModule,\n\t\t\tundefined,\n\t\t\tthis.weak,\n\t\t\tthis.condition\n\t\t);\n\t\tclone.originModule = this.originModule;\n\t\tclone.module = this.module;\n\t\tclone.conditional = this.conditional;\n\t\tclone._active = this._active;\n\t\tif (this.explanations) clone.explanations = new Set(this.explanations);\n\t\treturn clone;\n\t}\n\n\t/**\n\t * @param {function(ModuleGraphConnection, RuntimeSpec): ConnectionState} condition condition for the connection\n\t * @returns {void}\n\t */\n\taddCondition(condition) {\n\t\tif (this.conditional) {\n\t\t\tconst old = this.condition;\n\t\t\tthis.condition = (c, r) =>\n\t\t\t\tintersectConnectionStates(old(c, r), condition(c, r));\n\t\t} else if (this._active) {\n\t\t\tthis.conditional = true;\n\t\t\tthis.condition = condition;\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} explanation the explanation to add\n\t * @returns {void}\n\t */\n\taddExplanation(explanation) {\n\t\tif (this.explanations === undefined) {\n\t\t\tthis.explanations = new Set();\n\t\t}\n\t\tthis.explanations.add(explanation);\n\t}\n\n\tget explanation() {\n\t\tif (this.explanations === undefined) return \"\";\n\t\treturn Array.from(this.explanations).join(\" \");\n\t}\n\n\t// TODO webpack 5 remove\n\tget active() {\n\t\tthrow new Error(\"Use getActiveState instead\");\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {boolean} true, if the connection is active\n\t */\n\tisActive(runtime) {\n\t\tif (!this.conditional) return this._active;\n\t\treturn this.condition(this, runtime) !== false;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {boolean} true, if the connection is active\n\t */\n\tisTargetActive(runtime) {\n\t\tif (!this.conditional) return this._active;\n\t\treturn this.condition(this, runtime) === true;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {ConnectionState} true: fully active, false: inactive, TRANSITIVE: direct module inactive, but transitive connection maybe active\n\t */\n\tgetActiveState(runtime) {\n\t\tif (!this.conditional) return this._active;\n\t\treturn this.condition(this, runtime);\n\t}\n\n\t/**\n\t * @param {boolean} value active or not\n\t * @returns {void}\n\t */\n\tsetActive(value) {\n\t\tthis.conditional = false;\n\t\tthis._active = value;\n\t}\n\n\tset active(value) {\n\t\tthrow new Error(\"Use setActive instead\");\n\t}\n}\n\n/** @typedef {typeof TRANSITIVE_ONLY} TRANSITIVE_ONLY */\n/** @typedef {typeof CIRCULAR_CONNECTION} CIRCULAR_CONNECTION */\n\nmodule.exports = ModuleGraphConnection;\nmodule.exports.addConnectionStates = addConnectionStates;\nmodule.exports.TRANSITIVE_ONLY = /** @type {typeof TRANSITIVE_ONLY} */ (\n\tTRANSITIVE_ONLY\n);\nmodule.exports.CIRCULAR_CONNECTION = /** @type {typeof CIRCULAR_CONNECTION} */ (\n\tCIRCULAR_CONNECTION\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}