{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst fs = require(\"graceful-fs\");\n\nconst CachedInputFileSystem = require(\"./CachedInputFileSystem\");\n\nconst ResolverFactory = require(\"./ResolverFactory\");\n/** @typedef {import(\"./PnpPlugin\").PnpApiImpl} PnpApi */\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n\n/** @typedef {import(\"./Resolver\").ResolveContext} ResolveContext */\n\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n\n/** @typedef {import(\"./ResolverFactory\").Plugin} Plugin */\n\n/** @typedef {import(\"./ResolverFactory\").UserResolveOptions} ResolveOptions */\n\n\nconst nodeFileSystem = new CachedInputFileSystem(fs, 4000);\nconst nodeContext = {\n  environments: [\"node+es3+es5+process+native\"]\n};\nconst asyncResolver = ResolverFactory.createResolver({\n  conditionNames: [\"node\"],\n  extensions: [\".js\", \".json\", \".node\"],\n  fileSystem: nodeFileSystem\n});\n\nfunction resolve(context, path, request, resolveContext, callback) {\n  if (typeof context === \"string\") {\n    callback = resolveContext;\n    resolveContext = request;\n    request = path;\n    path = context;\n    context = nodeContext;\n  }\n\n  if (typeof callback !== \"function\") {\n    callback = resolveContext;\n  }\n\n  asyncResolver.resolve(context, path, request, resolveContext, callback);\n}\n\nconst syncResolver = ResolverFactory.createResolver({\n  conditionNames: [\"node\"],\n  extensions: [\".js\", \".json\", \".node\"],\n  useSyncFileSystemCalls: true,\n  fileSystem: nodeFileSystem\n});\n\nfunction resolveSync(context, path, request) {\n  if (typeof context === \"string\") {\n    request = path;\n    path = context;\n    context = nodeContext;\n  }\n\n  return syncResolver.resolveSync(context, path, request);\n}\n\nfunction create(options) {\n  options = {\n    fileSystem: nodeFileSystem,\n    ...options\n  };\n  const resolver = ResolverFactory.createResolver(options);\n  return function (context, path, request, resolveContext, callback) {\n    if (typeof context === \"string\") {\n      callback = resolveContext;\n      resolveContext = request;\n      request = path;\n      path = context;\n      context = nodeContext;\n    }\n\n    if (typeof callback !== \"function\") {\n      callback = resolveContext;\n    }\n\n    resolver.resolve(context, path, request, resolveContext, callback);\n  };\n}\n\nfunction createSync(options) {\n  options = {\n    useSyncFileSystemCalls: true,\n    fileSystem: nodeFileSystem,\n    ...options\n  };\n  const resolver = ResolverFactory.createResolver(options);\n  return function (context, path, request) {\n    if (typeof context === \"string\") {\n      request = path;\n      path = context;\n      context = nodeContext;\n    }\n\n    return resolver.resolveSync(context, path, request);\n  };\n}\n/**\n * @template A\n * @template B\n * @param {A} obj input a\n * @param {B} exports input b\n * @returns {A & B} merged\n */\n\n\nconst mergeExports = (obj, exports) => {\n  const descriptors = Object.getOwnPropertyDescriptors(exports);\n  Object.defineProperties(obj, descriptors);\n  return (\n    /** @type {A & B} */\n    Object.freeze(obj)\n  );\n};\n\nmodule.exports = mergeExports(resolve, {\n  get sync() {\n    return resolveSync;\n  },\n\n  create: mergeExports(create, {\n    get sync() {\n      return createSync;\n    }\n\n  }),\n  ResolverFactory,\n  CachedInputFileSystem,\n\n  get CloneBasenamePlugin() {\n    return require(\"./CloneBasenamePlugin\");\n  },\n\n  get LogInfoPlugin() {\n    return require(\"./LogInfoPlugin\");\n  },\n\n  get forEachBail() {\n    return require(\"./forEachBail\");\n  }\n\n});","map":{"version":3,"names":["fs","require","CachedInputFileSystem","ResolverFactory","nodeFileSystem","nodeContext","environments","asyncResolver","createResolver","conditionNames","extensions","fileSystem","resolve","context","path","request","resolveContext","callback","syncResolver","useSyncFileSystemCalls","resolveSync","create","options","resolver","createSync","mergeExports","obj","exports","descriptors","Object","getOwnPropertyDescriptors","defineProperties","freeze","module","sync","CloneBasenamePlugin","LogInfoPlugin","forEachBail"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/enhanced-resolve/lib/index.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst fs = require(\"graceful-fs\");\nconst CachedInputFileSystem = require(\"./CachedInputFileSystem\");\nconst ResolverFactory = require(\"./ResolverFactory\");\n\n/** @typedef {import(\"./PnpPlugin\").PnpApiImpl} PnpApi */\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n/** @typedef {import(\"./Resolver\").ResolveContext} ResolveContext */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./ResolverFactory\").Plugin} Plugin */\n/** @typedef {import(\"./ResolverFactory\").UserResolveOptions} ResolveOptions */\n\nconst nodeFileSystem = new CachedInputFileSystem(fs, 4000);\n\nconst nodeContext = {\n\tenvironments: [\"node+es3+es5+process+native\"]\n};\n\nconst asyncResolver = ResolverFactory.createResolver({\n\tconditionNames: [\"node\"],\n\textensions: [\".js\", \".json\", \".node\"],\n\tfileSystem: nodeFileSystem\n});\nfunction resolve(context, path, request, resolveContext, callback) {\n\tif (typeof context === \"string\") {\n\t\tcallback = resolveContext;\n\t\tresolveContext = request;\n\t\trequest = path;\n\t\tpath = context;\n\t\tcontext = nodeContext;\n\t}\n\tif (typeof callback !== \"function\") {\n\t\tcallback = resolveContext;\n\t}\n\tasyncResolver.resolve(context, path, request, resolveContext, callback);\n}\n\nconst syncResolver = ResolverFactory.createResolver({\n\tconditionNames: [\"node\"],\n\textensions: [\".js\", \".json\", \".node\"],\n\tuseSyncFileSystemCalls: true,\n\tfileSystem: nodeFileSystem\n});\nfunction resolveSync(context, path, request) {\n\tif (typeof context === \"string\") {\n\t\trequest = path;\n\t\tpath = context;\n\t\tcontext = nodeContext;\n\t}\n\treturn syncResolver.resolveSync(context, path, request);\n}\n\nfunction create(options) {\n\toptions = {\n\t\tfileSystem: nodeFileSystem,\n\t\t...options\n\t};\n\tconst resolver = ResolverFactory.createResolver(options);\n\treturn function (context, path, request, resolveContext, callback) {\n\t\tif (typeof context === \"string\") {\n\t\t\tcallback = resolveContext;\n\t\t\tresolveContext = request;\n\t\t\trequest = path;\n\t\t\tpath = context;\n\t\t\tcontext = nodeContext;\n\t\t}\n\t\tif (typeof callback !== \"function\") {\n\t\t\tcallback = resolveContext;\n\t\t}\n\t\tresolver.resolve(context, path, request, resolveContext, callback);\n\t};\n}\n\nfunction createSync(options) {\n\toptions = {\n\t\tuseSyncFileSystemCalls: true,\n\t\tfileSystem: nodeFileSystem,\n\t\t...options\n\t};\n\tconst resolver = ResolverFactory.createResolver(options);\n\treturn function (context, path, request) {\n\t\tif (typeof context === \"string\") {\n\t\t\trequest = path;\n\t\t\tpath = context;\n\t\t\tcontext = nodeContext;\n\t\t}\n\t\treturn resolver.resolveSync(context, path, request);\n\t};\n}\n\n/**\n * @template A\n * @template B\n * @param {A} obj input a\n * @param {B} exports input b\n * @returns {A & B} merged\n */\nconst mergeExports = (obj, exports) => {\n\tconst descriptors = Object.getOwnPropertyDescriptors(exports);\n\tObject.defineProperties(obj, descriptors);\n\treturn /** @type {A & B} */ (Object.freeze(obj));\n};\n\nmodule.exports = mergeExports(resolve, {\n\tget sync() {\n\t\treturn resolveSync;\n\t},\n\tcreate: mergeExports(create, {\n\t\tget sync() {\n\t\t\treturn createSync;\n\t\t}\n\t}),\n\tResolverFactory,\n\tCachedInputFileSystem,\n\tget CloneBasenamePlugin() {\n\t\treturn require(\"./CloneBasenamePlugin\");\n\t},\n\tget LogInfoPlugin() {\n\t\treturn require(\"./LogInfoPlugin\");\n\t},\n\tget forEachBail() {\n\t\treturn require(\"./forEachBail\");\n\t}\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}