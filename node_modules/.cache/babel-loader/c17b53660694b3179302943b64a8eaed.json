{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\"use strict\";\n\nconst A_CODE = \"a\".charCodeAt(0);\n/**\n * @param {string} hash hash\n * @param {number} hashLength hash length\n * @returns {string} returns hash that has at least one non numeric char\n */\n\nmodule.exports = (hash, hashLength) => {\n  if (hashLength < 1) return \"\";\n  const slice = hash.slice(0, hashLength);\n  if (slice.match(/[^\\d]/)) return slice;\n  return `${String.fromCharCode(A_CODE + parseInt(hash[0], 10) % 6)}${slice.slice(1)}`;\n};","map":{"version":3,"names":["A_CODE","charCodeAt","module","exports","hash","hashLength","slice","match","String","fromCharCode","parseInt"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/util/nonNumericOnlyHash.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst A_CODE = \"a\".charCodeAt(0);\n\n/**\n * @param {string} hash hash\n * @param {number} hashLength hash length\n * @returns {string} returns hash that has at least one non numeric char\n */\nmodule.exports = (hash, hashLength) => {\n\tif (hashLength < 1) return \"\";\n\tconst slice = hash.slice(0, hashLength);\n\tif (slice.match(/[^\\d]/)) return slice;\n\treturn `${String.fromCharCode(\n\t\tA_CODE + (parseInt(hash[0], 10) % 6)\n\t)}${slice.slice(1)}`;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,MAAM,GAAG,IAAIC,UAAJ,CAAe,CAAf,CAAf;AAEA;AACA;AACA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB,CAACC,IAAD,EAAOC,UAAP,KAAsB;EACtC,IAAIA,UAAU,GAAG,CAAjB,EAAoB,OAAO,EAAP;EACpB,MAAMC,KAAK,GAAGF,IAAI,CAACE,KAAL,CAAW,CAAX,EAAcD,UAAd,CAAd;EACA,IAAIC,KAAK,CAACC,KAAN,CAAY,OAAZ,CAAJ,EAA0B,OAAOD,KAAP;EAC1B,OAAQ,GAAEE,MAAM,CAACC,YAAP,CACTT,MAAM,GAAIU,QAAQ,CAACN,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV,CAAR,GAAwB,CADzB,CAER,GAAEE,KAAK,CAACA,KAAN,CAAY,CAAZ,CAAe,EAFnB;AAGA,CAPD"},"metadata":{},"sourceType":"script"}