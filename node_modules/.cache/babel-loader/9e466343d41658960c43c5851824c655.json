{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst RuntimeModule = require(\"../RuntimeModule\");\n/** @typedef {import(\"../MainTemplate\")} MainTemplate */\n\n\nclass CompatRuntimeModule extends RuntimeModule {\n  constructor() {\n    super(\"compat\", RuntimeModule.STAGE_ATTACH);\n    this.fullHash = true;\n  }\n  /**\n   * @returns {string} runtime code\n   */\n\n\n  generate() {\n    const {\n      chunkGraph,\n      chunk,\n      compilation\n    } = this;\n    const {\n      runtimeTemplate,\n      mainTemplate,\n      moduleTemplates,\n      dependencyTemplates\n    } = compilation;\n    const bootstrap = mainTemplate.hooks.bootstrap.call(\"\", chunk, compilation.hash || \"XXXX\", moduleTemplates.javascript, dependencyTemplates);\n    const localVars = mainTemplate.hooks.localVars.call(\"\", chunk, compilation.hash || \"XXXX\");\n    const requireExtensions = mainTemplate.hooks.requireExtensions.call(\"\", chunk, compilation.hash || \"XXXX\");\n    const runtimeRequirements = chunkGraph.getTreeRuntimeRequirements(chunk);\n    let requireEnsure = \"\";\n\n    if (runtimeRequirements.has(RuntimeGlobals.ensureChunk)) {\n      const requireEnsureHandler = mainTemplate.hooks.requireEnsure.call(\"\", chunk, compilation.hash || \"XXXX\", \"chunkId\");\n\n      if (requireEnsureHandler) {\n        requireEnsure = `${RuntimeGlobals.ensureChunkHandlers}.compat = ${runtimeTemplate.basicFunction(\"chunkId, promises\", requireEnsureHandler)};`;\n      }\n    }\n\n    return [bootstrap, localVars, requireEnsure, requireExtensions].filter(Boolean).join(\"\\n\");\n  }\n  /**\n   * @returns {boolean} true, if the runtime module should get it's own scope\n   */\n\n\n  shouldIsolate() {\n    // We avoid isolating this to have better backward-compat\n    return false;\n  }\n\n}\n\nmodule.exports = CompatRuntimeModule;","map":{"version":3,"names":["RuntimeGlobals","require","RuntimeModule","CompatRuntimeModule","constructor","STAGE_ATTACH","fullHash","generate","chunkGraph","chunk","compilation","runtimeTemplate","mainTemplate","moduleTemplates","dependencyTemplates","bootstrap","hooks","call","hash","javascript","localVars","requireExtensions","runtimeRequirements","getTreeRuntimeRequirements","requireEnsure","has","ensureChunk","requireEnsureHandler","ensureChunkHandlers","basicFunction","filter","Boolean","join","shouldIsolate","module","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/runtime/CompatRuntimeModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\n\n/** @typedef {import(\"../MainTemplate\")} MainTemplate */\n\nclass CompatRuntimeModule extends RuntimeModule {\n\tconstructor() {\n\t\tsuper(\"compat\", RuntimeModule.STAGE_ATTACH);\n\t\tthis.fullHash = true;\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\tconst { chunkGraph, chunk, compilation } = this;\n\t\tconst {\n\t\t\truntimeTemplate,\n\t\t\tmainTemplate,\n\t\t\tmoduleTemplates,\n\t\t\tdependencyTemplates\n\t\t} = compilation;\n\t\tconst bootstrap = mainTemplate.hooks.bootstrap.call(\n\t\t\t\"\",\n\t\t\tchunk,\n\t\t\tcompilation.hash || \"XXXX\",\n\t\t\tmoduleTemplates.javascript,\n\t\t\tdependencyTemplates\n\t\t);\n\t\tconst localVars = mainTemplate.hooks.localVars.call(\n\t\t\t\"\",\n\t\t\tchunk,\n\t\t\tcompilation.hash || \"XXXX\"\n\t\t);\n\t\tconst requireExtensions = mainTemplate.hooks.requireExtensions.call(\n\t\t\t\"\",\n\t\t\tchunk,\n\t\t\tcompilation.hash || \"XXXX\"\n\t\t);\n\t\tconst runtimeRequirements = chunkGraph.getTreeRuntimeRequirements(chunk);\n\t\tlet requireEnsure = \"\";\n\t\tif (runtimeRequirements.has(RuntimeGlobals.ensureChunk)) {\n\t\t\tconst requireEnsureHandler = mainTemplate.hooks.requireEnsure.call(\n\t\t\t\t\"\",\n\t\t\t\tchunk,\n\t\t\t\tcompilation.hash || \"XXXX\",\n\t\t\t\t\"chunkId\"\n\t\t\t);\n\t\t\tif (requireEnsureHandler) {\n\t\t\t\trequireEnsure = `${\n\t\t\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t\t\t}.compat = ${runtimeTemplate.basicFunction(\n\t\t\t\t\t\"chunkId, promises\",\n\t\t\t\t\trequireEnsureHandler\n\t\t\t\t)};`;\n\t\t\t}\n\t\t}\n\t\treturn [bootstrap, localVars, requireEnsure, requireExtensions]\n\t\t\t.filter(Boolean)\n\t\t\t.join(\"\\n\");\n\t}\n\n\t/**\n\t * @returns {boolean} true, if the runtime module should get it's own scope\n\t */\n\tshouldIsolate() {\n\t\t// We avoid isolating this to have better backward-compat\n\t\treturn false;\n\t}\n}\n\nmodule.exports = CompatRuntimeModule;\n"],"mappings":"AAAA;AACA;AACA;AAEA;;AAEA,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAD,CAA9B;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,kBAAD,CAA7B;AAEA;;;AAEA,MAAME,mBAAN,SAAkCD,aAAlC,CAAgD;EAC/CE,WAAW,GAAG;IACb,MAAM,QAAN,EAAgBF,aAAa,CAACG,YAA9B;IACA,KAAKC,QAAL,GAAgB,IAAhB;EACA;EAED;AACD;AACA;;;EACCC,QAAQ,GAAG;IACV,MAAM;MAAEC,UAAF;MAAcC,KAAd;MAAqBC;IAArB,IAAqC,IAA3C;IACA,MAAM;MACLC,eADK;MAELC,YAFK;MAGLC,eAHK;MAILC;IAJK,IAKFJ,WALJ;IAMA,MAAMK,SAAS,GAAGH,YAAY,CAACI,KAAb,CAAmBD,SAAnB,CAA6BE,IAA7B,CACjB,EADiB,EAEjBR,KAFiB,EAGjBC,WAAW,CAACQ,IAAZ,IAAoB,MAHH,EAIjBL,eAAe,CAACM,UAJC,EAKjBL,mBALiB,CAAlB;IAOA,MAAMM,SAAS,GAAGR,YAAY,CAACI,KAAb,CAAmBI,SAAnB,CAA6BH,IAA7B,CACjB,EADiB,EAEjBR,KAFiB,EAGjBC,WAAW,CAACQ,IAAZ,IAAoB,MAHH,CAAlB;IAKA,MAAMG,iBAAiB,GAAGT,YAAY,CAACI,KAAb,CAAmBK,iBAAnB,CAAqCJ,IAArC,CACzB,EADyB,EAEzBR,KAFyB,EAGzBC,WAAW,CAACQ,IAAZ,IAAoB,MAHK,CAA1B;IAKA,MAAMI,mBAAmB,GAAGd,UAAU,CAACe,0BAAX,CAAsCd,KAAtC,CAA5B;IACA,IAAIe,aAAa,GAAG,EAApB;;IACA,IAAIF,mBAAmB,CAACG,GAApB,CAAwBzB,cAAc,CAAC0B,WAAvC,CAAJ,EAAyD;MACxD,MAAMC,oBAAoB,GAAGf,YAAY,CAACI,KAAb,CAAmBQ,aAAnB,CAAiCP,IAAjC,CAC5B,EAD4B,EAE5BR,KAF4B,EAG5BC,WAAW,CAACQ,IAAZ,IAAoB,MAHQ,EAI5B,SAJ4B,CAA7B;;MAMA,IAAIS,oBAAJ,EAA0B;QACzBH,aAAa,GAAI,GAChBxB,cAAc,CAAC4B,mBACf,aAAYjB,eAAe,CAACkB,aAAhB,CACZ,mBADY,EAEZF,oBAFY,CAGX,GALF;MAMA;IACD;;IACD,OAAO,CAACZ,SAAD,EAAYK,SAAZ,EAAuBI,aAAvB,EAAsCH,iBAAtC,EACLS,MADK,CACEC,OADF,EAELC,IAFK,CAEA,IAFA,CAAP;EAGA;EAED;AACD;AACA;;;EACCC,aAAa,GAAG;IACf;IACA,OAAO,KAAP;EACA;;AA/D8C;;AAkEhDC,MAAM,CAACC,OAAP,GAAiBhC,mBAAjB"},"metadata":{},"sourceType":"script"}