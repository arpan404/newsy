{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  RawSource\n} = require(\"webpack-sources\");\n\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\n\nconst Module = require(\"../Module\");\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst {\n  rangeToString,\n  stringifyHoley\n} = require(\"../util/semver\");\n\nconst ConsumeSharedFallbackDependency = require(\"./ConsumeSharedFallbackDependency\");\n/** @typedef {import(\"../../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n\n/** @typedef {import(\"../Compilation\")} Compilation */\n\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n\n/** @typedef {import(\"../Module\").CodeGenerationContext} CodeGenerationContext */\n\n/** @typedef {import(\"../Module\").CodeGenerationResult} CodeGenerationResult */\n\n/** @typedef {import(\"../Module\").LibIdentOptions} LibIdentOptions */\n\n/** @typedef {import(\"../Module\").NeedBuildContext} NeedBuildContext */\n\n/** @typedef {import(\"../RequestShortener\")} RequestShortener */\n\n/** @typedef {import(\"../ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\n\n/** @typedef {import(\"../util/semver\").SemVerRange} SemVerRange */\n\n/**\n * @typedef {Object} ConsumeOptions\n * @property {string=} import fallback request\n * @property {string=} importResolved resolved fallback request\n * @property {string} shareKey global share key\n * @property {string} shareScope share scope\n * @property {SemVerRange | false | undefined} requiredVersion version requirement\n * @property {string} packageName package name to determine required version automatically\n * @property {boolean} strictVersion don't use shared version even if version isn't valid\n * @property {boolean} singleton use single global version\n * @property {boolean} eager include the fallback module in a sync way\n */\n\n\nconst TYPES = new Set([\"consume-shared\"]);\n\nclass ConsumeSharedModule extends Module {\n  /**\n   * @param {string} context context\n   * @param {ConsumeOptions} options consume options\n   */\n  constructor(context, options) {\n    super(\"consume-shared-module\", context);\n    this.options = options;\n  }\n  /**\n   * @returns {string} a unique identifier of the module\n   */\n\n\n  identifier() {\n    const {\n      shareKey,\n      shareScope,\n      importResolved,\n      requiredVersion,\n      strictVersion,\n      singleton,\n      eager\n    } = this.options;\n    return `consume-shared-module|${shareScope}|${shareKey}|${requiredVersion && rangeToString(requiredVersion)}|${strictVersion}|${importResolved}|${singleton}|${eager}`;\n  }\n  /**\n   * @param {RequestShortener} requestShortener the request shortener\n   * @returns {string} a user readable identifier of the module\n   */\n\n\n  readableIdentifier(requestShortener) {\n    const {\n      shareKey,\n      shareScope,\n      importResolved,\n      requiredVersion,\n      strictVersion,\n      singleton,\n      eager\n    } = this.options;\n    return `consume shared module (${shareScope}) ${shareKey}@${requiredVersion ? rangeToString(requiredVersion) : \"*\"}${strictVersion ? \" (strict)\" : \"\"}${singleton ? \" (singleton)\" : \"\"}${importResolved ? ` (fallback: ${requestShortener.shorten(importResolved)})` : \"\"}${eager ? \" (eager)\" : \"\"}`;\n  }\n  /**\n   * @param {LibIdentOptions} options options\n   * @returns {string | null} an identifier for library inclusion\n   */\n\n\n  libIdent(options) {\n    const {\n      shareKey,\n      shareScope,\n      import: request\n    } = this.options;\n    return `${this.layer ? `(${this.layer})/` : \"\"}webpack/sharing/consume/${shareScope}/${shareKey}${request ? `/${request}` : \"\"}`;\n  }\n  /**\n   * @param {NeedBuildContext} context context info\n   * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n   * @returns {void}\n   */\n\n\n  needBuild(context, callback) {\n    callback(null, !this.buildInfo);\n  }\n  /**\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {ResolverWithOptions} resolver the resolver\n   * @param {InputFileSystem} fs the file system\n   * @param {function(WebpackError=): void} callback callback function\n   * @returns {void}\n   */\n\n\n  build(options, compilation, resolver, fs, callback) {\n    this.buildMeta = {};\n    this.buildInfo = {};\n\n    if (this.options.import) {\n      const dep = new ConsumeSharedFallbackDependency(this.options.import);\n\n      if (this.options.eager) {\n        this.addDependency(dep);\n      } else {\n        const block = new AsyncDependenciesBlock({});\n        block.addDependency(dep);\n        this.addBlock(block);\n      }\n    }\n\n    callback();\n  }\n  /**\n   * @returns {Set<string>} types available (do not mutate)\n   */\n\n\n  getSourceTypes() {\n    return TYPES;\n  }\n  /**\n   * @param {string=} type the source type for which the size should be estimated\n   * @returns {number} the estimated size of the module (must be non-zero)\n   */\n\n\n  size(type) {\n    return 42;\n  }\n  /**\n   * @param {Hash} hash the hash used to track dependencies\n   * @param {UpdateHashContext} context context\n   * @returns {void}\n   */\n\n\n  updateHash(hash, context) {\n    hash.update(JSON.stringify(this.options));\n    super.updateHash(hash, context);\n  }\n  /**\n   * @param {CodeGenerationContext} context context for code generation\n   * @returns {CodeGenerationResult} result\n   */\n\n\n  codeGeneration(_ref) {\n    let {\n      chunkGraph,\n      moduleGraph,\n      runtimeTemplate\n    } = _ref;\n    const runtimeRequirements = new Set([RuntimeGlobals.shareScopeMap]);\n    const {\n      shareScope,\n      shareKey,\n      strictVersion,\n      requiredVersion,\n      import: request,\n      singleton,\n      eager\n    } = this.options;\n    let fallbackCode;\n\n    if (request) {\n      if (eager) {\n        const dep = this.dependencies[0];\n        fallbackCode = runtimeTemplate.syncModuleFactory({\n          dependency: dep,\n          chunkGraph,\n          runtimeRequirements,\n          request: this.options.import\n        });\n      } else {\n        const block = this.blocks[0];\n        fallbackCode = runtimeTemplate.asyncModuleFactory({\n          block,\n          chunkGraph,\n          runtimeRequirements,\n          request: this.options.import\n        });\n      }\n    }\n\n    let fn = \"load\";\n    const args = [JSON.stringify(shareScope), JSON.stringify(shareKey)];\n\n    if (requiredVersion) {\n      if (strictVersion) {\n        fn += \"Strict\";\n      }\n\n      if (singleton) {\n        fn += \"Singleton\";\n      }\n\n      args.push(stringifyHoley(requiredVersion));\n      fn += \"VersionCheck\";\n    } else {\n      if (singleton) {\n        fn += \"Singleton\";\n      }\n    }\n\n    if (fallbackCode) {\n      fn += \"Fallback\";\n      args.push(fallbackCode);\n    }\n\n    const code = runtimeTemplate.returningFunction(`${fn}(${args.join(\", \")})`);\n    const sources = new Map();\n    sources.set(\"consume-shared\", new RawSource(code));\n    return {\n      runtimeRequirements,\n      sources\n    };\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.options);\n    super.serialize(context);\n  }\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.options = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(ConsumeSharedModule, \"webpack/lib/sharing/ConsumeSharedModule\");\nmodule.exports = ConsumeSharedModule;","map":{"version":3,"names":["RawSource","require","AsyncDependenciesBlock","Module","RuntimeGlobals","makeSerializable","rangeToString","stringifyHoley","ConsumeSharedFallbackDependency","TYPES","Set","ConsumeSharedModule","constructor","context","options","identifier","shareKey","shareScope","importResolved","requiredVersion","strictVersion","singleton","eager","readableIdentifier","requestShortener","shorten","libIdent","import","request","layer","needBuild","callback","buildInfo","build","compilation","resolver","fs","buildMeta","dep","addDependency","block","addBlock","getSourceTypes","size","type","updateHash","hash","update","JSON","stringify","codeGeneration","chunkGraph","moduleGraph","runtimeTemplate","runtimeRequirements","shareScopeMap","fallbackCode","dependencies","syncModuleFactory","dependency","blocks","asyncModuleFactory","fn","args","push","code","returningFunction","join","sources","Map","set","serialize","write","deserialize","read","module","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/sharing/ConsumeSharedModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { RawSource } = require(\"webpack-sources\");\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\nconst Module = require(\"../Module\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst { rangeToString, stringifyHoley } = require(\"../util/semver\");\nconst ConsumeSharedFallbackDependency = require(\"./ConsumeSharedFallbackDependency\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"../Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"../Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"../Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"../RequestShortener\")} RequestShortener */\n/** @typedef {import(\"../ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\n/** @typedef {import(\"../util/semver\").SemVerRange} SemVerRange */\n\n/**\n * @typedef {Object} ConsumeOptions\n * @property {string=} import fallback request\n * @property {string=} importResolved resolved fallback request\n * @property {string} shareKey global share key\n * @property {string} shareScope share scope\n * @property {SemVerRange | false | undefined} requiredVersion version requirement\n * @property {string} packageName package name to determine required version automatically\n * @property {boolean} strictVersion don't use shared version even if version isn't valid\n * @property {boolean} singleton use single global version\n * @property {boolean} eager include the fallback module in a sync way\n */\n\nconst TYPES = new Set([\"consume-shared\"]);\n\nclass ConsumeSharedModule extends Module {\n\t/**\n\t * @param {string} context context\n\t * @param {ConsumeOptions} options consume options\n\t */\n\tconstructor(context, options) {\n\t\tsuper(\"consume-shared-module\", context);\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * @returns {string} a unique identifier of the module\n\t */\n\tidentifier() {\n\t\tconst {\n\t\t\tshareKey,\n\t\t\tshareScope,\n\t\t\timportResolved,\n\t\t\trequiredVersion,\n\t\t\tstrictVersion,\n\t\t\tsingleton,\n\t\t\teager\n\t\t} = this.options;\n\t\treturn `consume-shared-module|${shareScope}|${shareKey}|${\n\t\t\trequiredVersion && rangeToString(requiredVersion)\n\t\t}|${strictVersion}|${importResolved}|${singleton}|${eager}`;\n\t}\n\n\t/**\n\t * @param {RequestShortener} requestShortener the request shortener\n\t * @returns {string} a user readable identifier of the module\n\t */\n\treadableIdentifier(requestShortener) {\n\t\tconst {\n\t\t\tshareKey,\n\t\t\tshareScope,\n\t\t\timportResolved,\n\t\t\trequiredVersion,\n\t\t\tstrictVersion,\n\t\t\tsingleton,\n\t\t\teager\n\t\t} = this.options;\n\t\treturn `consume shared module (${shareScope}) ${shareKey}@${\n\t\t\trequiredVersion ? rangeToString(requiredVersion) : \"*\"\n\t\t}${strictVersion ? \" (strict)\" : \"\"}${singleton ? \" (singleton)\" : \"\"}${\n\t\t\timportResolved\n\t\t\t\t? ` (fallback: ${requestShortener.shorten(importResolved)})`\n\t\t\t\t: \"\"\n\t\t}${eager ? \" (eager)\" : \"\"}`;\n\t}\n\n\t/**\n\t * @param {LibIdentOptions} options options\n\t * @returns {string | null} an identifier for library inclusion\n\t */\n\tlibIdent(options) {\n\t\tconst { shareKey, shareScope, import: request } = this.options;\n\t\treturn `${\n\t\t\tthis.layer ? `(${this.layer})/` : \"\"\n\t\t}webpack/sharing/consume/${shareScope}/${shareKey}${\n\t\t\trequest ? `/${request}` : \"\"\n\t\t}`;\n\t}\n\n\t/**\n\t * @param {NeedBuildContext} context context info\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n\t * @returns {void}\n\t */\n\tneedBuild(context, callback) {\n\t\tcallback(null, !this.buildInfo);\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {function(WebpackError=): void} callback callback function\n\t * @returns {void}\n\t */\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {};\n\t\tif (this.options.import) {\n\t\t\tconst dep = new ConsumeSharedFallbackDependency(this.options.import);\n\t\t\tif (this.options.eager) {\n\t\t\t\tthis.addDependency(dep);\n\t\t\t} else {\n\t\t\t\tconst block = new AsyncDependenciesBlock({});\n\t\t\t\tblock.addDependency(dep);\n\t\t\t\tthis.addBlock(block);\n\t\t\t}\n\t\t}\n\t\tcallback();\n\t}\n\n\t/**\n\t * @returns {Set<string>} types available (do not mutate)\n\t */\n\tgetSourceTypes() {\n\t\treturn TYPES;\n\t}\n\n\t/**\n\t * @param {string=} type the source type for which the size should be estimated\n\t * @returns {number} the estimated size of the module (must be non-zero)\n\t */\n\tsize(type) {\n\t\treturn 42;\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @param {UpdateHashContext} context context\n\t * @returns {void}\n\t */\n\tupdateHash(hash, context) {\n\t\thash.update(JSON.stringify(this.options));\n\t\tsuper.updateHash(hash, context);\n\t}\n\n\t/**\n\t * @param {CodeGenerationContext} context context for code generation\n\t * @returns {CodeGenerationResult} result\n\t */\n\tcodeGeneration({ chunkGraph, moduleGraph, runtimeTemplate }) {\n\t\tconst runtimeRequirements = new Set([RuntimeGlobals.shareScopeMap]);\n\t\tconst {\n\t\t\tshareScope,\n\t\t\tshareKey,\n\t\t\tstrictVersion,\n\t\t\trequiredVersion,\n\t\t\timport: request,\n\t\t\tsingleton,\n\t\t\teager\n\t\t} = this.options;\n\t\tlet fallbackCode;\n\t\tif (request) {\n\t\t\tif (eager) {\n\t\t\t\tconst dep = this.dependencies[0];\n\t\t\t\tfallbackCode = runtimeTemplate.syncModuleFactory({\n\t\t\t\t\tdependency: dep,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\truntimeRequirements,\n\t\t\t\t\trequest: this.options.import\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst block = this.blocks[0];\n\t\t\t\tfallbackCode = runtimeTemplate.asyncModuleFactory({\n\t\t\t\t\tblock,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\truntimeRequirements,\n\t\t\t\t\trequest: this.options.import\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tlet fn = \"load\";\n\t\tconst args = [JSON.stringify(shareScope), JSON.stringify(shareKey)];\n\t\tif (requiredVersion) {\n\t\t\tif (strictVersion) {\n\t\t\t\tfn += \"Strict\";\n\t\t\t}\n\t\t\tif (singleton) {\n\t\t\t\tfn += \"Singleton\";\n\t\t\t}\n\t\t\targs.push(stringifyHoley(requiredVersion));\n\t\t\tfn += \"VersionCheck\";\n\t\t} else {\n\t\t\tif (singleton) {\n\t\t\t\tfn += \"Singleton\";\n\t\t\t}\n\t\t}\n\t\tif (fallbackCode) {\n\t\t\tfn += \"Fallback\";\n\t\t\targs.push(fallbackCode);\n\t\t}\n\t\tconst code = runtimeTemplate.returningFunction(`${fn}(${args.join(\", \")})`);\n\t\tconst sources = new Map();\n\t\tsources.set(\"consume-shared\", new RawSource(code));\n\t\treturn {\n\t\t\truntimeRequirements,\n\t\t\tsources\n\t\t};\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.options);\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.options = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tConsumeSharedModule,\n\t\"webpack/lib/sharing/ConsumeSharedModule\"\n);\n\nmodule.exports = ConsumeSharedModule;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}