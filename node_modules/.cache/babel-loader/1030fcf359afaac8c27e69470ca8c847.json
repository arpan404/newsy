{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\n\nconst EntryDependency = require(\"./dependencies/EntryDependency\");\n\nconst {\n  someInIterable\n} = require(\"./util/IterableHelpers\");\n\nconst {\n  compareModulesById\n} = require(\"./util/comparators\");\n\nconst {\n  dirname,\n  mkdirp\n} = require(\"./util/fs\");\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/**\n * @typedef {Object} ManifestModuleData\n * @property {string | number} id\n * @property {Object} buildMeta\n * @property {boolean | string[]} exports\n */\n\n\nclass LibManifestPlugin {\n  constructor(options) {\n    this.options = options;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    compiler.hooks.emit.tapAsync(\"LibManifestPlugin\", (compilation, callback) => {\n      const moduleGraph = compilation.moduleGraph;\n      asyncLib.forEach(Array.from(compilation.chunks), (chunk, callback) => {\n        if (!chunk.canBeInitial()) {\n          callback();\n          return;\n        }\n\n        const chunkGraph = compilation.chunkGraph;\n        const targetPath = compilation.getPath(this.options.path, {\n          chunk\n        });\n        const name = this.options.name && compilation.getPath(this.options.name, {\n          chunk\n        });\n        const content = Object.create(null);\n\n        for (const module of chunkGraph.getOrderedChunkModulesIterable(chunk, compareModulesById(chunkGraph))) {\n          if (this.options.entryOnly && !someInIterable(moduleGraph.getIncomingConnections(module), c => c.dependency instanceof EntryDependency)) {\n            continue;\n          }\n\n          const ident = module.libIdent({\n            context: this.options.context || compiler.options.context,\n            associatedObjectForCache: compiler.root\n          });\n\n          if (ident) {\n            const exportsInfo = moduleGraph.getExportsInfo(module);\n            const providedExports = exportsInfo.getProvidedExports();\n            /** @type {ManifestModuleData} */\n\n            const data = {\n              id: chunkGraph.getModuleId(module),\n              buildMeta: module.buildMeta,\n              exports: Array.isArray(providedExports) ? providedExports : undefined\n            };\n            content[ident] = data;\n          }\n        }\n\n        const manifest = {\n          name,\n          type: this.options.type,\n          content\n        }; // Apply formatting to content if format flag is true;\n\n        const manifestContent = this.options.format ? JSON.stringify(manifest, null, 2) : JSON.stringify(manifest);\n        const buffer = Buffer.from(manifestContent, \"utf8\");\n        mkdirp(compiler.intermediateFileSystem, dirname(compiler.intermediateFileSystem, targetPath), err => {\n          if (err) return callback(err);\n          compiler.intermediateFileSystem.writeFile(targetPath, buffer, callback);\n        });\n      }, callback);\n    });\n  }\n\n}\n\nmodule.exports = LibManifestPlugin;","map":{"version":3,"names":["asyncLib","require","EntryDependency","someInIterable","compareModulesById","dirname","mkdirp","LibManifestPlugin","constructor","options","apply","compiler","hooks","emit","tapAsync","compilation","callback","moduleGraph","forEach","Array","from","chunks","chunk","canBeInitial","chunkGraph","targetPath","getPath","path","name","content","Object","create","module","getOrderedChunkModulesIterable","entryOnly","getIncomingConnections","c","dependency","ident","libIdent","context","associatedObjectForCache","root","exportsInfo","getExportsInfo","providedExports","getProvidedExports","data","id","getModuleId","buildMeta","exports","isArray","undefined","manifest","type","manifestContent","format","JSON","stringify","buffer","Buffer","intermediateFileSystem","err","writeFile"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/LibManifestPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\nconst EntryDependency = require(\"./dependencies/EntryDependency\");\nconst { someInIterable } = require(\"./util/IterableHelpers\");\nconst { compareModulesById } = require(\"./util/comparators\");\nconst { dirname, mkdirp } = require(\"./util/fs\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/**\n * @typedef {Object} ManifestModuleData\n * @property {string | number} id\n * @property {Object} buildMeta\n * @property {boolean | string[]} exports\n */\n\nclass LibManifestPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.emit.tapAsync(\n\t\t\t\"LibManifestPlugin\",\n\t\t\t(compilation, callback) => {\n\t\t\t\tconst moduleGraph = compilation.moduleGraph;\n\t\t\t\tasyncLib.forEach(\n\t\t\t\t\tArray.from(compilation.chunks),\n\t\t\t\t\t(chunk, callback) => {\n\t\t\t\t\t\tif (!chunk.canBeInitial()) {\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst chunkGraph = compilation.chunkGraph;\n\t\t\t\t\t\tconst targetPath = compilation.getPath(this.options.path, {\n\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst name =\n\t\t\t\t\t\t\tthis.options.name &&\n\t\t\t\t\t\t\tcompilation.getPath(this.options.name, {\n\t\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tconst content = Object.create(null);\n\t\t\t\t\t\tfor (const module of chunkGraph.getOrderedChunkModulesIterable(\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tcompareModulesById(chunkGraph)\n\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tthis.options.entryOnly &&\n\t\t\t\t\t\t\t\t!someInIterable(\n\t\t\t\t\t\t\t\t\tmoduleGraph.getIncomingConnections(module),\n\t\t\t\t\t\t\t\t\tc => c.dependency instanceof EntryDependency\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst ident = module.libIdent({\n\t\t\t\t\t\t\t\tcontext: this.options.context || compiler.options.context,\n\t\t\t\t\t\t\t\tassociatedObjectForCache: compiler.root\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (ident) {\n\t\t\t\t\t\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(module);\n\t\t\t\t\t\t\t\tconst providedExports = exportsInfo.getProvidedExports();\n\t\t\t\t\t\t\t\t/** @type {ManifestModuleData} */\n\t\t\t\t\t\t\t\tconst data = {\n\t\t\t\t\t\t\t\t\tid: chunkGraph.getModuleId(module),\n\t\t\t\t\t\t\t\t\tbuildMeta: module.buildMeta,\n\t\t\t\t\t\t\t\t\texports: Array.isArray(providedExports)\n\t\t\t\t\t\t\t\t\t\t? providedExports\n\t\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tcontent[ident] = data;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst manifest = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\ttype: this.options.type,\n\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t};\n\t\t\t\t\t\t// Apply formatting to content if format flag is true;\n\t\t\t\t\t\tconst manifestContent = this.options.format\n\t\t\t\t\t\t\t? JSON.stringify(manifest, null, 2)\n\t\t\t\t\t\t\t: JSON.stringify(manifest);\n\t\t\t\t\t\tconst buffer = Buffer.from(manifestContent, \"utf8\");\n\t\t\t\t\t\tmkdirp(\n\t\t\t\t\t\t\tcompiler.intermediateFileSystem,\n\t\t\t\t\t\t\tdirname(compiler.intermediateFileSystem, targetPath),\n\t\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\tcompiler.intermediateFileSystem.writeFile(\n\t\t\t\t\t\t\t\t\ttargetPath,\n\t\t\t\t\t\t\t\t\tbuffer,\n\t\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = LibManifestPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}