{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst getGeneratedSourceInfo = require(\"./getGeneratedSourceInfo\");\n\nconst splitIntoLines = require(\"./splitIntoLines\");\n\nconst streamChunksOfRawSource = (source, onChunk, onSource, onName) => {\n  let line = 1;\n  const matches = splitIntoLines(source);\n  let match;\n\n  for (match of matches) {\n    onChunk(match, line, 0, -1, -1, -1, -1);\n    line++;\n  }\n\n  return matches.length === 0 || match.endsWith(\"\\n\") ? {\n    generatedLine: matches.length + 1,\n    generatedColumn: 0\n  } : {\n    generatedLine: matches.length,\n    generatedColumn: match.length\n  };\n};\n\nmodule.exports = (source, onChunk, onSource, onName, finalSource) => {\n  return finalSource ? getGeneratedSourceInfo(source) : streamChunksOfRawSource(source, onChunk, onSource, onName);\n};","map":{"version":3,"names":["getGeneratedSourceInfo","require","splitIntoLines","streamChunksOfRawSource","source","onChunk","onSource","onName","line","matches","match","length","endsWith","generatedLine","generatedColumn","module","exports","finalSource"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack-sources/lib/helpers/streamChunksOfRawSource.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst getGeneratedSourceInfo = require(\"./getGeneratedSourceInfo\");\nconst splitIntoLines = require(\"./splitIntoLines\");\n\nconst streamChunksOfRawSource = (source, onChunk, onSource, onName) => {\n\tlet line = 1;\n\tconst matches = splitIntoLines(source);\n\tlet match;\n\tfor (match of matches) {\n\t\tonChunk(match, line, 0, -1, -1, -1, -1);\n\t\tline++;\n\t}\n\treturn matches.length === 0 || match.endsWith(\"\\n\")\n\t\t? {\n\t\t\t\tgeneratedLine: matches.length + 1,\n\t\t\t\tgeneratedColumn: 0\n\t\t  }\n\t\t: {\n\t\t\t\tgeneratedLine: matches.length,\n\t\t\t\tgeneratedColumn: match.length\n\t\t  };\n};\n\nmodule.exports = (source, onChunk, onSource, onName, finalSource) => {\n\treturn finalSource\n\t\t? getGeneratedSourceInfo(source)\n\t\t: streamChunksOfRawSource(source, onChunk, onSource, onName);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,sBAAsB,GAAGC,OAAO,CAAC,0BAAD,CAAtC;;AACA,MAAMC,cAAc,GAAGD,OAAO,CAAC,kBAAD,CAA9B;;AAEA,MAAME,uBAAuB,GAAG,CAACC,MAAD,EAASC,OAAT,EAAkBC,QAAlB,EAA4BC,MAA5B,KAAuC;EACtE,IAAIC,IAAI,GAAG,CAAX;EACA,MAAMC,OAAO,GAAGP,cAAc,CAACE,MAAD,CAA9B;EACA,IAAIM,KAAJ;;EACA,KAAKA,KAAL,IAAcD,OAAd,EAAuB;IACtBJ,OAAO,CAACK,KAAD,EAAQF,IAAR,EAAc,CAAd,EAAiB,CAAC,CAAlB,EAAqB,CAAC,CAAtB,EAAyB,CAAC,CAA1B,EAA6B,CAAC,CAA9B,CAAP;IACAA,IAAI;EACJ;;EACD,OAAOC,OAAO,CAACE,MAAR,KAAmB,CAAnB,IAAwBD,KAAK,CAACE,QAAN,CAAe,IAAf,CAAxB,GACJ;IACAC,aAAa,EAAEJ,OAAO,CAACE,MAAR,GAAiB,CADhC;IAEAG,eAAe,EAAE;EAFjB,CADI,GAKJ;IACAD,aAAa,EAAEJ,OAAO,CAACE,MADvB;IAEAG,eAAe,EAAEJ,KAAK,CAACC;EAFvB,CALH;AASA,CAjBD;;AAmBAI,MAAM,CAACC,OAAP,GAAiB,CAACZ,MAAD,EAASC,OAAT,EAAkBC,QAAlB,EAA4BC,MAA5B,EAAoCU,WAApC,KAAoD;EACpE,OAAOA,WAAW,GACfjB,sBAAsB,CAACI,MAAD,CADP,GAEfD,uBAAuB,CAACC,MAAD,EAASC,OAAT,EAAkBC,QAAlB,EAA4BC,MAA5B,CAF1B;AAGA,CAJD"},"metadata":{},"sourceType":"script"}