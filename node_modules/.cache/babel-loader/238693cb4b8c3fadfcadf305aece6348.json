{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  STAGE_BASIC\n} = require(\"../OptimizationStages\");\n/** @typedef {import(\"../Chunk\")} Chunk */\n\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n\nclass EnsureChunkConditionsPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"EnsureChunkConditionsPlugin\", compilation => {\n      const handler = chunks => {\n        const chunkGraph = compilation.chunkGraph; // These sets are hoisted here to save memory\n        // They are cleared at the end of every loop\n\n        /** @type {Set<Chunk>} */\n\n        const sourceChunks = new Set();\n        /** @type {Set<ChunkGroup>} */\n\n        const chunkGroups = new Set();\n\n        for (const module of compilation.modules) {\n          if (!module.hasChunkCondition()) continue;\n\n          for (const chunk of chunkGraph.getModuleChunksIterable(module)) {\n            if (!module.chunkCondition(chunk, compilation)) {\n              sourceChunks.add(chunk);\n\n              for (const group of chunk.groupsIterable) {\n                chunkGroups.add(group);\n              }\n            }\n          }\n\n          if (sourceChunks.size === 0) continue;\n          /** @type {Set<Chunk>} */\n\n          const targetChunks = new Set();\n\n          chunkGroupLoop: for (const chunkGroup of chunkGroups) {\n            // Can module be placed in a chunk of this group?\n            for (const chunk of chunkGroup.chunks) {\n              if (module.chunkCondition(chunk, compilation)) {\n                targetChunks.add(chunk);\n                continue chunkGroupLoop;\n              }\n            } // We reached the entrypoint: fail\n\n\n            if (chunkGroup.isInitial()) {\n              throw new Error(\"Cannot fullfil chunk condition of \" + module.identifier());\n            } // Try placing in all parents\n\n\n            for (const group of chunkGroup.parentsIterable) {\n              chunkGroups.add(group);\n            }\n          }\n\n          for (const sourceChunk of sourceChunks) {\n            chunkGraph.disconnectChunkAndModule(sourceChunk, module);\n          }\n\n          for (const targetChunk of targetChunks) {\n            chunkGraph.connectChunkAndModule(targetChunk, module);\n          }\n\n          sourceChunks.clear();\n          chunkGroups.clear();\n        }\n      };\n\n      compilation.hooks.optimizeChunks.tap({\n        name: \"EnsureChunkConditionsPlugin\",\n        stage: STAGE_BASIC\n      }, handler);\n    });\n  }\n\n}\n\nmodule.exports = EnsureChunkConditionsPlugin;","map":{"version":3,"names":["STAGE_BASIC","require","EnsureChunkConditionsPlugin","apply","compiler","hooks","compilation","tap","handler","chunks","chunkGraph","sourceChunks","Set","chunkGroups","module","modules","hasChunkCondition","chunk","getModuleChunksIterable","chunkCondition","add","group","groupsIterable","size","targetChunks","chunkGroupLoop","chunkGroup","isInitial","Error","identifier","parentsIterable","sourceChunk","disconnectChunkAndModule","targetChunk","connectChunkAndModule","clear","optimizeChunks","name","stage","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/optimize/EnsureChunkConditionsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { STAGE_BASIC } = require(\"../OptimizationStages\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass EnsureChunkConditionsPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"EnsureChunkConditionsPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tconst handler = chunks => {\n\t\t\t\t\tconst chunkGraph = compilation.chunkGraph;\n\t\t\t\t\t// These sets are hoisted here to save memory\n\t\t\t\t\t// They are cleared at the end of every loop\n\t\t\t\t\t/** @type {Set<Chunk>} */\n\t\t\t\t\tconst sourceChunks = new Set();\n\t\t\t\t\t/** @type {Set<ChunkGroup>} */\n\t\t\t\t\tconst chunkGroups = new Set();\n\t\t\t\t\tfor (const module of compilation.modules) {\n\t\t\t\t\t\tif (!module.hasChunkCondition()) continue;\n\t\t\t\t\t\tfor (const chunk of chunkGraph.getModuleChunksIterable(module)) {\n\t\t\t\t\t\t\tif (!module.chunkCondition(chunk, compilation)) {\n\t\t\t\t\t\t\t\tsourceChunks.add(chunk);\n\t\t\t\t\t\t\t\tfor (const group of chunk.groupsIterable) {\n\t\t\t\t\t\t\t\t\tchunkGroups.add(group);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (sourceChunks.size === 0) continue;\n\t\t\t\t\t\t/** @type {Set<Chunk>} */\n\t\t\t\t\t\tconst targetChunks = new Set();\n\t\t\t\t\t\tchunkGroupLoop: for (const chunkGroup of chunkGroups) {\n\t\t\t\t\t\t\t// Can module be placed in a chunk of this group?\n\t\t\t\t\t\t\tfor (const chunk of chunkGroup.chunks) {\n\t\t\t\t\t\t\t\tif (module.chunkCondition(chunk, compilation)) {\n\t\t\t\t\t\t\t\t\ttargetChunks.add(chunk);\n\t\t\t\t\t\t\t\t\tcontinue chunkGroupLoop;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// We reached the entrypoint: fail\n\t\t\t\t\t\t\tif (chunkGroup.isInitial()) {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\"Cannot fullfil chunk condition of \" + module.identifier()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Try placing in all parents\n\t\t\t\t\t\t\tfor (const group of chunkGroup.parentsIterable) {\n\t\t\t\t\t\t\t\tchunkGroups.add(group);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const sourceChunk of sourceChunks) {\n\t\t\t\t\t\t\tchunkGraph.disconnectChunkAndModule(sourceChunk, module);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const targetChunk of targetChunks) {\n\t\t\t\t\t\t\tchunkGraph.connectChunkAndModule(targetChunk, module);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsourceChunks.clear();\n\t\t\t\t\t\tchunkGroups.clear();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tcompilation.hooks.optimizeChunks.tap(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"EnsureChunkConditionsPlugin\",\n\t\t\t\t\t\tstage: STAGE_BASIC\n\t\t\t\t\t},\n\t\t\t\t\thandler\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = EnsureChunkConditionsPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAM;EAAEA;AAAF,IAAkBC,OAAO,CAAC,uBAAD,CAA/B;AAEA;;AACA;;AACA;;;AAEA,MAAMC,2BAAN,CAAkC;EACjC;AACD;AACA;AACA;AACA;EACCC,KAAK,CAACC,QAAD,EAAW;IACfA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,6BADD,EAECD,WAAW,IAAI;MACd,MAAME,OAAO,GAAGC,MAAM,IAAI;QACzB,MAAMC,UAAU,GAAGJ,WAAW,CAACI,UAA/B,CADyB,CAEzB;QACA;;QACA;;QACA,MAAMC,YAAY,GAAG,IAAIC,GAAJ,EAArB;QACA;;QACA,MAAMC,WAAW,GAAG,IAAID,GAAJ,EAApB;;QACA,KAAK,MAAME,MAAX,IAAqBR,WAAW,CAACS,OAAjC,EAA0C;UACzC,IAAI,CAACD,MAAM,CAACE,iBAAP,EAAL,EAAiC;;UACjC,KAAK,MAAMC,KAAX,IAAoBP,UAAU,CAACQ,uBAAX,CAAmCJ,MAAnC,CAApB,EAAgE;YAC/D,IAAI,CAACA,MAAM,CAACK,cAAP,CAAsBF,KAAtB,EAA6BX,WAA7B,CAAL,EAAgD;cAC/CK,YAAY,CAACS,GAAb,CAAiBH,KAAjB;;cACA,KAAK,MAAMI,KAAX,IAAoBJ,KAAK,CAACK,cAA1B,EAA0C;gBACzCT,WAAW,CAACO,GAAZ,CAAgBC,KAAhB;cACA;YACD;UACD;;UACD,IAAIV,YAAY,CAACY,IAAb,KAAsB,CAA1B,EAA6B;UAC7B;;UACA,MAAMC,YAAY,GAAG,IAAIZ,GAAJ,EAArB;;UACAa,cAAc,EAAE,KAAK,MAAMC,UAAX,IAAyBb,WAAzB,EAAsC;YACrD;YACA,KAAK,MAAMI,KAAX,IAAoBS,UAAU,CAACjB,MAA/B,EAAuC;cACtC,IAAIK,MAAM,CAACK,cAAP,CAAsBF,KAAtB,EAA6BX,WAA7B,CAAJ,EAA+C;gBAC9CkB,YAAY,CAACJ,GAAb,CAAiBH,KAAjB;gBACA,SAASQ,cAAT;cACA;YACD,CAPoD,CAQrD;;;YACA,IAAIC,UAAU,CAACC,SAAX,EAAJ,EAA4B;cAC3B,MAAM,IAAIC,KAAJ,CACL,uCAAuCd,MAAM,CAACe,UAAP,EADlC,CAAN;YAGA,CAboD,CAcrD;;;YACA,KAAK,MAAMR,KAAX,IAAoBK,UAAU,CAACI,eAA/B,EAAgD;cAC/CjB,WAAW,CAACO,GAAZ,CAAgBC,KAAhB;YACA;UACD;;UACD,KAAK,MAAMU,WAAX,IAA0BpB,YAA1B,EAAwC;YACvCD,UAAU,CAACsB,wBAAX,CAAoCD,WAApC,EAAiDjB,MAAjD;UACA;;UACD,KAAK,MAAMmB,WAAX,IAA0BT,YAA1B,EAAwC;YACvCd,UAAU,CAACwB,qBAAX,CAAiCD,WAAjC,EAA8CnB,MAA9C;UACA;;UACDH,YAAY,CAACwB,KAAb;UACAtB,WAAW,CAACsB,KAAZ;QACA;MACD,CAjDD;;MAkDA7B,WAAW,CAACD,KAAZ,CAAkB+B,cAAlB,CAAiC7B,GAAjC,CACC;QACC8B,IAAI,EAAE,6BADP;QAECC,KAAK,EAAEtC;MAFR,CADD,EAKCQ,OALD;IAOA,CA5DF;EA8DA;;AArEgC;;AAuElCM,MAAM,CAACyB,OAAP,GAAiBrC,2BAAjB"},"metadata":{},"sourceType":"script"}