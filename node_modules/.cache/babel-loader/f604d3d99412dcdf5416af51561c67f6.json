{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst t = require(\"@webassemblyjs/ast\");\n\nconst {\n  decode\n} = require(\"@webassemblyjs/wasm-parser\");\n\nconst Parser = require(\"../Parser\");\n\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\n\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\n\n\nconst decoderOpts = {\n  ignoreCodeSection: true,\n  ignoreDataSection: true,\n  // this will avoid having to lookup with identifiers in the ModuleContext\n  ignoreCustomNameSection: true\n};\n\nclass WebAssemblyParser extends Parser {\n  constructor(options) {\n    super();\n    this.hooks = Object.freeze({});\n    this.options = options;\n  }\n  /**\n   * @param {string | Buffer | PreparsedAst} source the source to parse\n   * @param {ParserState} state the parser state\n   * @returns {ParserState} the parser state\n   */\n\n\n  parse(source, state) {\n    if (!Buffer.isBuffer(source)) {\n      throw new Error(\"WebAssemblyParser input must be a Buffer\");\n    } // flag it as async module\n\n\n    state.module.buildInfo.strict = true;\n    state.module.buildMeta.exportsType = \"namespace\";\n    state.module.buildMeta.async = true; // parse it\n\n    const program = decode(source, decoderOpts);\n    const module = program.body[0];\n    const exports = [];\n    t.traverse(module, {\n      ModuleExport(_ref) {\n        let {\n          node\n        } = _ref;\n        exports.push(node.name);\n      },\n\n      ModuleImport(_ref2) {\n        let {\n          node\n        } = _ref2;\n        const dep = new WebAssemblyImportDependency(node.module, node.name, node.descr, false);\n        state.module.addDependency(dep);\n      }\n\n    });\n    state.module.addDependency(new StaticExportsDependency(exports, false));\n    return state;\n  }\n\n}\n\nmodule.exports = WebAssemblyParser;","map":{"version":3,"names":["t","require","decode","Parser","StaticExportsDependency","WebAssemblyImportDependency","decoderOpts","ignoreCodeSection","ignoreDataSection","ignoreCustomNameSection","WebAssemblyParser","constructor","options","hooks","Object","freeze","parse","source","state","Buffer","isBuffer","Error","module","buildInfo","strict","buildMeta","exportsType","async","program","body","exports","traverse","ModuleExport","node","push","name","ModuleImport","dep","descr","addDependency"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/wasm-async/AsyncWebAssemblyParser.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst t = require(\"@webassemblyjs/ast\");\nconst { decode } = require(\"@webassemblyjs/wasm-parser\");\nconst Parser = require(\"../Parser\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\n\nconst decoderOpts = {\n\tignoreCodeSection: true,\n\tignoreDataSection: true,\n\n\t// this will avoid having to lookup with identifiers in the ModuleContext\n\tignoreCustomNameSection: true\n};\n\nclass WebAssemblyParser extends Parser {\n\tconstructor(options) {\n\t\tsuper();\n\t\tthis.hooks = Object.freeze({});\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * @param {string | Buffer | PreparsedAst} source the source to parse\n\t * @param {ParserState} state the parser state\n\t * @returns {ParserState} the parser state\n\t */\n\tparse(source, state) {\n\t\tif (!Buffer.isBuffer(source)) {\n\t\t\tthrow new Error(\"WebAssemblyParser input must be a Buffer\");\n\t\t}\n\n\t\t// flag it as async module\n\t\tstate.module.buildInfo.strict = true;\n\t\tstate.module.buildMeta.exportsType = \"namespace\";\n\t\tstate.module.buildMeta.async = true;\n\n\t\t// parse it\n\t\tconst program = decode(source, decoderOpts);\n\t\tconst module = program.body[0];\n\n\t\tconst exports = [];\n\t\tt.traverse(module, {\n\t\t\tModuleExport({ node }) {\n\t\t\t\texports.push(node.name);\n\t\t\t},\n\n\t\t\tModuleImport({ node }) {\n\t\t\t\tconst dep = new WebAssemblyImportDependency(\n\t\t\t\t\tnode.module,\n\t\t\t\t\tnode.name,\n\t\t\t\t\tnode.descr,\n\t\t\t\t\tfalse\n\t\t\t\t);\n\n\t\t\t\tstate.module.addDependency(dep);\n\t\t\t}\n\t\t});\n\n\t\tstate.module.addDependency(new StaticExportsDependency(exports, false));\n\n\t\treturn state;\n\t}\n}\n\nmodule.exports = WebAssemblyParser;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,oBAAD,CAAjB;;AACA,MAAM;EAAEC;AAAF,IAAaD,OAAO,CAAC,4BAAD,CAA1B;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAMG,uBAAuB,GAAGH,OAAO,CAAC,yCAAD,CAAvC;;AACA,MAAMI,2BAA2B,GAAGJ,OAAO,CAAC,6CAAD,CAA3C;AAEA;;AACA;;;AAEA,MAAMK,WAAW,GAAG;EACnBC,iBAAiB,EAAE,IADA;EAEnBC,iBAAiB,EAAE,IAFA;EAInB;EACAC,uBAAuB,EAAE;AALN,CAApB;;AAQA,MAAMC,iBAAN,SAAgCP,MAAhC,CAAuC;EACtCQ,WAAW,CAACC,OAAD,EAAU;IACpB;IACA,KAAKC,KAAL,GAAaC,MAAM,CAACC,MAAP,CAAc,EAAd,CAAb;IACA,KAAKH,OAAL,GAAeA,OAAf;EACA;EAED;AACD;AACA;AACA;AACA;;;EACCI,KAAK,CAACC,MAAD,EAASC,KAAT,EAAgB;IACpB,IAAI,CAACC,MAAM,CAACC,QAAP,CAAgBH,MAAhB,CAAL,EAA8B;MAC7B,MAAM,IAAII,KAAJ,CAAU,0CAAV,CAAN;IACA,CAHmB,CAKpB;;;IACAH,KAAK,CAACI,MAAN,CAAaC,SAAb,CAAuBC,MAAvB,GAAgC,IAAhC;IACAN,KAAK,CAACI,MAAN,CAAaG,SAAb,CAAuBC,WAAvB,GAAqC,WAArC;IACAR,KAAK,CAACI,MAAN,CAAaG,SAAb,CAAuBE,KAAvB,GAA+B,IAA/B,CARoB,CAUpB;;IACA,MAAMC,OAAO,GAAG1B,MAAM,CAACe,MAAD,EAASX,WAAT,CAAtB;IACA,MAAMgB,MAAM,GAAGM,OAAO,CAACC,IAAR,CAAa,CAAb,CAAf;IAEA,MAAMC,OAAO,GAAG,EAAhB;IACA9B,CAAC,CAAC+B,QAAF,CAAWT,MAAX,EAAmB;MAClBU,YAAY,OAAW;QAAA,IAAV;UAAEC;QAAF,CAAU;QACtBH,OAAO,CAACI,IAAR,CAAaD,IAAI,CAACE,IAAlB;MACA,CAHiB;;MAKlBC,YAAY,QAAW;QAAA,IAAV;UAAEH;QAAF,CAAU;QACtB,MAAMI,GAAG,GAAG,IAAIhC,2BAAJ,CACX4B,IAAI,CAACX,MADM,EAEXW,IAAI,CAACE,IAFM,EAGXF,IAAI,CAACK,KAHM,EAIX,KAJW,CAAZ;QAOApB,KAAK,CAACI,MAAN,CAAaiB,aAAb,CAA2BF,GAA3B;MACA;;IAdiB,CAAnB;IAiBAnB,KAAK,CAACI,MAAN,CAAaiB,aAAb,CAA2B,IAAInC,uBAAJ,CAA4B0B,OAA5B,EAAqC,KAArC,CAA3B;IAEA,OAAOZ,KAAP;EACA;;AA/CqC;;AAkDvCI,MAAM,CAACQ,OAAP,GAAiBpB,iBAAjB"},"metadata":{},"sourceType":"script"}