{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\n\nconst JsonGenerator = require(\"./JsonGenerator\");\n\nconst JsonParser = require(\"./JsonParser\");\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n\nconst validate = createSchemaValidation(require(\"../../schemas/plugins/JsonModulesPluginParser.check.js\"), () => require(\"../../schemas/plugins/JsonModulesPluginParser.json\"), {\n  name: \"Json Modules Plugin\",\n  baseDataPath: \"parser\"\n});\n\nclass JsonModulesPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"JsonModulesPlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      normalModuleFactory.hooks.createParser.for(\"json\").tap(\"JsonModulesPlugin\", parserOptions => {\n        validate(parserOptions);\n        return new JsonParser(parserOptions);\n      });\n      normalModuleFactory.hooks.createGenerator.for(\"json\").tap(\"JsonModulesPlugin\", () => {\n        return new JsonGenerator();\n      });\n    });\n  }\n\n}\n\nmodule.exports = JsonModulesPlugin;","map":{"version":3,"names":["createSchemaValidation","require","JsonGenerator","JsonParser","validate","name","baseDataPath","JsonModulesPlugin","apply","compiler","hooks","compilation","tap","normalModuleFactory","createParser","for","parserOptions","createGenerator","module","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/json/JsonModulesPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst JsonGenerator = require(\"./JsonGenerator\");\nconst JsonParser = require(\"./JsonParser\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nconst validate = createSchemaValidation(\n\trequire(\"../../schemas/plugins/JsonModulesPluginParser.check.js\"),\n\t() => require(\"../../schemas/plugins/JsonModulesPluginParser.json\"),\n\t{\n\t\tname: \"Json Modules Plugin\",\n\t\tbaseDataPath: \"parser\"\n\t}\n);\n\nclass JsonModulesPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"JsonModulesPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"json\")\n\t\t\t\t\t.tap(\"JsonModulesPlugin\", parserOptions => {\n\t\t\t\t\t\tvalidate(parserOptions);\n\n\t\t\t\t\t\treturn new JsonParser(parserOptions);\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"json\")\n\t\t\t\t\t.tap(\"JsonModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JsonGenerator();\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = JsonModulesPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,sBAAsB,GAAGC,OAAO,CAAC,kCAAD,CAAtC;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAA7B;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,cAAD,CAA1B;AAEA;;;AAEA,MAAMG,QAAQ,GAAGJ,sBAAsB,CACtCC,OAAO,CAAC,wDAAD,CAD+B,EAEtC,MAAMA,OAAO,CAAC,oDAAD,CAFyB,EAGtC;EACCI,IAAI,EAAE,qBADP;EAECC,YAAY,EAAE;AAFf,CAHsC,CAAvC;;AASA,MAAMC,iBAAN,CAAwB;EACvB;AACD;AACA;AACA;AACA;EACCC,KAAK,CAACC,QAAD,EAAW;IACfA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,mBADD,EAEC,CAACD,WAAD,WAA0C;MAAA,IAA5B;QAAEE;MAAF,CAA4B;MACzCA,mBAAmB,CAACH,KAApB,CAA0BI,YAA1B,CACEC,GADF,CACM,MADN,EAEEH,GAFF,CAEM,mBAFN,EAE2BI,aAAa,IAAI;QAC1CZ,QAAQ,CAACY,aAAD,CAAR;QAEA,OAAO,IAAIb,UAAJ,CAAea,aAAf,CAAP;MACA,CANF;MAOAH,mBAAmB,CAACH,KAApB,CAA0BO,eAA1B,CACEF,GADF,CACM,MADN,EAEEH,GAFF,CAEM,mBAFN,EAE2B,MAAM;QAC/B,OAAO,IAAIV,aAAJ,EAAP;MACA,CAJF;IAKA,CAfF;EAiBA;;AAxBsB;;AA2BxBgB,MAAM,CAACC,OAAP,GAAiBZ,iBAAjB"},"metadata":{},"sourceType":"script"}