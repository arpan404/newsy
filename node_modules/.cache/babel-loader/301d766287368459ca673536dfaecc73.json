{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  cachedSetProperty\n} = require(\"../util/cleverMerge\");\n\nconst ContextElementDependency = require(\"./ContextElementDependency\");\n\nconst RequireContextDependency = require(\"./RequireContextDependency\");\n\nconst RequireContextDependencyParserPlugin = require(\"./RequireContextDependencyParserPlugin\");\n/** @typedef {import(\"../../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @type {ResolveOptions} */\n\n\nconst EMPTY_RESOLVE_OPTIONS = {};\n\nclass RequireContextPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"RequireContextPlugin\", (compilation, _ref) => {\n      let {\n        contextModuleFactory,\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(RequireContextDependency, contextModuleFactory);\n      compilation.dependencyTemplates.set(RequireContextDependency, new RequireContextDependency.Template());\n      compilation.dependencyFactories.set(ContextElementDependency, normalModuleFactory);\n\n      const handler = (parser, parserOptions) => {\n        if (parserOptions.requireContext !== undefined && !parserOptions.requireContext) return;\n        new RequireContextDependencyParserPlugin().apply(parser);\n      };\n\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"RequireContextPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"RequireContextPlugin\", handler);\n      contextModuleFactory.hooks.alternativeRequests.tap(\"RequireContextPlugin\", (items, options) => {\n        if (items.length === 0) return items;\n        const finalResolveOptions = compiler.resolverFactory.get(\"normal\", cachedSetProperty(options.resolveOptions || EMPTY_RESOLVE_OPTIONS, \"dependencyType\", options.category)).options;\n        let newItems;\n\n        if (!finalResolveOptions.fullySpecified) {\n          newItems = [];\n\n          for (const item of items) {\n            const {\n              request,\n              context\n            } = item;\n\n            for (const ext of finalResolveOptions.extensions) {\n              if (request.endsWith(ext)) {\n                newItems.push({\n                  context,\n                  request: request.slice(0, -ext.length)\n                });\n              }\n            }\n\n            if (!finalResolveOptions.enforceExtension) {\n              newItems.push(item);\n            }\n          }\n\n          items = newItems;\n          newItems = [];\n\n          for (const obj of items) {\n            const {\n              request,\n              context\n            } = obj;\n\n            for (const mainFile of finalResolveOptions.mainFiles) {\n              if (request.endsWith(`/${mainFile}`)) {\n                newItems.push({\n                  context,\n                  request: request.slice(0, -mainFile.length)\n                });\n                newItems.push({\n                  context,\n                  request: request.slice(0, -mainFile.length - 1)\n                });\n              }\n            }\n\n            newItems.push(obj);\n          }\n\n          items = newItems;\n        }\n\n        newItems = [];\n\n        for (const item of items) {\n          let hideOriginal = false;\n\n          for (const modulesItems of finalResolveOptions.modules) {\n            if (Array.isArray(modulesItems)) {\n              for (const dir of modulesItems) {\n                if (item.request.startsWith(`./${dir}/`)) {\n                  newItems.push({\n                    context: item.context,\n                    request: item.request.slice(dir.length + 3)\n                  });\n                  hideOriginal = true;\n                }\n              }\n            } else {\n              const dir = modulesItems.replace(/\\\\/g, \"/\");\n              const fullPath = item.context.replace(/\\\\/g, \"/\") + item.request.slice(1);\n\n              if (fullPath.startsWith(dir)) {\n                newItems.push({\n                  context: item.context,\n                  request: fullPath.slice(dir.length + 1)\n                });\n              }\n            }\n          }\n\n          if (!hideOriginal) {\n            newItems.push(item);\n          }\n        }\n\n        return newItems;\n      });\n    });\n  }\n\n}\n\nmodule.exports = RequireContextPlugin;","map":{"version":3,"names":["cachedSetProperty","require","ContextElementDependency","RequireContextDependency","RequireContextDependencyParserPlugin","EMPTY_RESOLVE_OPTIONS","RequireContextPlugin","apply","compiler","hooks","compilation","tap","contextModuleFactory","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","parserOptions","requireContext","undefined","for","alternativeRequests","items","options","length","finalResolveOptions","resolverFactory","get","resolveOptions","category","newItems","fullySpecified","item","request","context","ext","extensions","endsWith","push","slice","enforceExtension","obj","mainFile","mainFiles","hideOriginal","modulesItems","modules","Array","isArray","dir","startsWith","replace","fullPath","module","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/dependencies/RequireContextPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { cachedSetProperty } = require(\"../util/cleverMerge\");\nconst ContextElementDependency = require(\"./ContextElementDependency\");\nconst RequireContextDependency = require(\"./RequireContextDependency\");\nconst RequireContextDependencyParserPlugin = require(\"./RequireContextDependencyParserPlugin\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @type {ResolveOptions} */\nconst EMPTY_RESOLVE_OPTIONS = {};\n\nclass RequireContextPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"RequireContextPlugin\",\n\t\t\t(compilation, { contextModuleFactory, normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRequireContextDependency,\n\t\t\t\t\tcontextModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireContextDependency,\n\t\t\t\t\tnew RequireContextDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tContextElementDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tparserOptions.requireContext !== undefined &&\n\t\t\t\t\t\t!parserOptions.requireContext\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew RequireContextDependencyParserPlugin().apply(parser);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"RequireContextPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"RequireContextPlugin\", handler);\n\n\t\t\t\tcontextModuleFactory.hooks.alternativeRequests.tap(\n\t\t\t\t\t\"RequireContextPlugin\",\n\t\t\t\t\t(items, options) => {\n\t\t\t\t\t\tif (items.length === 0) return items;\n\n\t\t\t\t\t\tconst finalResolveOptions = compiler.resolverFactory.get(\n\t\t\t\t\t\t\t\"normal\",\n\t\t\t\t\t\t\tcachedSetProperty(\n\t\t\t\t\t\t\t\toptions.resolveOptions || EMPTY_RESOLVE_OPTIONS,\n\t\t\t\t\t\t\t\t\"dependencyType\",\n\t\t\t\t\t\t\t\toptions.category\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t).options;\n\n\t\t\t\t\t\tlet newItems;\n\t\t\t\t\t\tif (!finalResolveOptions.fullySpecified) {\n\t\t\t\t\t\t\tnewItems = [];\n\t\t\t\t\t\t\tfor (const item of items) {\n\t\t\t\t\t\t\t\tconst { request, context } = item;\n\t\t\t\t\t\t\t\tfor (const ext of finalResolveOptions.extensions) {\n\t\t\t\t\t\t\t\t\tif (request.endsWith(ext)) {\n\t\t\t\t\t\t\t\t\t\tnewItems.push({\n\t\t\t\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\t\t\t\trequest: request.slice(0, -ext.length)\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!finalResolveOptions.enforceExtension) {\n\t\t\t\t\t\t\t\t\tnewItems.push(item);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\titems = newItems;\n\n\t\t\t\t\t\t\tnewItems = [];\n\t\t\t\t\t\t\tfor (const obj of items) {\n\t\t\t\t\t\t\t\tconst { request, context } = obj;\n\t\t\t\t\t\t\t\tfor (const mainFile of finalResolveOptions.mainFiles) {\n\t\t\t\t\t\t\t\t\tif (request.endsWith(`/${mainFile}`)) {\n\t\t\t\t\t\t\t\t\t\tnewItems.push({\n\t\t\t\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\t\t\t\trequest: request.slice(0, -mainFile.length)\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tnewItems.push({\n\t\t\t\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\t\t\t\trequest: request.slice(0, -mainFile.length - 1)\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tnewItems.push(obj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\titems = newItems;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnewItems = [];\n\t\t\t\t\t\tfor (const item of items) {\n\t\t\t\t\t\t\tlet hideOriginal = false;\n\t\t\t\t\t\t\tfor (const modulesItems of finalResolveOptions.modules) {\n\t\t\t\t\t\t\t\tif (Array.isArray(modulesItems)) {\n\t\t\t\t\t\t\t\t\tfor (const dir of modulesItems) {\n\t\t\t\t\t\t\t\t\t\tif (item.request.startsWith(`./${dir}/`)) {\n\t\t\t\t\t\t\t\t\t\t\tnewItems.push({\n\t\t\t\t\t\t\t\t\t\t\t\tcontext: item.context,\n\t\t\t\t\t\t\t\t\t\t\t\trequest: item.request.slice(dir.length + 3)\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\thideOriginal = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tconst dir = modulesItems.replace(/\\\\/g, \"/\");\n\t\t\t\t\t\t\t\t\tconst fullPath =\n\t\t\t\t\t\t\t\t\t\titem.context.replace(/\\\\/g, \"/\") + item.request.slice(1);\n\t\t\t\t\t\t\t\t\tif (fullPath.startsWith(dir)) {\n\t\t\t\t\t\t\t\t\t\tnewItems.push({\n\t\t\t\t\t\t\t\t\t\t\tcontext: item.context,\n\t\t\t\t\t\t\t\t\t\t\trequest: fullPath.slice(dir.length + 1)\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!hideOriginal) {\n\t\t\t\t\t\t\t\tnewItems.push(item);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn newItems;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = RequireContextPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAM;EAAEA;AAAF,IAAwBC,OAAO,CAAC,qBAAD,CAArC;;AACA,MAAMC,wBAAwB,GAAGD,OAAO,CAAC,4BAAD,CAAxC;;AACA,MAAME,wBAAwB,GAAGF,OAAO,CAAC,4BAAD,CAAxC;;AACA,MAAMG,oCAAoC,GAAGH,OAAO,CAAC,wCAAD,CAApD;AAEA;;AACA;;AAEA;;;AACA,MAAMI,qBAAqB,GAAG,EAA9B;;AAEA,MAAMC,oBAAN,CAA2B;EAC1B;AACD;AACA;AACA;AACA;EACCC,KAAK,CAACC,QAAD,EAAW;IACfA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,sBADD,EAEC,CAACD,WAAD,WAAgE;MAAA,IAAlD;QAAEE,oBAAF;QAAwBC;MAAxB,CAAkD;MAC/DH,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCZ,wBADD,EAECS,oBAFD;MAIAF,WAAW,CAACM,mBAAZ,CAAgCD,GAAhC,CACCZ,wBADD,EAEC,IAAIA,wBAAwB,CAACc,QAA7B,EAFD;MAKAP,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCb,wBADD,EAECW,mBAFD;;MAKA,MAAMK,OAAO,GAAG,CAACC,MAAD,EAASC,aAAT,KAA2B;QAC1C,IACCA,aAAa,CAACC,cAAd,KAAiCC,SAAjC,IACA,CAACF,aAAa,CAACC,cAFhB,EAIC;QAED,IAAIjB,oCAAJ,GAA2CG,KAA3C,CAAiDY,MAAjD;MACA,CARD;;MAUAN,mBAAmB,CAACJ,KAApB,CAA0BU,MAA1B,CACEI,GADF,CACM,iBADN,EAEEZ,GAFF,CAEM,sBAFN,EAE8BO,OAF9B;MAGAL,mBAAmB,CAACJ,KAApB,CAA0BU,MAA1B,CACEI,GADF,CACM,oBADN,EAEEZ,GAFF,CAEM,sBAFN,EAE8BO,OAF9B;MAIAN,oBAAoB,CAACH,KAArB,CAA2Be,mBAA3B,CAA+Cb,GAA/C,CACC,sBADD,EAEC,CAACc,KAAD,EAAQC,OAAR,KAAoB;QACnB,IAAID,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB,OAAOF,KAAP;QAExB,MAAMG,mBAAmB,GAAGpB,QAAQ,CAACqB,eAAT,CAAyBC,GAAzB,CAC3B,QAD2B,EAE3B9B,iBAAiB,CAChB0B,OAAO,CAACK,cAAR,IAA0B1B,qBADV,EAEhB,gBAFgB,EAGhBqB,OAAO,CAACM,QAHQ,CAFU,EAO1BN,OAPF;QASA,IAAIO,QAAJ;;QACA,IAAI,CAACL,mBAAmB,CAACM,cAAzB,EAAyC;UACxCD,QAAQ,GAAG,EAAX;;UACA,KAAK,MAAME,IAAX,IAAmBV,KAAnB,EAA0B;YACzB,MAAM;cAAEW,OAAF;cAAWC;YAAX,IAAuBF,IAA7B;;YACA,KAAK,MAAMG,GAAX,IAAkBV,mBAAmB,CAACW,UAAtC,EAAkD;cACjD,IAAIH,OAAO,CAACI,QAAR,CAAiBF,GAAjB,CAAJ,EAA2B;gBAC1BL,QAAQ,CAACQ,IAAT,CAAc;kBACbJ,OADa;kBAEbD,OAAO,EAAEA,OAAO,CAACM,KAAR,CAAc,CAAd,EAAiB,CAACJ,GAAG,CAACX,MAAtB;gBAFI,CAAd;cAIA;YACD;;YACD,IAAI,CAACC,mBAAmB,CAACe,gBAAzB,EAA2C;cAC1CV,QAAQ,CAACQ,IAAT,CAAcN,IAAd;YACA;UACD;;UACDV,KAAK,GAAGQ,QAAR;UAEAA,QAAQ,GAAG,EAAX;;UACA,KAAK,MAAMW,GAAX,IAAkBnB,KAAlB,EAAyB;YACxB,MAAM;cAAEW,OAAF;cAAWC;YAAX,IAAuBO,GAA7B;;YACA,KAAK,MAAMC,QAAX,IAAuBjB,mBAAmB,CAACkB,SAA3C,EAAsD;cACrD,IAAIV,OAAO,CAACI,QAAR,CAAkB,IAAGK,QAAS,EAA9B,CAAJ,EAAsC;gBACrCZ,QAAQ,CAACQ,IAAT,CAAc;kBACbJ,OADa;kBAEbD,OAAO,EAAEA,OAAO,CAACM,KAAR,CAAc,CAAd,EAAiB,CAACG,QAAQ,CAAClB,MAA3B;gBAFI,CAAd;gBAIAM,QAAQ,CAACQ,IAAT,CAAc;kBACbJ,OADa;kBAEbD,OAAO,EAAEA,OAAO,CAACM,KAAR,CAAc,CAAd,EAAiB,CAACG,QAAQ,CAAClB,MAAV,GAAmB,CAApC;gBAFI,CAAd;cAIA;YACD;;YACDM,QAAQ,CAACQ,IAAT,CAAcG,GAAd;UACA;;UACDnB,KAAK,GAAGQ,QAAR;QACA;;QAEDA,QAAQ,GAAG,EAAX;;QACA,KAAK,MAAME,IAAX,IAAmBV,KAAnB,EAA0B;UACzB,IAAIsB,YAAY,GAAG,KAAnB;;UACA,KAAK,MAAMC,YAAX,IAA2BpB,mBAAmB,CAACqB,OAA/C,EAAwD;YACvD,IAAIC,KAAK,CAACC,OAAN,CAAcH,YAAd,CAAJ,EAAiC;cAChC,KAAK,MAAMI,GAAX,IAAkBJ,YAAlB,EAAgC;gBAC/B,IAAIb,IAAI,CAACC,OAAL,CAAaiB,UAAb,CAAyB,KAAID,GAAI,GAAjC,CAAJ,EAA0C;kBACzCnB,QAAQ,CAACQ,IAAT,CAAc;oBACbJ,OAAO,EAAEF,IAAI,CAACE,OADD;oBAEbD,OAAO,EAAED,IAAI,CAACC,OAAL,CAAaM,KAAb,CAAmBU,GAAG,CAACzB,MAAJ,GAAa,CAAhC;kBAFI,CAAd;kBAIAoB,YAAY,GAAG,IAAf;gBACA;cACD;YACD,CAVD,MAUO;cACN,MAAMK,GAAG,GAAGJ,YAAY,CAACM,OAAb,CAAqB,KAArB,EAA4B,GAA5B,CAAZ;cACA,MAAMC,QAAQ,GACbpB,IAAI,CAACE,OAAL,CAAaiB,OAAb,CAAqB,KAArB,EAA4B,GAA5B,IAAmCnB,IAAI,CAACC,OAAL,CAAaM,KAAb,CAAmB,CAAnB,CADpC;;cAEA,IAAIa,QAAQ,CAACF,UAAT,CAAoBD,GAApB,CAAJ,EAA8B;gBAC7BnB,QAAQ,CAACQ,IAAT,CAAc;kBACbJ,OAAO,EAAEF,IAAI,CAACE,OADD;kBAEbD,OAAO,EAAEmB,QAAQ,CAACb,KAAT,CAAeU,GAAG,CAACzB,MAAJ,GAAa,CAA5B;gBAFI,CAAd;cAIA;YACD;UACD;;UACD,IAAI,CAACoB,YAAL,EAAmB;YAClBd,QAAQ,CAACQ,IAAT,CAAcN,IAAd;UACA;QACD;;QACD,OAAOF,QAAP;MACA,CApFF;IAsFA,CAxHF;EA0HA;;AAjIyB;;AAmI3BuB,MAAM,CAACC,OAAP,GAAiBnD,oBAAjB"},"metadata":{},"sourceType":"script"}