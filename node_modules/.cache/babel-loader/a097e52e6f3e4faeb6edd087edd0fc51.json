{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra, Zackary Jackson @ScriptedAlchemy, Marais Rossouw @maraisr\n*/\n\"use strict\";\n\nconst ModuleDependency = require(\"../dependencies/ModuleDependency\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nclass ContainerExposedDependency extends ModuleDependency {\n  /**\n   * @param {string} exposedName public name\n   * @param {string} request request to module\n   */\n  constructor(exposedName, request) {\n    super(request);\n    this.exposedName = exposedName;\n  }\n\n  get type() {\n    return \"container exposed\";\n  }\n\n  get category() {\n    return \"esm\";\n  }\n  /**\n   * @returns {string | null} an identifier to merge equal requests\n   */\n\n\n  getResourceIdentifier() {\n    return `exposed dependency ${this.exposedName}=${this.request}`;\n  }\n\n  serialize(context) {\n    context.write(this.exposedName);\n    super.serialize(context);\n  }\n\n  deserialize(context) {\n    this.exposedName = context.read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(ContainerExposedDependency, \"webpack/lib/container/ContainerExposedDependency\");\nmodule.exports = ContainerExposedDependency;","map":{"version":3,"names":["ModuleDependency","require","makeSerializable","ContainerExposedDependency","constructor","exposedName","request","type","category","getResourceIdentifier","serialize","context","write","deserialize","read","module","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/container/ContainerExposedDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra, Zackary Jackson @ScriptedAlchemy, Marais Rossouw @maraisr\n*/\n\n\"use strict\";\n\nconst ModuleDependency = require(\"../dependencies/ModuleDependency\");\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nclass ContainerExposedDependency extends ModuleDependency {\n\t/**\n\t * @param {string} exposedName public name\n\t * @param {string} request request to module\n\t */\n\tconstructor(exposedName, request) {\n\t\tsuper(request);\n\t\tthis.exposedName = exposedName;\n\t}\n\n\tget type() {\n\t\treturn \"container exposed\";\n\t}\n\n\tget category() {\n\t\treturn \"esm\";\n\t}\n\n\t/**\n\t * @returns {string | null} an identifier to merge equal requests\n\t */\n\tgetResourceIdentifier() {\n\t\treturn `exposed dependency ${this.exposedName}=${this.request}`;\n\t}\n\n\tserialize(context) {\n\t\tcontext.write(this.exposedName);\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tthis.exposedName = context.read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tContainerExposedDependency,\n\t\"webpack/lib/container/ContainerExposedDependency\"\n);\n\nmodule.exports = ContainerExposedDependency;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,kCAAD,CAAhC;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,0BAAD,CAAhC;;AAEA,MAAME,0BAAN,SAAyCH,gBAAzC,CAA0D;EACzD;AACD;AACA;AACA;EACCI,WAAW,CAACC,WAAD,EAAcC,OAAd,EAAuB;IACjC,MAAMA,OAAN;IACA,KAAKD,WAAL,GAAmBA,WAAnB;EACA;;EAEO,IAAJE,IAAI,GAAG;IACV,OAAO,mBAAP;EACA;;EAEW,IAARC,QAAQ,GAAG;IACd,OAAO,KAAP;EACA;EAED;AACD;AACA;;;EACCC,qBAAqB,GAAG;IACvB,OAAQ,sBAAqB,KAAKJ,WAAY,IAAG,KAAKC,OAAQ,EAA9D;EACA;;EAEDI,SAAS,CAACC,OAAD,EAAU;IAClBA,OAAO,CAACC,KAAR,CAAc,KAAKP,WAAnB;IACA,MAAMK,SAAN,CAAgBC,OAAhB;EACA;;EAEDE,WAAW,CAACF,OAAD,EAAU;IACpB,KAAKN,WAAL,GAAmBM,OAAO,CAACG,IAAR,EAAnB;IACA,MAAMD,WAAN,CAAkBF,OAAlB;EACA;;AAjCwD;;AAoC1DT,gBAAgB,CACfC,0BADe,EAEf,kDAFe,CAAhB;AAKAY,MAAM,CAACC,OAAP,GAAiBb,0BAAjB"},"metadata":{},"sourceType":"script"}