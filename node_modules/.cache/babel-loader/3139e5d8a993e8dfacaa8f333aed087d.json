{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\n\nmodule.exports = class DescriptionFilePlugin {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {string[]} filenames filenames\n   * @param {boolean} pathIsFile pathIsFile\n   * @param {string | ResolveStepHook} target target\n   */\n  constructor(source, filenames, pathIsFile, target) {\n    this.source = source;\n    this.filenames = filenames;\n    this.pathIsFile = pathIsFile;\n    this.target = target;\n  }\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n\n\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"DescriptionFilePlugin\", (request, resolveContext, callback) => {\n      const path = request.path;\n      if (!path) return callback();\n      const directory = this.pathIsFile ? DescriptionFileUtils.cdUp(path) : path;\n      if (!directory) return callback();\n      DescriptionFileUtils.loadDescriptionFile(resolver, directory, this.filenames, request.descriptionFilePath ? {\n        path: request.descriptionFilePath,\n        content: request.descriptionFileData,\n        directory:\n        /** @type {string} */\n        request.descriptionFileRoot\n      } : undefined, resolveContext, (err, result) => {\n        if (err) return callback(err);\n\n        if (!result) {\n          if (resolveContext.log) resolveContext.log(`No description file found in ${directory} or above`);\n          return callback();\n        }\n\n        const relativePath = \".\" + path.substr(result.directory.length).replace(/\\\\/g, \"/\");\n        const obj = { ...request,\n          descriptionFilePath: result.path,\n          descriptionFileData: result.content,\n          descriptionFileRoot: result.directory,\n          relativePath: relativePath\n        };\n        resolver.doResolve(target, obj, \"using description file: \" + result.path + \" (relative path: \" + relativePath + \")\", resolveContext, (err, result) => {\n          if (err) return callback(err); // Don't allow other processing\n\n          if (result === undefined) return callback(null, null);\n          callback(null, result);\n        });\n      });\n    });\n  }\n\n};","map":{"version":3,"names":["DescriptionFileUtils","require","module","exports","DescriptionFilePlugin","constructor","source","filenames","pathIsFile","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","path","directory","cdUp","loadDescriptionFile","descriptionFilePath","content","descriptionFileData","descriptionFileRoot","undefined","err","result","log","relativePath","substr","length","replace","obj","doResolve"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/enhanced-resolve/lib/DescriptionFilePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class DescriptionFilePlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string[]} filenames filenames\n\t * @param {boolean} pathIsFile pathIsFile\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, filenames, pathIsFile, target) {\n\t\tthis.source = source;\n\t\tthis.filenames = filenames;\n\t\tthis.pathIsFile = pathIsFile;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\n\t\t\t\t\"DescriptionFilePlugin\",\n\t\t\t\t(request, resolveContext, callback) => {\n\t\t\t\t\tconst path = request.path;\n\t\t\t\t\tif (!path) return callback();\n\t\t\t\t\tconst directory = this.pathIsFile\n\t\t\t\t\t\t? DescriptionFileUtils.cdUp(path)\n\t\t\t\t\t\t: path;\n\t\t\t\t\tif (!directory) return callback();\n\t\t\t\t\tDescriptionFileUtils.loadDescriptionFile(\n\t\t\t\t\t\tresolver,\n\t\t\t\t\t\tdirectory,\n\t\t\t\t\t\tthis.filenames,\n\t\t\t\t\t\trequest.descriptionFilePath\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tpath: request.descriptionFilePath,\n\t\t\t\t\t\t\t\t\tcontent: request.descriptionFileData,\n\t\t\t\t\t\t\t\t\tdirectory: /** @type {string} */ (request.descriptionFileRoot)\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tif (!result) {\n\t\t\t\t\t\t\t\tif (resolveContext.log)\n\t\t\t\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\t\t\t`No description file found in ${directory} or above`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst relativePath =\n\t\t\t\t\t\t\t\t\".\" + path.substr(result.directory.length).replace(/\\\\/g, \"/\");\n\t\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\t\tdescriptionFilePath: result.path,\n\t\t\t\t\t\t\t\tdescriptionFileData: result.content,\n\t\t\t\t\t\t\t\tdescriptionFileRoot: result.directory,\n\t\t\t\t\t\t\t\trelativePath: relativePath\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\t\"using description file: \" +\n\t\t\t\t\t\t\t\t\tresult.path +\n\t\t\t\t\t\t\t\t\t\" (relative path: \" +\n\t\t\t\t\t\t\t\t\trelativePath +\n\t\t\t\t\t\t\t\t\t\")\",\n\t\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t\t\t// Don't allow other processing\n\t\t\t\t\t\t\t\t\tif (result === undefined) return callback(null, null);\n\t\t\t\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,oBAAoB,GAAGC,OAAO,CAAC,wBAAD,CAApC;AAEA;;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiB,MAAMC,qBAAN,CAA4B;EAC5C;AACD;AACA;AACA;AACA;AACA;EACCC,WAAW,CAACC,MAAD,EAASC,SAAT,EAAoBC,UAApB,EAAgCC,MAAhC,EAAwC;IAClD,KAAKH,MAAL,GAAcA,MAAd;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKC,UAAL,GAAkBA,UAAlB;IACA,KAAKC,MAAL,GAAcA,MAAd;EACA;EAED;AACD;AACA;AACA;;;EACCC,KAAK,CAACC,QAAD,EAAW;IACf,MAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAT,CAAoB,KAAKH,MAAzB,CAAf;IACAE,QAAQ,CACNE,OADF,CACU,KAAKP,MADf,EAEEQ,QAFF,CAGE,uBAHF,EAIE,CAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,KAAuC;MACtC,MAAMC,IAAI,GAAGH,OAAO,CAACG,IAArB;MACA,IAAI,CAACA,IAAL,EAAW,OAAOD,QAAQ,EAAf;MACX,MAAME,SAAS,GAAG,KAAKX,UAAL,GACfR,oBAAoB,CAACoB,IAArB,CAA0BF,IAA1B,CADe,GAEfA,IAFH;MAGA,IAAI,CAACC,SAAL,EAAgB,OAAOF,QAAQ,EAAf;MAChBjB,oBAAoB,CAACqB,mBAArB,CACCV,QADD,EAECQ,SAFD,EAGC,KAAKZ,SAHN,EAICQ,OAAO,CAACO,mBAAR,GACG;QACAJ,IAAI,EAAEH,OAAO,CAACO,mBADd;QAEAC,OAAO,EAAER,OAAO,CAACS,mBAFjB;QAGAL,SAAS;QAAE;QAAuBJ,OAAO,CAACU;MAH1C,CADH,GAMGC,SAVJ,EAWCV,cAXD,EAYC,CAACW,GAAD,EAAMC,MAAN,KAAiB;QAChB,IAAID,GAAJ,EAAS,OAAOV,QAAQ,CAACU,GAAD,CAAf;;QACT,IAAI,CAACC,MAAL,EAAa;UACZ,IAAIZ,cAAc,CAACa,GAAnB,EACCb,cAAc,CAACa,GAAf,CACE,gCAA+BV,SAAU,WAD3C;UAGD,OAAOF,QAAQ,EAAf;QACA;;QACD,MAAMa,YAAY,GACjB,MAAMZ,IAAI,CAACa,MAAL,CAAYH,MAAM,CAACT,SAAP,CAAiBa,MAA7B,EAAqCC,OAArC,CAA6C,KAA7C,EAAoD,GAApD,CADP;QAEA,MAAMC,GAAG,GAAG,EACX,GAAGnB,OADQ;UAEXO,mBAAmB,EAAEM,MAAM,CAACV,IAFjB;UAGXM,mBAAmB,EAAEI,MAAM,CAACL,OAHjB;UAIXE,mBAAmB,EAAEG,MAAM,CAACT,SAJjB;UAKXW,YAAY,EAAEA;QALH,CAAZ;QAOAnB,QAAQ,CAACwB,SAAT,CACC1B,MADD,EAECyB,GAFD,EAGC,6BACCN,MAAM,CAACV,IADR,GAEC,mBAFD,GAGCY,YAHD,GAIC,GAPF,EAQCd,cARD,EASC,CAACW,GAAD,EAAMC,MAAN,KAAiB;UAChB,IAAID,GAAJ,EAAS,OAAOV,QAAQ,CAACU,GAAD,CAAf,CADO,CAGhB;;UACA,IAAIC,MAAM,KAAKF,SAAf,EAA0B,OAAOT,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAf;UAC1BA,QAAQ,CAAC,IAAD,EAAOW,MAAP,CAAR;QACA,CAfF;MAiBA,CA/CF;IAiDA,CA5DH;EA8DA;;AAlF2C,CAA7C"},"metadata":{},"sourceType":"script"}