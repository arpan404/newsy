{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst InitFragment = require(\"./InitFragment\");\n\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\n\nconst Template = require(\"./Template\");\n\nconst {\n  equals\n} = require(\"./util/ArrayHelpers\");\n\nconst compileBooleanMatcher = require(\"./util/compileBooleanMatcher\");\n\nconst propertyAccess = require(\"./util/propertyAccess\");\n\nconst {\n  forEachRuntime,\n  subtractRuntime\n} = require(\"./util/runtime\");\n/** @typedef {import(\"../declarations/WebpackOptions\").OutputNormalized} OutputOptions */\n\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"./CodeGenerationResults\")} CodeGenerationResults */\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/** @typedef {import(\"./Dependency\")} Dependency */\n\n/** @typedef {import(\"./Module\")} Module */\n\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @param {Module} module the module\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @returns {string} error message\n */\n\n\nconst noModuleIdErrorMessage = (module, chunkGraph) => {\n  return `Module ${module.identifier()} has no id assigned.\nThis should not happen.\nIt's in these chunks: ${Array.from(chunkGraph.getModuleChunksIterable(module), c => c.name || c.id || c.debugId).join(\", \") || \"none\"} (If module is in no chunk this indicates a bug in some chunk/module optimization logic)\nModule has these incoming connections: ${Array.from(chunkGraph.moduleGraph.getIncomingConnections(module), connection => `\\n - ${connection.originModule && connection.originModule.identifier()} ${connection.dependency && connection.dependency.type} ${connection.explanations && Array.from(connection.explanations).join(\", \") || \"\"}`).join(\"\")}`;\n};\n/**\n * @param {string|undefined} definition global object definition\n * @returns {string} save to use global object\n */\n\n\nfunction getGlobalObject(definition) {\n  if (!definition) return definition;\n  const trimmed = definition.trim();\n  if ( // identifier, we do not need real identifier regarding ECMAScript/Unicode\n  trimmed.match(/^[_\\p{L}][_0-9\\p{L}]*$/iu) || // iife\n  // call expression\n  // expression in parentheses\n  trimmed.match(/^([_\\p{L}][_0-9\\p{L}]*)?\\(.*\\)$/iu)) return trimmed;\n  return `Object(${trimmed})`;\n}\n\nclass RuntimeTemplate {\n  /**\n   * @param {Compilation} compilation the compilation\n   * @param {OutputOptions} outputOptions the compilation output options\n   * @param {RequestShortener} requestShortener the request shortener\n   */\n  constructor(compilation, outputOptions, requestShortener) {\n    this.compilation = compilation;\n    this.outputOptions = outputOptions || {};\n    this.requestShortener = requestShortener;\n    this.globalObject = getGlobalObject(outputOptions.globalObject);\n    this.contentHashReplacement = \"X\".repeat(outputOptions.hashDigestLength);\n  }\n\n  isIIFE() {\n    return this.outputOptions.iife;\n  }\n\n  isModule() {\n    return this.outputOptions.module;\n  }\n\n  supportsConst() {\n    return this.outputOptions.environment.const;\n  }\n\n  supportsArrowFunction() {\n    return this.outputOptions.environment.arrowFunction;\n  }\n\n  supportsOptionalChaining() {\n    return this.outputOptions.environment.optionalChaining;\n  }\n\n  supportsForOf() {\n    return this.outputOptions.environment.forOf;\n  }\n\n  supportsDestructuring() {\n    return this.outputOptions.environment.destructuring;\n  }\n\n  supportsBigIntLiteral() {\n    return this.outputOptions.environment.bigIntLiteral;\n  }\n\n  supportsDynamicImport() {\n    return this.outputOptions.environment.dynamicImport;\n  }\n\n  supportsEcmaScriptModuleSyntax() {\n    return this.outputOptions.environment.module;\n  }\n\n  supportTemplateLiteral() {\n    return this.outputOptions.environment.templateLiteral;\n  }\n\n  returningFunction(returnValue) {\n    let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    return this.supportsArrowFunction() ? `(${args}) => (${returnValue})` : `function(${args}) { return ${returnValue}; }`;\n  }\n\n  basicFunction(args, body) {\n    return this.supportsArrowFunction() ? `(${args}) => {\\n${Template.indent(body)}\\n}` : `function(${args}) {\\n${Template.indent(body)}\\n}`;\n  }\n  /**\n   * @param {Array<string|{expr: string}>} args args\n   * @returns {string} result expression\n   */\n\n\n  concatenation() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    const len = args.length;\n    if (len === 2) return this._es5Concatenation(args);\n    if (len === 0) return '\"\"';\n\n    if (len === 1) {\n      return typeof args[0] === \"string\" ? JSON.stringify(args[0]) : `\"\" + ${args[0].expr}`;\n    }\n\n    if (!this.supportTemplateLiteral()) return this._es5Concatenation(args); // cost comparison between template literal and concatenation:\n    // both need equal surroundings: `xxx` vs \"xxx\"\n    // template literal has constant cost of 3 chars for each expression\n    // es5 concatenation has cost of 3 + n chars for n expressions in row\n    // when a es5 concatenation ends with an expression it reduces cost by 3\n    // when a es5 concatenation starts with an single expression it reduces cost by 3\n    // e. g. `${a}${b}${c}` (3*3 = 9) is longer than \"\"+a+b+c ((3+3)-3 = 3)\n    // e. g. `x${a}x${b}x${c}x` (3*3 = 9) is shorter than \"x\"+a+\"x\"+b+\"x\"+c+\"x\" (4+4+4 = 12)\n\n    let templateCost = 0;\n    let concatenationCost = 0;\n    let lastWasExpr = false;\n\n    for (const arg of args) {\n      const isExpr = typeof arg !== \"string\";\n\n      if (isExpr) {\n        templateCost += 3;\n        concatenationCost += lastWasExpr ? 1 : 4;\n      }\n\n      lastWasExpr = isExpr;\n    }\n\n    if (lastWasExpr) concatenationCost -= 3;\n    if (typeof args[0] !== \"string\" && typeof args[1] === \"string\") concatenationCost -= 3;\n    if (concatenationCost <= templateCost) return this._es5Concatenation(args);\n    return `\\`${args.map(arg => typeof arg === \"string\" ? arg : `\\${${arg.expr}}`).join(\"\")}\\``;\n  }\n  /**\n   * @param {Array<string|{expr: string}>} args args (len >= 2)\n   * @returns {string} result expression\n   * @private\n   */\n\n\n  _es5Concatenation(args) {\n    const str = args.map(arg => typeof arg === \"string\" ? JSON.stringify(arg) : arg.expr).join(\" + \"); // when the first two args are expression, we need to prepend \"\" + to force string\n    // concatenation instead of number addition.\n\n    return typeof args[0] !== \"string\" && typeof args[1] !== \"string\" ? `\"\" + ${str}` : str;\n  }\n\n  expressionFunction(expression) {\n    let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    return this.supportsArrowFunction() ? `(${args}) => (${expression})` : `function(${args}) { ${expression}; }`;\n  }\n\n  emptyFunction() {\n    return this.supportsArrowFunction() ? \"x => {}\" : \"function() {}\";\n  }\n\n  destructureArray(items, value) {\n    return this.supportsDestructuring() ? `var [${items.join(\", \")}] = ${value};` : Template.asString(items.map((item, i) => `var ${item} = ${value}[${i}];`));\n  }\n\n  destructureObject(items, value) {\n    return this.supportsDestructuring() ? `var {${items.join(\", \")}} = ${value};` : Template.asString(items.map(item => `var ${item} = ${value}${propertyAccess([item])};`));\n  }\n\n  iife(args, body) {\n    return `(${this.basicFunction(args, body)})()`;\n  }\n\n  forEach(variable, array, body) {\n    return this.supportsForOf() ? `for(const ${variable} of ${array}) {\\n${Template.indent(body)}\\n}` : `${array}.forEach(function(${variable}) {\\n${Template.indent(body)}\\n});`;\n  }\n  /**\n   * Add a comment\n   * @param {object} options Information content of the comment\n   * @param {string=} options.request request string used originally\n   * @param {string=} options.chunkName name of the chunk referenced\n   * @param {string=} options.chunkReason reason information of the chunk\n   * @param {string=} options.message additional message\n   * @param {string=} options.exportName name of the export\n   * @returns {string} comment\n   */\n\n\n  comment(_ref) {\n    let {\n      request,\n      chunkName,\n      chunkReason,\n      message,\n      exportName\n    } = _ref;\n    let content;\n\n    if (this.outputOptions.pathinfo) {\n      content = [message, request, chunkName, chunkReason].filter(Boolean).map(item => this.requestShortener.shorten(item)).join(\" | \");\n    } else {\n      content = [message, chunkName, chunkReason].filter(Boolean).map(item => this.requestShortener.shorten(item)).join(\" | \");\n    }\n\n    if (!content) return \"\";\n\n    if (this.outputOptions.pathinfo) {\n      return Template.toComment(content) + \" \";\n    } else {\n      return Template.toNormalComment(content) + \" \";\n    }\n  }\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error block\n   */\n\n\n  throwMissingModuleErrorBlock(_ref2) {\n    let {\n      request\n    } = _ref2;\n    const err = `Cannot find module '${request}'`;\n    return `var e = new Error(${JSON.stringify(err)}); e.code = 'MODULE_NOT_FOUND'; throw e;`;\n  }\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error function\n   */\n\n\n  throwMissingModuleErrorFunction(_ref3) {\n    let {\n      request\n    } = _ref3;\n    return `function webpackMissingModule() { ${this.throwMissingModuleErrorBlock({\n      request\n    })} }`;\n  }\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error IIFE\n   */\n\n\n  missingModule(_ref4) {\n    let {\n      request\n    } = _ref4;\n    return `Object(${this.throwMissingModuleErrorFunction({\n      request\n    })}())`;\n  }\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error statement\n   */\n\n\n  missingModuleStatement(_ref5) {\n    let {\n      request\n    } = _ref5;\n    return `${this.missingModule({\n      request\n    })};\\n`;\n  }\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error code\n   */\n\n\n  missingModulePromise(_ref6) {\n    let {\n      request\n    } = _ref6;\n    return `Promise.resolve().then(${this.throwMissingModuleErrorFunction({\n      request\n    })})`;\n  }\n  /**\n   * @param {Object} options options object\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {Module} options.module the module\n   * @param {string} options.request the request that should be printed as comment\n   * @param {string=} options.idExpr expression to use as id expression\n   * @param {\"expression\" | \"promise\" | \"statements\"} options.type which kind of code should be returned\n   * @returns {string} the code\n   */\n\n\n  weakError(_ref7) {\n    let {\n      module,\n      chunkGraph,\n      request,\n      idExpr,\n      type\n    } = _ref7;\n    const moduleId = chunkGraph.getModuleId(module);\n    const errorMessage = moduleId === null ? JSON.stringify(\"Module is not available (weak dependency)\") : idExpr ? `\"Module '\" + ${idExpr} + \"' is not available (weak dependency)\"` : JSON.stringify(`Module '${moduleId}' is not available (weak dependency)`);\n    const comment = request ? Template.toNormalComment(request) + \" \" : \"\";\n    const errorStatements = `var e = new Error(${errorMessage}); ` + comment + \"e.code = 'MODULE_NOT_FOUND'; throw e;\";\n\n    switch (type) {\n      case \"statements\":\n        return errorStatements;\n\n      case \"promise\":\n        return `Promise.resolve().then(${this.basicFunction(\"\", errorStatements)})`;\n\n      case \"expression\":\n        return this.iife(\"\", errorStatements);\n    }\n  }\n  /**\n   * @param {Object} options options object\n   * @param {Module} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string} options.request the request that should be printed as comment\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @returns {string} the expression\n   */\n\n\n  moduleId(_ref8) {\n    let {\n      module,\n      chunkGraph,\n      request,\n      weak\n    } = _ref8;\n\n    if (!module) {\n      return this.missingModule({\n        request\n      });\n    }\n\n    const moduleId = chunkGraph.getModuleId(module);\n\n    if (moduleId === null) {\n      if (weak) {\n        return \"null /* weak dependency, without id */\";\n      }\n\n      throw new Error(`RuntimeTemplate.moduleId(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n\n    return `${this.comment({\n      request\n    })}${JSON.stringify(moduleId)}`;\n  }\n  /**\n   * @param {Object} options options object\n   * @param {Module} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string} options.request the request that should be printed as comment\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} the expression\n   */\n\n\n  moduleRaw(_ref9) {\n    let {\n      module,\n      chunkGraph,\n      request,\n      weak,\n      runtimeRequirements\n    } = _ref9;\n\n    if (!module) {\n      return this.missingModule({\n        request\n      });\n    }\n\n    const moduleId = chunkGraph.getModuleId(module);\n\n    if (moduleId === null) {\n      if (weak) {\n        // only weak referenced modules don't get an id\n        // we can always emit an error emitting code here\n        return this.weakError({\n          module,\n          chunkGraph,\n          request,\n          type: \"expression\"\n        });\n      }\n\n      throw new Error(`RuntimeTemplate.moduleId(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n\n    runtimeRequirements.add(RuntimeGlobals.require);\n    return `__webpack_require__(${this.moduleId({\n      module,\n      chunkGraph,\n      request,\n      weak\n    })})`;\n  }\n  /**\n   * @param {Object} options options object\n   * @param {Module} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string} options.request the request that should be printed as comment\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} the expression\n   */\n\n\n  moduleExports(_ref10) {\n    let {\n      module,\n      chunkGraph,\n      request,\n      weak,\n      runtimeRequirements\n    } = _ref10;\n    return this.moduleRaw({\n      module,\n      chunkGraph,\n      request,\n      weak,\n      runtimeRequirements\n    });\n  }\n  /**\n   * @param {Object} options options object\n   * @param {Module} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string} options.request the request that should be printed as comment\n   * @param {boolean=} options.strict if the current module is in strict esm mode\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} the expression\n   */\n\n\n  moduleNamespace(_ref11) {\n    let {\n      module,\n      chunkGraph,\n      request,\n      strict,\n      weak,\n      runtimeRequirements\n    } = _ref11;\n\n    if (!module) {\n      return this.missingModule({\n        request\n      });\n    }\n\n    if (chunkGraph.getModuleId(module) === null) {\n      if (weak) {\n        // only weak referenced modules don't get an id\n        // we can always emit an error emitting code here\n        return this.weakError({\n          module,\n          chunkGraph,\n          request,\n          type: \"expression\"\n        });\n      }\n\n      throw new Error(`RuntimeTemplate.moduleNamespace(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n\n    const moduleId = this.moduleId({\n      module,\n      chunkGraph,\n      request,\n      weak\n    });\n    const exportsType = module.getExportsType(chunkGraph.moduleGraph, strict);\n\n    switch (exportsType) {\n      case \"namespace\":\n        return this.moduleRaw({\n          module,\n          chunkGraph,\n          request,\n          weak,\n          runtimeRequirements\n        });\n\n      case \"default-with-named\":\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n        return `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 3)`;\n\n      case \"default-only\":\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n        return `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 1)`;\n\n      case \"dynamic\":\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n        return `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 7)`;\n    }\n  }\n  /**\n   * @param {Object} options options object\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {AsyncDependenciesBlock=} options.block the current dependencies block\n   * @param {Module} options.module the module\n   * @param {string} options.request the request that should be printed as comment\n   * @param {string} options.message a message for the comment\n   * @param {boolean=} options.strict if the current module is in strict esm mode\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} the promise expression\n   */\n\n\n  moduleNamespacePromise(_ref12) {\n    let {\n      chunkGraph,\n      block,\n      module,\n      request,\n      message,\n      strict,\n      weak,\n      runtimeRequirements\n    } = _ref12;\n\n    if (!module) {\n      return this.missingModulePromise({\n        request\n      });\n    }\n\n    const moduleId = chunkGraph.getModuleId(module);\n\n    if (moduleId === null) {\n      if (weak) {\n        // only weak referenced modules don't get an id\n        // we can always emit an error emitting code here\n        return this.weakError({\n          module,\n          chunkGraph,\n          request,\n          type: \"promise\"\n        });\n      }\n\n      throw new Error(`RuntimeTemplate.moduleNamespacePromise(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n\n    const promise = this.blockPromise({\n      chunkGraph,\n      block,\n      message,\n      runtimeRequirements\n    });\n    let appending;\n    let idExpr = JSON.stringify(chunkGraph.getModuleId(module));\n    const comment = this.comment({\n      request\n    });\n    let header = \"\";\n\n    if (weak) {\n      if (idExpr.length > 8) {\n        // 'var x=\"nnnnnn\";x,\"+x+\",x' vs '\"nnnnnn\",nnnnnn,\"nnnnnn\"'\n        header += `var id = ${idExpr}; `;\n        idExpr = \"id\";\n      }\n\n      runtimeRequirements.add(RuntimeGlobals.moduleFactories);\n      header += `if(!${RuntimeGlobals.moduleFactories}[${idExpr}]) { ${this.weakError({\n        module,\n        chunkGraph,\n        request,\n        idExpr,\n        type: \"statements\"\n      })} } `;\n    }\n\n    const moduleIdExpr = this.moduleId({\n      module,\n      chunkGraph,\n      request,\n      weak\n    });\n    const exportsType = module.getExportsType(chunkGraph.moduleGraph, strict);\n    let fakeType = 16;\n\n    switch (exportsType) {\n      case \"namespace\":\n        if (header) {\n          const rawModule = this.moduleRaw({\n            module,\n            chunkGraph,\n            request,\n            weak,\n            runtimeRequirements\n          });\n          appending = `.then(${this.basicFunction(\"\", `${header}return ${rawModule};`)})`;\n        } else {\n          runtimeRequirements.add(RuntimeGlobals.require);\n          appending = `.then(__webpack_require__.bind(__webpack_require__, ${comment}${idExpr}))`;\n        }\n\n        break;\n\n      case \"dynamic\":\n        fakeType |= 4;\n\n      /* fall through */\n\n      case \"default-with-named\":\n        fakeType |= 2;\n\n      /* fall through */\n\n      case \"default-only\":\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\n        if (chunkGraph.moduleGraph.isAsync(module)) {\n          if (header) {\n            const rawModule = this.moduleRaw({\n              module,\n              chunkGraph,\n              request,\n              weak,\n              runtimeRequirements\n            });\n            appending = `.then(${this.basicFunction(\"\", `${header}return ${rawModule};`)})`;\n          } else {\n            runtimeRequirements.add(RuntimeGlobals.require);\n            appending = `.then(__webpack_require__.bind(__webpack_require__, ${comment}${idExpr}))`;\n          }\n\n          appending += `.then(${this.returningFunction(`${RuntimeGlobals.createFakeNamespaceObject}(m, ${fakeType})`, \"m\")})`;\n        } else {\n          fakeType |= 1;\n\n          if (header) {\n            const returnExpression = `${RuntimeGlobals.createFakeNamespaceObject}(${moduleIdExpr}, ${fakeType})`;\n            appending = `.then(${this.basicFunction(\"\", `${header}return ${returnExpression};`)})`;\n          } else {\n            appending = `.then(${RuntimeGlobals.createFakeNamespaceObject}.bind(__webpack_require__, ${comment}${idExpr}, ${fakeType}))`;\n          }\n        }\n\n        break;\n    }\n\n    return `${promise || \"Promise.resolve()\"}${appending}`;\n  }\n  /**\n   * @param {Object} options options object\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {RuntimeSpec=} options.runtime runtime for which this code will be generated\n   * @param {RuntimeSpec | boolean=} options.runtimeCondition only execute the statement in some runtimes\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} expression\n   */\n\n\n  runtimeConditionExpression(_ref13) {\n    let {\n      chunkGraph,\n      runtimeCondition,\n      runtime,\n      runtimeRequirements\n    } = _ref13;\n    if (runtimeCondition === undefined) return \"true\";\n    if (typeof runtimeCondition === \"boolean\") return `${runtimeCondition}`;\n    /** @type {Set<string>} */\n\n    const positiveRuntimeIds = new Set();\n    forEachRuntime(runtimeCondition, runtime => positiveRuntimeIds.add(`${chunkGraph.getRuntimeId(runtime)}`));\n    /** @type {Set<string>} */\n\n    const negativeRuntimeIds = new Set();\n    forEachRuntime(subtractRuntime(runtime, runtimeCondition), runtime => negativeRuntimeIds.add(`${chunkGraph.getRuntimeId(runtime)}`));\n    runtimeRequirements.add(RuntimeGlobals.runtimeId);\n    return compileBooleanMatcher.fromLists(Array.from(positiveRuntimeIds), Array.from(negativeRuntimeIds))(RuntimeGlobals.runtimeId);\n  }\n  /**\n   *\n   * @param {Object} options options object\n   * @param {boolean=} options.update whether a new variable should be created or the existing one updated\n   * @param {Module} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string} options.request the request that should be printed as comment\n   * @param {string} options.importVar name of the import variable\n   * @param {Module} options.originModule module in which the statement is emitted\n   * @param {boolean=} options.weak true, if this is a weak dependency\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {[string, string]} the import statement and the compat statement\n   */\n\n\n  importStatement(_ref14) {\n    let {\n      update,\n      module,\n      chunkGraph,\n      request,\n      importVar,\n      originModule,\n      weak,\n      runtimeRequirements\n    } = _ref14;\n\n    if (!module) {\n      return [this.missingModuleStatement({\n        request\n      }), \"\"];\n    }\n\n    if (chunkGraph.getModuleId(module) === null) {\n      if (weak) {\n        // only weak referenced modules don't get an id\n        // we can always emit an error emitting code here\n        return [this.weakError({\n          module,\n          chunkGraph,\n          request,\n          type: \"statements\"\n        }), \"\"];\n      }\n\n      throw new Error(`RuntimeTemplate.importStatement(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n\n    const moduleId = this.moduleId({\n      module,\n      chunkGraph,\n      request,\n      weak\n    });\n    const optDeclaration = update ? \"\" : \"var \";\n    const exportsType = module.getExportsType(chunkGraph.moduleGraph, originModule.buildMeta.strictHarmonyModule);\n    runtimeRequirements.add(RuntimeGlobals.require);\n    const importContent = `/* harmony import */ ${optDeclaration}${importVar} = __webpack_require__(${moduleId});\\n`;\n\n    if (exportsType === \"dynamic\") {\n      runtimeRequirements.add(RuntimeGlobals.compatGetDefaultExport);\n      return [importContent, `/* harmony import */ ${optDeclaration}${importVar}_default = /*#__PURE__*/${RuntimeGlobals.compatGetDefaultExport}(${importVar});\\n`];\n    }\n\n    return [importContent, \"\"];\n  }\n  /**\n   * @param {Object} options options\n   * @param {ModuleGraph} options.moduleGraph the module graph\n   * @param {Module} options.module the module\n   * @param {string} options.request the request\n   * @param {string | string[]} options.exportName the export name\n   * @param {Module} options.originModule the origin module\n   * @param {boolean|undefined} options.asiSafe true, if location is safe for ASI, a bracket can be emitted\n   * @param {boolean} options.isCall true, if expression will be called\n   * @param {boolean} options.callContext when false, call context will not be preserved\n   * @param {boolean} options.defaultInterop when true and accessing the default exports, interop code will be generated\n   * @param {string} options.importVar the identifier name of the import variable\n   * @param {InitFragment[]} options.initFragments init fragments will be added here\n   * @param {RuntimeSpec} options.runtime runtime for which this code will be generated\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} expression\n   */\n\n\n  exportFromImport(_ref15) {\n    let {\n      moduleGraph,\n      module,\n      request,\n      exportName,\n      originModule,\n      asiSafe,\n      isCall,\n      callContext,\n      defaultInterop,\n      importVar,\n      initFragments,\n      runtime,\n      runtimeRequirements\n    } = _ref15;\n\n    if (!module) {\n      return this.missingModule({\n        request\n      });\n    }\n\n    if (!Array.isArray(exportName)) {\n      exportName = exportName ? [exportName] : [];\n    }\n\n    const exportsType = module.getExportsType(moduleGraph, originModule.buildMeta.strictHarmonyModule);\n\n    if (defaultInterop) {\n      if (exportName.length > 0 && exportName[0] === \"default\") {\n        switch (exportsType) {\n          case \"dynamic\":\n            if (isCall) {\n              return `${importVar}_default()${propertyAccess(exportName, 1)}`;\n            } else {\n              return asiSafe ? `(${importVar}_default()${propertyAccess(exportName, 1)})` : asiSafe === false ? `;(${importVar}_default()${propertyAccess(exportName, 1)})` : `${importVar}_default.a${propertyAccess(exportName, 1)}`;\n            }\n\n          case \"default-only\":\n          case \"default-with-named\":\n            exportName = exportName.slice(1);\n            break;\n        }\n      } else if (exportName.length > 0) {\n        if (exportsType === \"default-only\") {\n          return \"/* non-default import from non-esm module */undefined\" + propertyAccess(exportName, 1);\n        } else if (exportsType !== \"namespace\" && exportName[0] === \"__esModule\") {\n          return \"/* __esModule */true\";\n        }\n      } else if (exportsType === \"default-only\" || exportsType === \"default-with-named\") {\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n        initFragments.push(new InitFragment(`var ${importVar}_namespace_cache;\\n`, InitFragment.STAGE_CONSTANTS, -1, `${importVar}_namespace_cache`));\n        return `/*#__PURE__*/ ${asiSafe ? \"\" : asiSafe === false ? \";\" : \"Object\"}(${importVar}_namespace_cache || (${importVar}_namespace_cache = ${RuntimeGlobals.createFakeNamespaceObject}(${importVar}${exportsType === \"default-only\" ? \"\" : \", 2\"})))`;\n      }\n    }\n\n    if (exportName.length > 0) {\n      const exportsInfo = moduleGraph.getExportsInfo(module);\n      const used = exportsInfo.getUsedName(exportName, runtime);\n\n      if (!used) {\n        const comment = Template.toNormalComment(`unused export ${propertyAccess(exportName)}`);\n        return `${comment} undefined`;\n      }\n\n      const comment = equals(used, exportName) ? \"\" : Template.toNormalComment(propertyAccess(exportName)) + \" \";\n      const access = `${importVar}${comment}${propertyAccess(used)}`;\n\n      if (isCall && callContext === false) {\n        return asiSafe ? `(0,${access})` : asiSafe === false ? `;(0,${access})` : `/*#__PURE__*/Object(${access})`;\n      }\n\n      return access;\n    } else {\n      return importVar;\n    }\n  }\n  /**\n   * @param {Object} options options\n   * @param {AsyncDependenciesBlock} options.block the async block\n   * @param {string} options.message the message\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} expression\n   */\n\n\n  blockPromise(_ref16) {\n    let {\n      block,\n      message,\n      chunkGraph,\n      runtimeRequirements\n    } = _ref16;\n\n    if (!block) {\n      const comment = this.comment({\n        message\n      });\n      return `Promise.resolve(${comment.trim()})`;\n    }\n\n    const chunkGroup = chunkGraph.getBlockChunkGroup(block);\n\n    if (!chunkGroup || chunkGroup.chunks.length === 0) {\n      const comment = this.comment({\n        message\n      });\n      return `Promise.resolve(${comment.trim()})`;\n    }\n\n    const chunks = chunkGroup.chunks.filter(chunk => !chunk.hasRuntime() && chunk.id !== null);\n    const comment = this.comment({\n      message,\n      chunkName: block.chunkName\n    });\n\n    if (chunks.length === 1) {\n      const chunkId = JSON.stringify(chunks[0].id);\n      runtimeRequirements.add(RuntimeGlobals.ensureChunk);\n      return `${RuntimeGlobals.ensureChunk}(${comment}${chunkId})`;\n    } else if (chunks.length > 0) {\n      runtimeRequirements.add(RuntimeGlobals.ensureChunk);\n\n      const requireChunkId = chunk => `${RuntimeGlobals.ensureChunk}(${JSON.stringify(chunk.id)})`;\n\n      return `Promise.all(${comment.trim()}[${chunks.map(requireChunkId).join(\", \")}])`;\n    } else {\n      return `Promise.resolve(${comment.trim()})`;\n    }\n  }\n  /**\n   * @param {Object} options options\n   * @param {AsyncDependenciesBlock} options.block the async block\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @param {string=} options.request request string used originally\n   * @returns {string} expression\n   */\n\n\n  asyncModuleFactory(_ref17) {\n    let {\n      block,\n      chunkGraph,\n      runtimeRequirements,\n      request\n    } = _ref17;\n    const dep = block.dependencies[0];\n    const module = chunkGraph.moduleGraph.getModule(dep);\n    const ensureChunk = this.blockPromise({\n      block,\n      message: \"\",\n      chunkGraph,\n      runtimeRequirements\n    });\n    const factory = this.returningFunction(this.moduleRaw({\n      module,\n      chunkGraph,\n      request,\n      runtimeRequirements\n    }));\n    return this.returningFunction(ensureChunk.startsWith(\"Promise.resolve(\") ? `${factory}` : `${ensureChunk}.then(${this.returningFunction(factory)})`);\n  }\n  /**\n   * @param {Object} options options\n   * @param {Dependency} options.dependency the dependency\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @param {string=} options.request request string used originally\n   * @returns {string} expression\n   */\n\n\n  syncModuleFactory(_ref18) {\n    let {\n      dependency,\n      chunkGraph,\n      runtimeRequirements,\n      request\n    } = _ref18;\n    const module = chunkGraph.moduleGraph.getModule(dependency);\n    const factory = this.returningFunction(this.moduleRaw({\n      module,\n      chunkGraph,\n      request,\n      runtimeRequirements\n    }));\n    return this.returningFunction(factory);\n  }\n  /**\n   * @param {Object} options options\n   * @param {string} options.exportsArgument the name of the exports object\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} statement\n   */\n\n\n  defineEsModuleFlagStatement(_ref19) {\n    let {\n      exportsArgument,\n      runtimeRequirements\n    } = _ref19;\n    runtimeRequirements.add(RuntimeGlobals.makeNamespaceObject);\n    runtimeRequirements.add(RuntimeGlobals.exports);\n    return `${RuntimeGlobals.makeNamespaceObject}(${exportsArgument});\\n`;\n  }\n  /**\n   * @param {Object} options options object\n   * @param {Module} options.module the module\n   * @param {string} options.publicPath the public path\n   * @param {RuntimeSpec=} options.runtime runtime\n   * @param {CodeGenerationResults} options.codeGenerationResults the code generation results\n   * @returns {string} the url of the asset\n   */\n\n\n  assetUrl(_ref20) {\n    let {\n      publicPath,\n      runtime,\n      module,\n      codeGenerationResults\n    } = _ref20;\n\n    if (!module) {\n      return \"data:,\";\n    }\n\n    const codeGen = codeGenerationResults.get(module, runtime);\n    const {\n      data\n    } = codeGen;\n    const url = data.get(\"url\");\n    if (url) return url.toString();\n    const filename = data.get(\"filename\");\n    return publicPath + filename;\n  }\n\n}\n\nmodule.exports = RuntimeTemplate;","map":{"version":3,"names":["InitFragment","require","RuntimeGlobals","Template","equals","compileBooleanMatcher","propertyAccess","forEachRuntime","subtractRuntime","noModuleIdErrorMessage","module","chunkGraph","identifier","Array","from","getModuleChunksIterable","c","name","id","debugId","join","moduleGraph","getIncomingConnections","connection","originModule","dependency","type","explanations","getGlobalObject","definition","trimmed","trim","match","RuntimeTemplate","constructor","compilation","outputOptions","requestShortener","globalObject","contentHashReplacement","repeat","hashDigestLength","isIIFE","iife","isModule","supportsConst","environment","const","supportsArrowFunction","arrowFunction","supportsOptionalChaining","optionalChaining","supportsForOf","forOf","supportsDestructuring","destructuring","supportsBigIntLiteral","bigIntLiteral","supportsDynamicImport","dynamicImport","supportsEcmaScriptModuleSyntax","supportTemplateLiteral","templateLiteral","returningFunction","returnValue","args","basicFunction","body","indent","concatenation","len","length","_es5Concatenation","JSON","stringify","expr","templateCost","concatenationCost","lastWasExpr","arg","isExpr","map","str","expressionFunction","expression","emptyFunction","destructureArray","items","value","asString","item","i","destructureObject","forEach","variable","array","comment","request","chunkName","chunkReason","message","exportName","content","pathinfo","filter","Boolean","shorten","toComment","toNormalComment","throwMissingModuleErrorBlock","err","throwMissingModuleErrorFunction","missingModule","missingModuleStatement","missingModulePromise","weakError","idExpr","moduleId","getModuleId","errorMessage","errorStatements","weak","Error","moduleRaw","runtimeRequirements","add","moduleExports","moduleNamespace","strict","exportsType","getExportsType","createFakeNamespaceObject","moduleNamespacePromise","block","promise","blockPromise","appending","header","moduleFactories","moduleIdExpr","fakeType","rawModule","isAsync","returnExpression","runtimeConditionExpression","runtimeCondition","runtime","undefined","positiveRuntimeIds","Set","getRuntimeId","negativeRuntimeIds","runtimeId","fromLists","importStatement","update","importVar","optDeclaration","buildMeta","strictHarmonyModule","importContent","compatGetDefaultExport","exportFromImport","asiSafe","isCall","callContext","defaultInterop","initFragments","isArray","slice","push","STAGE_CONSTANTS","exportsInfo","getExportsInfo","used","getUsedName","access","chunkGroup","getBlockChunkGroup","chunks","chunk","hasRuntime","chunkId","ensureChunk","requireChunkId","asyncModuleFactory","dep","dependencies","getModule","factory","startsWith","syncModuleFactory","defineEsModuleFlagStatement","exportsArgument","makeNamespaceObject","exports","assetUrl","publicPath","codeGenerationResults","codeGen","get","data","url","toString","filename"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/RuntimeTemplate.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst InitFragment = require(\"./InitFragment\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst Template = require(\"./Template\");\nconst { equals } = require(\"./util/ArrayHelpers\");\nconst compileBooleanMatcher = require(\"./util/compileBooleanMatcher\");\nconst propertyAccess = require(\"./util/propertyAccess\");\nconst { forEachRuntime, subtractRuntime } = require(\"./util/runtime\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").OutputNormalized} OutputOptions */\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./CodeGenerationResults\")} CodeGenerationResults */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @param {Module} module the module\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @returns {string} error message\n */\nconst noModuleIdErrorMessage = (module, chunkGraph) => {\n\treturn `Module ${module.identifier()} has no id assigned.\nThis should not happen.\nIt's in these chunks: ${\n\t\tArray.from(\n\t\t\tchunkGraph.getModuleChunksIterable(module),\n\t\t\tc => c.name || c.id || c.debugId\n\t\t).join(\", \") || \"none\"\n\t} (If module is in no chunk this indicates a bug in some chunk/module optimization logic)\nModule has these incoming connections: ${Array.from(\n\t\tchunkGraph.moduleGraph.getIncomingConnections(module),\n\t\tconnection =>\n\t\t\t`\\n - ${\n\t\t\t\tconnection.originModule && connection.originModule.identifier()\n\t\t\t} ${connection.dependency && connection.dependency.type} ${\n\t\t\t\t(connection.explanations &&\n\t\t\t\t\tArray.from(connection.explanations).join(\", \")) ||\n\t\t\t\t\"\"\n\t\t\t}`\n\t).join(\"\")}`;\n};\n\n/**\n * @param {string|undefined} definition global object definition\n * @returns {string} save to use global object\n */\nfunction getGlobalObject(definition) {\n\tif (!definition) return definition;\n\tconst trimmed = definition.trim();\n\n\tif (\n\t\t// identifier, we do not need real identifier regarding ECMAScript/Unicode\n\t\ttrimmed.match(/^[_\\p{L}][_0-9\\p{L}]*$/iu) ||\n\t\t// iife\n\t\t// call expression\n\t\t// expression in parentheses\n\t\ttrimmed.match(/^([_\\p{L}][_0-9\\p{L}]*)?\\(.*\\)$/iu)\n\t)\n\t\treturn trimmed;\n\n\treturn `Object(${trimmed})`;\n}\n\nclass RuntimeTemplate {\n\t/**\n\t * @param {Compilation} compilation the compilation\n\t * @param {OutputOptions} outputOptions the compilation output options\n\t * @param {RequestShortener} requestShortener the request shortener\n\t */\n\tconstructor(compilation, outputOptions, requestShortener) {\n\t\tthis.compilation = compilation;\n\t\tthis.outputOptions = outputOptions || {};\n\t\tthis.requestShortener = requestShortener;\n\t\tthis.globalObject = getGlobalObject(outputOptions.globalObject);\n\t\tthis.contentHashReplacement = \"X\".repeat(outputOptions.hashDigestLength);\n\t}\n\n\tisIIFE() {\n\t\treturn this.outputOptions.iife;\n\t}\n\n\tisModule() {\n\t\treturn this.outputOptions.module;\n\t}\n\n\tsupportsConst() {\n\t\treturn this.outputOptions.environment.const;\n\t}\n\n\tsupportsArrowFunction() {\n\t\treturn this.outputOptions.environment.arrowFunction;\n\t}\n\n\tsupportsOptionalChaining() {\n\t\treturn this.outputOptions.environment.optionalChaining;\n\t}\n\n\tsupportsForOf() {\n\t\treturn this.outputOptions.environment.forOf;\n\t}\n\n\tsupportsDestructuring() {\n\t\treturn this.outputOptions.environment.destructuring;\n\t}\n\n\tsupportsBigIntLiteral() {\n\t\treturn this.outputOptions.environment.bigIntLiteral;\n\t}\n\n\tsupportsDynamicImport() {\n\t\treturn this.outputOptions.environment.dynamicImport;\n\t}\n\n\tsupportsEcmaScriptModuleSyntax() {\n\t\treturn this.outputOptions.environment.module;\n\t}\n\n\tsupportTemplateLiteral() {\n\t\treturn this.outputOptions.environment.templateLiteral;\n\t}\n\n\treturningFunction(returnValue, args = \"\") {\n\t\treturn this.supportsArrowFunction()\n\t\t\t? `(${args}) => (${returnValue})`\n\t\t\t: `function(${args}) { return ${returnValue}; }`;\n\t}\n\n\tbasicFunction(args, body) {\n\t\treturn this.supportsArrowFunction()\n\t\t\t? `(${args}) => {\\n${Template.indent(body)}\\n}`\n\t\t\t: `function(${args}) {\\n${Template.indent(body)}\\n}`;\n\t}\n\n\t/**\n\t * @param {Array<string|{expr: string}>} args args\n\t * @returns {string} result expression\n\t */\n\tconcatenation(...args) {\n\t\tconst len = args.length;\n\n\t\tif (len === 2) return this._es5Concatenation(args);\n\t\tif (len === 0) return '\"\"';\n\t\tif (len === 1) {\n\t\t\treturn typeof args[0] === \"string\"\n\t\t\t\t? JSON.stringify(args[0])\n\t\t\t\t: `\"\" + ${args[0].expr}`;\n\t\t}\n\t\tif (!this.supportTemplateLiteral()) return this._es5Concatenation(args);\n\n\t\t// cost comparison between template literal and concatenation:\n\t\t// both need equal surroundings: `xxx` vs \"xxx\"\n\t\t// template literal has constant cost of 3 chars for each expression\n\t\t// es5 concatenation has cost of 3 + n chars for n expressions in row\n\t\t// when a es5 concatenation ends with an expression it reduces cost by 3\n\t\t// when a es5 concatenation starts with an single expression it reduces cost by 3\n\t\t// e. g. `${a}${b}${c}` (3*3 = 9) is longer than \"\"+a+b+c ((3+3)-3 = 3)\n\t\t// e. g. `x${a}x${b}x${c}x` (3*3 = 9) is shorter than \"x\"+a+\"x\"+b+\"x\"+c+\"x\" (4+4+4 = 12)\n\n\t\tlet templateCost = 0;\n\t\tlet concatenationCost = 0;\n\n\t\tlet lastWasExpr = false;\n\t\tfor (const arg of args) {\n\t\t\tconst isExpr = typeof arg !== \"string\";\n\t\t\tif (isExpr) {\n\t\t\t\ttemplateCost += 3;\n\t\t\t\tconcatenationCost += lastWasExpr ? 1 : 4;\n\t\t\t}\n\t\t\tlastWasExpr = isExpr;\n\t\t}\n\t\tif (lastWasExpr) concatenationCost -= 3;\n\t\tif (typeof args[0] !== \"string\" && typeof args[1] === \"string\")\n\t\t\tconcatenationCost -= 3;\n\n\t\tif (concatenationCost <= templateCost) return this._es5Concatenation(args);\n\n\t\treturn `\\`${args\n\t\t\t.map(arg => (typeof arg === \"string\" ? arg : `\\${${arg.expr}}`))\n\t\t\t.join(\"\")}\\``;\n\t}\n\n\t/**\n\t * @param {Array<string|{expr: string}>} args args (len >= 2)\n\t * @returns {string} result expression\n\t * @private\n\t */\n\t_es5Concatenation(args) {\n\t\tconst str = args\n\t\t\t.map(arg => (typeof arg === \"string\" ? JSON.stringify(arg) : arg.expr))\n\t\t\t.join(\" + \");\n\n\t\t// when the first two args are expression, we need to prepend \"\" + to force string\n\t\t// concatenation instead of number addition.\n\t\treturn typeof args[0] !== \"string\" && typeof args[1] !== \"string\"\n\t\t\t? `\"\" + ${str}`\n\t\t\t: str;\n\t}\n\n\texpressionFunction(expression, args = \"\") {\n\t\treturn this.supportsArrowFunction()\n\t\t\t? `(${args}) => (${expression})`\n\t\t\t: `function(${args}) { ${expression}; }`;\n\t}\n\n\temptyFunction() {\n\t\treturn this.supportsArrowFunction() ? \"x => {}\" : \"function() {}\";\n\t}\n\n\tdestructureArray(items, value) {\n\t\treturn this.supportsDestructuring()\n\t\t\t? `var [${items.join(\", \")}] = ${value};`\n\t\t\t: Template.asString(\n\t\t\t\t\titems.map((item, i) => `var ${item} = ${value}[${i}];`)\n\t\t\t  );\n\t}\n\n\tdestructureObject(items, value) {\n\t\treturn this.supportsDestructuring()\n\t\t\t? `var {${items.join(\", \")}} = ${value};`\n\t\t\t: Template.asString(\n\t\t\t\t\titems.map(item => `var ${item} = ${value}${propertyAccess([item])};`)\n\t\t\t  );\n\t}\n\n\tiife(args, body) {\n\t\treturn `(${this.basicFunction(args, body)})()`;\n\t}\n\n\tforEach(variable, array, body) {\n\t\treturn this.supportsForOf()\n\t\t\t? `for(const ${variable} of ${array}) {\\n${Template.indent(body)}\\n}`\n\t\t\t: `${array}.forEach(function(${variable}) {\\n${Template.indent(\n\t\t\t\t\tbody\n\t\t\t  )}\\n});`;\n\t}\n\n\t/**\n\t * Add a comment\n\t * @param {object} options Information content of the comment\n\t * @param {string=} options.request request string used originally\n\t * @param {string=} options.chunkName name of the chunk referenced\n\t * @param {string=} options.chunkReason reason information of the chunk\n\t * @param {string=} options.message additional message\n\t * @param {string=} options.exportName name of the export\n\t * @returns {string} comment\n\t */\n\tcomment({ request, chunkName, chunkReason, message, exportName }) {\n\t\tlet content;\n\t\tif (this.outputOptions.pathinfo) {\n\t\t\tcontent = [message, request, chunkName, chunkReason]\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.map(item => this.requestShortener.shorten(item))\n\t\t\t\t.join(\" | \");\n\t\t} else {\n\t\t\tcontent = [message, chunkName, chunkReason]\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.map(item => this.requestShortener.shorten(item))\n\t\t\t\t.join(\" | \");\n\t\t}\n\t\tif (!content) return \"\";\n\t\tif (this.outputOptions.pathinfo) {\n\t\t\treturn Template.toComment(content) + \" \";\n\t\t} else {\n\t\t\treturn Template.toNormalComment(content) + \" \";\n\t\t}\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error block\n\t */\n\tthrowMissingModuleErrorBlock({ request }) {\n\t\tconst err = `Cannot find module '${request}'`;\n\t\treturn `var e = new Error(${JSON.stringify(\n\t\t\terr\n\t\t)}); e.code = 'MODULE_NOT_FOUND'; throw e;`;\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error function\n\t */\n\tthrowMissingModuleErrorFunction({ request }) {\n\t\treturn `function webpackMissingModule() { ${this.throwMissingModuleErrorBlock(\n\t\t\t{ request }\n\t\t)} }`;\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error IIFE\n\t */\n\tmissingModule({ request }) {\n\t\treturn `Object(${this.throwMissingModuleErrorFunction({ request })}())`;\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error statement\n\t */\n\tmissingModuleStatement({ request }) {\n\t\treturn `${this.missingModule({ request })};\\n`;\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error code\n\t */\n\tmissingModulePromise({ request }) {\n\t\treturn `Promise.resolve().then(${this.throwMissingModuleErrorFunction({\n\t\t\trequest\n\t\t})})`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {Module} options.module the module\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {string=} options.idExpr expression to use as id expression\n\t * @param {\"expression\" | \"promise\" | \"statements\"} options.type which kind of code should be returned\n\t * @returns {string} the code\n\t */\n\tweakError({ module, chunkGraph, request, idExpr, type }) {\n\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\tconst errorMessage =\n\t\t\tmoduleId === null\n\t\t\t\t? JSON.stringify(\"Module is not available (weak dependency)\")\n\t\t\t\t: idExpr\n\t\t\t\t? `\"Module '\" + ${idExpr} + \"' is not available (weak dependency)\"`\n\t\t\t\t: JSON.stringify(\n\t\t\t\t\t\t`Module '${moduleId}' is not available (weak dependency)`\n\t\t\t\t  );\n\t\tconst comment = request ? Template.toNormalComment(request) + \" \" : \"\";\n\t\tconst errorStatements =\n\t\t\t`var e = new Error(${errorMessage}); ` +\n\t\t\tcomment +\n\t\t\t\"e.code = 'MODULE_NOT_FOUND'; throw e;\";\n\t\tswitch (type) {\n\t\t\tcase \"statements\":\n\t\t\t\treturn errorStatements;\n\t\t\tcase \"promise\":\n\t\t\t\treturn `Promise.resolve().then(${this.basicFunction(\n\t\t\t\t\t\"\",\n\t\t\t\t\terrorStatements\n\t\t\t\t)})`;\n\t\t\tcase \"expression\":\n\t\t\t\treturn this.iife(\"\", errorStatements);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @returns {string} the expression\n\t */\n\tmoduleId({ module, chunkGraph, request, weak }) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\tif (moduleId === null) {\n\t\t\tif (weak) {\n\t\t\t\treturn \"null /* weak dependency, without id */\";\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.moduleId(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\treturn `${this.comment({ request })}${JSON.stringify(moduleId)}`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} the expression\n\t */\n\tmoduleRaw({ module, chunkGraph, request, weak, runtimeRequirements }) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\tif (moduleId === null) {\n\t\t\tif (weak) {\n\t\t\t\t// only weak referenced modules don't get an id\n\t\t\t\t// we can always emit an error emitting code here\n\t\t\t\treturn this.weakError({\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\trequest,\n\t\t\t\t\ttype: \"expression\"\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.moduleId(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\truntimeRequirements.add(RuntimeGlobals.require);\n\t\treturn `__webpack_require__(${this.moduleId({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak\n\t\t})})`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} the expression\n\t */\n\tmoduleExports({ module, chunkGraph, request, weak, runtimeRequirements }) {\n\t\treturn this.moduleRaw({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak,\n\t\t\truntimeRequirements\n\t\t});\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {boolean=} options.strict if the current module is in strict esm mode\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} the expression\n\t */\n\tmoduleNamespace({\n\t\tmodule,\n\t\tchunkGraph,\n\t\trequest,\n\t\tstrict,\n\t\tweak,\n\t\truntimeRequirements\n\t}) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tif (chunkGraph.getModuleId(module) === null) {\n\t\t\tif (weak) {\n\t\t\t\t// only weak referenced modules don't get an id\n\t\t\t\t// we can always emit an error emitting code here\n\t\t\t\treturn this.weakError({\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\trequest,\n\t\t\t\t\ttype: \"expression\"\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.moduleNamespace(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\tconst moduleId = this.moduleId({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak\n\t\t});\n\t\tconst exportsType = module.getExportsType(chunkGraph.moduleGraph, strict);\n\t\tswitch (exportsType) {\n\t\t\tcase \"namespace\":\n\t\t\t\treturn this.moduleRaw({\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\trequest,\n\t\t\t\t\tweak,\n\t\t\t\t\truntimeRequirements\n\t\t\t\t});\n\t\t\tcase \"default-with-named\":\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\treturn `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 3)`;\n\t\t\tcase \"default-only\":\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\treturn `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 1)`;\n\t\t\tcase \"dynamic\":\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\treturn `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 7)`;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {AsyncDependenciesBlock=} options.block the current dependencies block\n\t * @param {Module} options.module the module\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {string} options.message a message for the comment\n\t * @param {boolean=} options.strict if the current module is in strict esm mode\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} the promise expression\n\t */\n\tmoduleNamespacePromise({\n\t\tchunkGraph,\n\t\tblock,\n\t\tmodule,\n\t\trequest,\n\t\tmessage,\n\t\tstrict,\n\t\tweak,\n\t\truntimeRequirements\n\t}) {\n\t\tif (!module) {\n\t\t\treturn this.missingModulePromise({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\tif (moduleId === null) {\n\t\t\tif (weak) {\n\t\t\t\t// only weak referenced modules don't get an id\n\t\t\t\t// we can always emit an error emitting code here\n\t\t\t\treturn this.weakError({\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\trequest,\n\t\t\t\t\ttype: \"promise\"\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.moduleNamespacePromise(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\tconst promise = this.blockPromise({\n\t\t\tchunkGraph,\n\t\t\tblock,\n\t\t\tmessage,\n\t\t\truntimeRequirements\n\t\t});\n\n\t\tlet appending;\n\t\tlet idExpr = JSON.stringify(chunkGraph.getModuleId(module));\n\t\tconst comment = this.comment({\n\t\t\trequest\n\t\t});\n\t\tlet header = \"\";\n\t\tif (weak) {\n\t\t\tif (idExpr.length > 8) {\n\t\t\t\t// 'var x=\"nnnnnn\";x,\"+x+\",x' vs '\"nnnnnn\",nnnnnn,\"nnnnnn\"'\n\t\t\t\theader += `var id = ${idExpr}; `;\n\t\t\t\tidExpr = \"id\";\n\t\t\t}\n\t\t\truntimeRequirements.add(RuntimeGlobals.moduleFactories);\n\t\t\theader += `if(!${\n\t\t\t\tRuntimeGlobals.moduleFactories\n\t\t\t}[${idExpr}]) { ${this.weakError({\n\t\t\t\tmodule,\n\t\t\t\tchunkGraph,\n\t\t\t\trequest,\n\t\t\t\tidExpr,\n\t\t\t\ttype: \"statements\"\n\t\t\t})} } `;\n\t\t}\n\t\tconst moduleIdExpr = this.moduleId({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak\n\t\t});\n\t\tconst exportsType = module.getExportsType(chunkGraph.moduleGraph, strict);\n\t\tlet fakeType = 16;\n\t\tswitch (exportsType) {\n\t\t\tcase \"namespace\":\n\t\t\t\tif (header) {\n\t\t\t\t\tconst rawModule = this.moduleRaw({\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\tweak,\n\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t});\n\t\t\t\t\tappending = `.then(${this.basicFunction(\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t`${header}return ${rawModule};`\n\t\t\t\t\t)})`;\n\t\t\t\t} else {\n\t\t\t\t\truntimeRequirements.add(RuntimeGlobals.require);\n\t\t\t\t\tappending = `.then(__webpack_require__.bind(__webpack_require__, ${comment}${idExpr}))`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"dynamic\":\n\t\t\t\tfakeType |= 4;\n\t\t\t/* fall through */\n\t\t\tcase \"default-with-named\":\n\t\t\t\tfakeType |= 2;\n\t\t\t/* fall through */\n\t\t\tcase \"default-only\":\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\tif (chunkGraph.moduleGraph.isAsync(module)) {\n\t\t\t\t\tif (header) {\n\t\t\t\t\t\tconst rawModule = this.moduleRaw({\n\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\tweak,\n\t\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t\t});\n\t\t\t\t\t\tappending = `.then(${this.basicFunction(\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t`${header}return ${rawModule};`\n\t\t\t\t\t\t)})`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\truntimeRequirements.add(RuntimeGlobals.require);\n\t\t\t\t\t\tappending = `.then(__webpack_require__.bind(__webpack_require__, ${comment}${idExpr}))`;\n\t\t\t\t\t}\n\t\t\t\t\tappending += `.then(${this.returningFunction(\n\t\t\t\t\t\t`${RuntimeGlobals.createFakeNamespaceObject}(m, ${fakeType})`,\n\t\t\t\t\t\t\"m\"\n\t\t\t\t\t)})`;\n\t\t\t\t} else {\n\t\t\t\t\tfakeType |= 1;\n\t\t\t\t\tif (header) {\n\t\t\t\t\t\tconst returnExpression = `${RuntimeGlobals.createFakeNamespaceObject}(${moduleIdExpr}, ${fakeType})`;\n\t\t\t\t\t\tappending = `.then(${this.basicFunction(\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t`${header}return ${returnExpression};`\n\t\t\t\t\t\t)})`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tappending = `.then(${RuntimeGlobals.createFakeNamespaceObject}.bind(__webpack_require__, ${comment}${idExpr}, ${fakeType}))`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn `${promise || \"Promise.resolve()\"}${appending}`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {RuntimeSpec=} options.runtime runtime for which this code will be generated\n\t * @param {RuntimeSpec | boolean=} options.runtimeCondition only execute the statement in some runtimes\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} expression\n\t */\n\truntimeConditionExpression({\n\t\tchunkGraph,\n\t\truntimeCondition,\n\t\truntime,\n\t\truntimeRequirements\n\t}) {\n\t\tif (runtimeCondition === undefined) return \"true\";\n\t\tif (typeof runtimeCondition === \"boolean\") return `${runtimeCondition}`;\n\t\t/** @type {Set<string>} */\n\t\tconst positiveRuntimeIds = new Set();\n\t\tforEachRuntime(runtimeCondition, runtime =>\n\t\t\tpositiveRuntimeIds.add(`${chunkGraph.getRuntimeId(runtime)}`)\n\t\t);\n\t\t/** @type {Set<string>} */\n\t\tconst negativeRuntimeIds = new Set();\n\t\tforEachRuntime(subtractRuntime(runtime, runtimeCondition), runtime =>\n\t\t\tnegativeRuntimeIds.add(`${chunkGraph.getRuntimeId(runtime)}`)\n\t\t);\n\t\truntimeRequirements.add(RuntimeGlobals.runtimeId);\n\t\treturn compileBooleanMatcher.fromLists(\n\t\t\tArray.from(positiveRuntimeIds),\n\t\t\tArray.from(negativeRuntimeIds)\n\t\t)(RuntimeGlobals.runtimeId);\n\t}\n\n\t/**\n\t *\n\t * @param {Object} options options object\n\t * @param {boolean=} options.update whether a new variable should be created or the existing one updated\n\t * @param {Module} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {string} options.importVar name of the import variable\n\t * @param {Module} options.originModule module in which the statement is emitted\n\t * @param {boolean=} options.weak true, if this is a weak dependency\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {[string, string]} the import statement and the compat statement\n\t */\n\timportStatement({\n\t\tupdate,\n\t\tmodule,\n\t\tchunkGraph,\n\t\trequest,\n\t\timportVar,\n\t\toriginModule,\n\t\tweak,\n\t\truntimeRequirements\n\t}) {\n\t\tif (!module) {\n\t\t\treturn [\n\t\t\t\tthis.missingModuleStatement({\n\t\t\t\t\trequest\n\t\t\t\t}),\n\t\t\t\t\"\"\n\t\t\t];\n\t\t}\n\t\tif (chunkGraph.getModuleId(module) === null) {\n\t\t\tif (weak) {\n\t\t\t\t// only weak referenced modules don't get an id\n\t\t\t\t// we can always emit an error emitting code here\n\t\t\t\treturn [\n\t\t\t\t\tthis.weakError({\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\ttype: \"statements\"\n\t\t\t\t\t}),\n\t\t\t\t\t\"\"\n\t\t\t\t];\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.importStatement(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\tconst moduleId = this.moduleId({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak\n\t\t});\n\t\tconst optDeclaration = update ? \"\" : \"var \";\n\n\t\tconst exportsType = module.getExportsType(\n\t\t\tchunkGraph.moduleGraph,\n\t\t\toriginModule.buildMeta.strictHarmonyModule\n\t\t);\n\t\truntimeRequirements.add(RuntimeGlobals.require);\n\t\tconst importContent = `/* harmony import */ ${optDeclaration}${importVar} = __webpack_require__(${moduleId});\\n`;\n\n\t\tif (exportsType === \"dynamic\") {\n\t\t\truntimeRequirements.add(RuntimeGlobals.compatGetDefaultExport);\n\t\t\treturn [\n\t\t\t\timportContent,\n\t\t\t\t`/* harmony import */ ${optDeclaration}${importVar}_default = /*#__PURE__*/${RuntimeGlobals.compatGetDefaultExport}(${importVar});\\n`\n\t\t\t];\n\t\t}\n\t\treturn [importContent, \"\"];\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {ModuleGraph} options.moduleGraph the module graph\n\t * @param {Module} options.module the module\n\t * @param {string} options.request the request\n\t * @param {string | string[]} options.exportName the export name\n\t * @param {Module} options.originModule the origin module\n\t * @param {boolean|undefined} options.asiSafe true, if location is safe for ASI, a bracket can be emitted\n\t * @param {boolean} options.isCall true, if expression will be called\n\t * @param {boolean} options.callContext when false, call context will not be preserved\n\t * @param {boolean} options.defaultInterop when true and accessing the default exports, interop code will be generated\n\t * @param {string} options.importVar the identifier name of the import variable\n\t * @param {InitFragment[]} options.initFragments init fragments will be added here\n\t * @param {RuntimeSpec} options.runtime runtime for which this code will be generated\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} expression\n\t */\n\texportFromImport({\n\t\tmoduleGraph,\n\t\tmodule,\n\t\trequest,\n\t\texportName,\n\t\toriginModule,\n\t\tasiSafe,\n\t\tisCall,\n\t\tcallContext,\n\t\tdefaultInterop,\n\t\timportVar,\n\t\tinitFragments,\n\t\truntime,\n\t\truntimeRequirements\n\t}) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tif (!Array.isArray(exportName)) {\n\t\t\texportName = exportName ? [exportName] : [];\n\t\t}\n\t\tconst exportsType = module.getExportsType(\n\t\t\tmoduleGraph,\n\t\t\toriginModule.buildMeta.strictHarmonyModule\n\t\t);\n\n\t\tif (defaultInterop) {\n\t\t\tif (exportName.length > 0 && exportName[0] === \"default\") {\n\t\t\t\tswitch (exportsType) {\n\t\t\t\t\tcase \"dynamic\":\n\t\t\t\t\t\tif (isCall) {\n\t\t\t\t\t\t\treturn `${importVar}_default()${propertyAccess(exportName, 1)}`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn asiSafe\n\t\t\t\t\t\t\t\t? `(${importVar}_default()${propertyAccess(exportName, 1)})`\n\t\t\t\t\t\t\t\t: asiSafe === false\n\t\t\t\t\t\t\t\t? `;(${importVar}_default()${propertyAccess(exportName, 1)})`\n\t\t\t\t\t\t\t\t: `${importVar}_default.a${propertyAccess(exportName, 1)}`;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase \"default-only\":\n\t\t\t\t\tcase \"default-with-named\":\n\t\t\t\t\t\texportName = exportName.slice(1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (exportName.length > 0) {\n\t\t\t\tif (exportsType === \"default-only\") {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t\"/* non-default import from non-esm module */undefined\" +\n\t\t\t\t\t\tpropertyAccess(exportName, 1)\n\t\t\t\t\t);\n\t\t\t\t} else if (\n\t\t\t\t\texportsType !== \"namespace\" &&\n\t\t\t\t\texportName[0] === \"__esModule\"\n\t\t\t\t) {\n\t\t\t\t\treturn \"/* __esModule */true\";\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\texportsType === \"default-only\" ||\n\t\t\t\texportsType === \"default-with-named\"\n\t\t\t) {\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\tinitFragments.push(\n\t\t\t\t\tnew InitFragment(\n\t\t\t\t\t\t`var ${importVar}_namespace_cache;\\n`,\n\t\t\t\t\t\tInitFragment.STAGE_CONSTANTS,\n\t\t\t\t\t\t-1,\n\t\t\t\t\t\t`${importVar}_namespace_cache`\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\treturn `/*#__PURE__*/ ${\n\t\t\t\t\tasiSafe ? \"\" : asiSafe === false ? \";\" : \"Object\"\n\t\t\t\t}(${importVar}_namespace_cache || (${importVar}_namespace_cache = ${\n\t\t\t\t\tRuntimeGlobals.createFakeNamespaceObject\n\t\t\t\t}(${importVar}${exportsType === \"default-only\" ? \"\" : \", 2\"})))`;\n\t\t\t}\n\t\t}\n\n\t\tif (exportName.length > 0) {\n\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(module);\n\t\t\tconst used = exportsInfo.getUsedName(exportName, runtime);\n\t\t\tif (!used) {\n\t\t\t\tconst comment = Template.toNormalComment(\n\t\t\t\t\t`unused export ${propertyAccess(exportName)}`\n\t\t\t\t);\n\t\t\t\treturn `${comment} undefined`;\n\t\t\t}\n\t\t\tconst comment = equals(used, exportName)\n\t\t\t\t? \"\"\n\t\t\t\t: Template.toNormalComment(propertyAccess(exportName)) + \" \";\n\t\t\tconst access = `${importVar}${comment}${propertyAccess(used)}`;\n\t\t\tif (isCall && callContext === false) {\n\t\t\t\treturn asiSafe\n\t\t\t\t\t? `(0,${access})`\n\t\t\t\t\t: asiSafe === false\n\t\t\t\t\t? `;(0,${access})`\n\t\t\t\t\t: `/*#__PURE__*/Object(${access})`;\n\t\t\t}\n\t\t\treturn access;\n\t\t} else {\n\t\t\treturn importVar;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {AsyncDependenciesBlock} options.block the async block\n\t * @param {string} options.message the message\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} expression\n\t */\n\tblockPromise({ block, message, chunkGraph, runtimeRequirements }) {\n\t\tif (!block) {\n\t\t\tconst comment = this.comment({\n\t\t\t\tmessage\n\t\t\t});\n\t\t\treturn `Promise.resolve(${comment.trim()})`;\n\t\t}\n\t\tconst chunkGroup = chunkGraph.getBlockChunkGroup(block);\n\t\tif (!chunkGroup || chunkGroup.chunks.length === 0) {\n\t\t\tconst comment = this.comment({\n\t\t\t\tmessage\n\t\t\t});\n\t\t\treturn `Promise.resolve(${comment.trim()})`;\n\t\t}\n\t\tconst chunks = chunkGroup.chunks.filter(\n\t\t\tchunk => !chunk.hasRuntime() && chunk.id !== null\n\t\t);\n\t\tconst comment = this.comment({\n\t\t\tmessage,\n\t\t\tchunkName: block.chunkName\n\t\t});\n\t\tif (chunks.length === 1) {\n\t\t\tconst chunkId = JSON.stringify(chunks[0].id);\n\t\t\truntimeRequirements.add(RuntimeGlobals.ensureChunk);\n\t\t\treturn `${RuntimeGlobals.ensureChunk}(${comment}${chunkId})`;\n\t\t} else if (chunks.length > 0) {\n\t\t\truntimeRequirements.add(RuntimeGlobals.ensureChunk);\n\t\t\tconst requireChunkId = chunk =>\n\t\t\t\t`${RuntimeGlobals.ensureChunk}(${JSON.stringify(chunk.id)})`;\n\t\t\treturn `Promise.all(${comment.trim()}[${chunks\n\t\t\t\t.map(requireChunkId)\n\t\t\t\t.join(\", \")}])`;\n\t\t} else {\n\t\t\treturn `Promise.resolve(${comment.trim()})`;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {AsyncDependenciesBlock} options.block the async block\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} expression\n\t */\n\tasyncModuleFactory({ block, chunkGraph, runtimeRequirements, request }) {\n\t\tconst dep = block.dependencies[0];\n\t\tconst module = chunkGraph.moduleGraph.getModule(dep);\n\t\tconst ensureChunk = this.blockPromise({\n\t\t\tblock,\n\t\t\tmessage: \"\",\n\t\t\tchunkGraph,\n\t\t\truntimeRequirements\n\t\t});\n\t\tconst factory = this.returningFunction(\n\t\t\tthis.moduleRaw({\n\t\t\t\tmodule,\n\t\t\t\tchunkGraph,\n\t\t\t\trequest,\n\t\t\t\truntimeRequirements\n\t\t\t})\n\t\t);\n\t\treturn this.returningFunction(\n\t\t\tensureChunk.startsWith(\"Promise.resolve(\")\n\t\t\t\t? `${factory}`\n\t\t\t\t: `${ensureChunk}.then(${this.returningFunction(factory)})`\n\t\t);\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {Dependency} options.dependency the dependency\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} expression\n\t */\n\tsyncModuleFactory({ dependency, chunkGraph, runtimeRequirements, request }) {\n\t\tconst module = chunkGraph.moduleGraph.getModule(dependency);\n\t\tconst factory = this.returningFunction(\n\t\t\tthis.moduleRaw({\n\t\t\t\tmodule,\n\t\t\t\tchunkGraph,\n\t\t\t\trequest,\n\t\t\t\truntimeRequirements\n\t\t\t})\n\t\t);\n\t\treturn this.returningFunction(factory);\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {string} options.exportsArgument the name of the exports object\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} statement\n\t */\n\tdefineEsModuleFlagStatement({ exportsArgument, runtimeRequirements }) {\n\t\truntimeRequirements.add(RuntimeGlobals.makeNamespaceObject);\n\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\treturn `${RuntimeGlobals.makeNamespaceObject}(${exportsArgument});\\n`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module} options.module the module\n\t * @param {string} options.publicPath the public path\n\t * @param {RuntimeSpec=} options.runtime runtime\n\t * @param {CodeGenerationResults} options.codeGenerationResults the code generation results\n\t * @returns {string} the url of the asset\n\t */\n\tassetUrl({ publicPath, runtime, module, codeGenerationResults }) {\n\t\tif (!module) {\n\t\t\treturn \"data:,\";\n\t\t}\n\t\tconst codeGen = codeGenerationResults.get(module, runtime);\n\t\tconst { data } = codeGen;\n\t\tconst url = data.get(\"url\");\n\t\tif (url) return url.toString();\n\t\tconst filename = data.get(\"filename\");\n\t\treturn publicPath + filename;\n\t}\n}\n\nmodule.exports = RuntimeTemplate;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}