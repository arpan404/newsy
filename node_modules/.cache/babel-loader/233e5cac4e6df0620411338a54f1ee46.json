{"ast":null,"code":"// import React, { Component } from \"react\";\n// import NewsCard from \"./newsCard\";\n// import \"./news.css\";\n// import Spinner from \"./spinner\";\n// import PropTypes from \"prop-types\";\n// import InfiniteScroll from 'react-infinite-scroll-component';\n// export default class News extends Component {\n//   static defaultProps = {\n//     pageSize: 10,\n//     query: \"usa\",\n//     language: \"en\",\n//   };\n//   static propTypes = {\n//     pageSize: PropTypes.number,\n//     category: PropTypes.string,\n//     language: PropTypes.string,\n//   };\n//   constructor() {\n//     super();\n//     this.state = {\n//       articles: [],\n//       loading: true,\n//       page: 1,\n//       totalResults: 0,\n//     };\n//   }\n//   async componentDidMount() {\n//     this.props.setProgress(10);\n//     this.setState({\n//       loading: true,\n//     });\n//     let url = `https://newsapi.org/v2/everything?q=${this.props.query}&sortBy=publishedAt&apiKey=${this.props.apiKey}`;\n//     let data = await fetch(url);\n//     let parsedData = await data.json();\n//     this.setState({\n//       loading: false,\n//       articles: parsedData.articles,\n//       totalResults: parsedData.totalResults,\n//     });\n//     this.props.setProgress(100);\n//   }\n//   fetchMoreData = async()=>{\n//     this.setState({\n//       page: this.state.page +1,\n//     });\n//     let url = `https://newsapi.org/v2/everything?q=${this.props.query}&sortBy=publishedAt&apiKey=${this.props.apiKey}`;\n//     let data = await fetch(url);\n//     let parsedData = await data.json();\n//     this.setState({\n//       loading: false,\n//       articles: this.state.articles.concat(parsedData.articles),\n//       totalResults: parsedData.totalResults,\n//     });\n//   }\n//  render() {\n//     return (\n//       <>\n//       <div className=\"text-left mx-2\">\n//         <small style= {{color: 'grey'}}>\n//           Newsy &#62; Search\n//         </small>\n//       </div>\n//       {this.state.loading && <Spinner/>}\n//           <InfiniteScroll\n//     dataLength={this.state.articles.length}\n//     next={this.fetchMoreData}\n//     inverse={false} \n//     hasMore={this.state.articles.length !== this.state.totalResults && this.props.pageSize *this.state.page + 1 <= 100}\n//     loader={<Spinner/>}\n//   >\n//     <div className=\"row\">\n//             {\n//               this.state.articles.map((element) => {\n//                 return (\n//                   <NewsCard\n//                     title={element.title}\n//                     description={element.description}\n//                     imgSrc={element.urlToImage}\n//                     key={element.url+element.title+element.description+element.publishedAt+element.author+Math.random()}\n//                     newsUrl={element.url}\n//                     source={element.source.name}\n//                     author={element.author}\n//                     publishedDate={element.publishedAt}\n//                   />\n//                 );\n//               })}\n//                </div>\n//               </InfiniteScroll>\n//        </>\n//     );\n//   }\n// }","map":{"version":3,"names":[],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/src/components/search.js"],"sourcesContent":["// import React, { Component } from \"react\";\n// import NewsCard from \"./newsCard\";\n// import \"./news.css\";\n// import Spinner from \"./spinner\";\n// import PropTypes from \"prop-types\";\n// import InfiniteScroll from 'react-infinite-scroll-component';\n\n// export default class News extends Component {\n//   static defaultProps = {\n//     pageSize: 10,\n//     query: \"usa\",\n//     language: \"en\",\n//   };\n//   static propTypes = {\n//     pageSize: PropTypes.number,\n//     category: PropTypes.string,\n   \n//     language: PropTypes.string,\n//   };\n//   constructor() {\n//     super();\n//     this.state = {\n//       articles: [],\n//       loading: true,\n//       page: 1,\n//       totalResults: 0,\n      \n//     };\n//   }\n\n   \n  \n//   async componentDidMount() {\n//     this.props.setProgress(10);\n//     this.setState({\n//       loading: true,\n      \n//     });\n//     let url = `https://newsapi.org/v2/everything?q=${this.props.query}&sortBy=publishedAt&apiKey=${this.props.apiKey}`;\n//     let data = await fetch(url);\n//     let parsedData = await data.json();\n//     this.setState({\n//       loading: false,\n//       articles: parsedData.articles,\n//       totalResults: parsedData.totalResults,\n      \n//     });\n//     this.props.setProgress(100);\n//   }\n//   fetchMoreData = async()=>{\n//     this.setState({\n//       page: this.state.page +1,\n      \n//     });\n//     let url = `https://newsapi.org/v2/everything?q=${this.props.query}&sortBy=publishedAt&apiKey=${this.props.apiKey}`;\n//     let data = await fetch(url);\n//     let parsedData = await data.json();\n//     this.setState({\n//       loading: false,\n//       articles: this.state.articles.concat(parsedData.articles),\n//       totalResults: parsedData.totalResults,\n      \n//     });\n   \n//   }\n \n\n//  render() {\n//     return (\n//       <>\n//       <div className=\"text-left mx-2\">\n//         <small style= {{color: 'grey'}}>\n//           Newsy &#62; Search\n          \n//         </small>\n//       </div>\n//       {this.state.loading && <Spinner/>}\n  \n          \n//           <InfiniteScroll\n//     dataLength={this.state.articles.length}\n//     next={this.fetchMoreData}\n   \n//     inverse={false} \n//     hasMore={this.state.articles.length !== this.state.totalResults && this.props.pageSize *this.state.page + 1 <= 100}\n//     loader={<Spinner/>}\n    \n//   >\n//     <div className=\"row\">\n//             {\n//               this.state.articles.map((element) => {\n//                 return (\n                  \n//                   <NewsCard\n//                     title={element.title}\n//                     description={element.description}\n//                     imgSrc={element.urlToImage}\n//                     key={element.url+element.title+element.description+element.publishedAt+element.author+Math.random()}\n//                     newsUrl={element.url}\n//                     source={element.source.name}\n//                     author={element.author}\n//                     publishedDate={element.publishedAt}\n//                   />\n//                 );\n//               })}\n//                </div>\n//               </InfiniteScroll>\n         \n        \n//        </>\n//     );\n//   }\n// }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}