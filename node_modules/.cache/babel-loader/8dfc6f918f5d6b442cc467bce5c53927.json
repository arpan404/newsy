{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  find\n} = require(\"../util/SetHelpers\");\n\nconst {\n  compareModulesByPreOrderIndexOrIdentifier,\n  compareModulesByPostOrderIndexOrIdentifier\n} = require(\"../util/comparators\");\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n\nclass ChunkModuleIdRangePlugin {\n  constructor(options) {\n    this.options = options;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    const options = this.options;\n    compiler.hooks.compilation.tap(\"ChunkModuleIdRangePlugin\", compilation => {\n      const moduleGraph = compilation.moduleGraph;\n      compilation.hooks.moduleIds.tap(\"ChunkModuleIdRangePlugin\", modules => {\n        const chunkGraph = compilation.chunkGraph;\n        const chunk = find(compilation.chunks, chunk => chunk.name === options.name);\n\n        if (!chunk) {\n          throw new Error(`ChunkModuleIdRangePlugin: Chunk with name '${options.name}\"' was not found`);\n        }\n\n        let chunkModules;\n\n        if (options.order) {\n          let cmpFn;\n\n          switch (options.order) {\n            case \"index\":\n            case \"preOrderIndex\":\n              cmpFn = compareModulesByPreOrderIndexOrIdentifier(moduleGraph);\n              break;\n\n            case \"index2\":\n            case \"postOrderIndex\":\n              cmpFn = compareModulesByPostOrderIndexOrIdentifier(moduleGraph);\n              break;\n\n            default:\n              throw new Error(\"ChunkModuleIdRangePlugin: unexpected value of order\");\n          }\n\n          chunkModules = chunkGraph.getOrderedChunkModules(chunk, cmpFn);\n        } else {\n          chunkModules = Array.from(modules).filter(m => {\n            return chunkGraph.isModuleInChunk(m, chunk);\n          }).sort(compareModulesByPreOrderIndexOrIdentifier(moduleGraph));\n        }\n\n        let currentId = options.start || 0;\n\n        for (let i = 0; i < chunkModules.length; i++) {\n          const m = chunkModules[i];\n\n          if (m.needId && chunkGraph.getModuleId(m) === null) {\n            chunkGraph.setModuleId(m, currentId++);\n          }\n\n          if (options.end && currentId > options.end) break;\n        }\n      });\n    });\n  }\n\n}\n\nmodule.exports = ChunkModuleIdRangePlugin;","map":{"version":3,"names":["find","require","compareModulesByPreOrderIndexOrIdentifier","compareModulesByPostOrderIndexOrIdentifier","ChunkModuleIdRangePlugin","constructor","options","apply","compiler","hooks","compilation","tap","moduleGraph","moduleIds","modules","chunkGraph","chunk","chunks","name","Error","chunkModules","order","cmpFn","getOrderedChunkModules","Array","from","filter","m","isModuleInChunk","sort","currentId","start","i","length","needId","getModuleId","setModuleId","end","module","exports"],"sources":["/Users/arpanbhandari/Documents/cod-ing/React/newsapp/node_modules/webpack/lib/ids/ChunkModuleIdRangePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { find } = require(\"../util/SetHelpers\");\nconst {\n\tcompareModulesByPreOrderIndexOrIdentifier,\n\tcompareModulesByPostOrderIndexOrIdentifier\n} = require(\"../util/comparators\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass ChunkModuleIdRangePlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tcompiler.hooks.compilation.tap(\"ChunkModuleIdRangePlugin\", compilation => {\n\t\t\tconst moduleGraph = compilation.moduleGraph;\n\t\t\tcompilation.hooks.moduleIds.tap(\"ChunkModuleIdRangePlugin\", modules => {\n\t\t\t\tconst chunkGraph = compilation.chunkGraph;\n\t\t\t\tconst chunk = find(\n\t\t\t\t\tcompilation.chunks,\n\t\t\t\t\tchunk => chunk.name === options.name\n\t\t\t\t);\n\t\t\t\tif (!chunk) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`ChunkModuleIdRangePlugin: Chunk with name '${options.name}\"' was not found`\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet chunkModules;\n\t\t\t\tif (options.order) {\n\t\t\t\t\tlet cmpFn;\n\t\t\t\t\tswitch (options.order) {\n\t\t\t\t\t\tcase \"index\":\n\t\t\t\t\t\tcase \"preOrderIndex\":\n\t\t\t\t\t\t\tcmpFn = compareModulesByPreOrderIndexOrIdentifier(moduleGraph);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"index2\":\n\t\t\t\t\t\tcase \"postOrderIndex\":\n\t\t\t\t\t\t\tcmpFn = compareModulesByPostOrderIndexOrIdentifier(moduleGraph);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\"ChunkModuleIdRangePlugin: unexpected value of order\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tchunkModules = chunkGraph.getOrderedChunkModules(chunk, cmpFn);\n\t\t\t\t} else {\n\t\t\t\t\tchunkModules = Array.from(modules)\n\t\t\t\t\t\t.filter(m => {\n\t\t\t\t\t\t\treturn chunkGraph.isModuleInChunk(m, chunk);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.sort(compareModulesByPreOrderIndexOrIdentifier(moduleGraph));\n\t\t\t\t}\n\n\t\t\t\tlet currentId = options.start || 0;\n\t\t\t\tfor (let i = 0; i < chunkModules.length; i++) {\n\t\t\t\t\tconst m = chunkModules[i];\n\t\t\t\t\tif (m.needId && chunkGraph.getModuleId(m) === null) {\n\t\t\t\t\t\tchunkGraph.setModuleId(m, currentId++);\n\t\t\t\t\t}\n\t\t\t\t\tif (options.end && currentId > options.end) break;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\nmodule.exports = ChunkModuleIdRangePlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAM;EAAEA;AAAF,IAAWC,OAAO,CAAC,oBAAD,CAAxB;;AACA,MAAM;EACLC,yCADK;EAELC;AAFK,IAGFF,OAAO,CAAC,qBAAD,CAHX;AAKA;;;AAEA,MAAMG,wBAAN,CAA+B;EAC9BC,WAAW,CAACC,OAAD,EAAU;IACpB,KAAKA,OAAL,GAAeA,OAAf;EACA;EAED;AACD;AACA;AACA;AACA;;;EACCC,KAAK,CAACC,QAAD,EAAW;IACf,MAAMF,OAAO,GAAG,KAAKA,OAArB;IACAE,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CAA+B,0BAA/B,EAA2DD,WAAW,IAAI;MACzE,MAAME,WAAW,GAAGF,WAAW,CAACE,WAAhC;MACAF,WAAW,CAACD,KAAZ,CAAkBI,SAAlB,CAA4BF,GAA5B,CAAgC,0BAAhC,EAA4DG,OAAO,IAAI;QACtE,MAAMC,UAAU,GAAGL,WAAW,CAACK,UAA/B;QACA,MAAMC,KAAK,GAAGhB,IAAI,CACjBU,WAAW,CAACO,MADK,EAEjBD,KAAK,IAAIA,KAAK,CAACE,IAAN,KAAeZ,OAAO,CAACY,IAFf,CAAlB;;QAIA,IAAI,CAACF,KAAL,EAAY;UACX,MAAM,IAAIG,KAAJ,CACJ,8CAA6Cb,OAAO,CAACY,IAAK,kBADtD,CAAN;QAGA;;QAED,IAAIE,YAAJ;;QACA,IAAId,OAAO,CAACe,KAAZ,EAAmB;UAClB,IAAIC,KAAJ;;UACA,QAAQhB,OAAO,CAACe,KAAhB;YACC,KAAK,OAAL;YACA,KAAK,eAAL;cACCC,KAAK,GAAGpB,yCAAyC,CAACU,WAAD,CAAjD;cACA;;YACD,KAAK,QAAL;YACA,KAAK,gBAAL;cACCU,KAAK,GAAGnB,0CAA0C,CAACS,WAAD,CAAlD;cACA;;YACD;cACC,MAAM,IAAIO,KAAJ,CACL,qDADK,CAAN;UAVF;;UAcAC,YAAY,GAAGL,UAAU,CAACQ,sBAAX,CAAkCP,KAAlC,EAAyCM,KAAzC,CAAf;QACA,CAjBD,MAiBO;UACNF,YAAY,GAAGI,KAAK,CAACC,IAAN,CAAWX,OAAX,EACbY,MADa,CACNC,CAAC,IAAI;YACZ,OAAOZ,UAAU,CAACa,eAAX,CAA2BD,CAA3B,EAA8BX,KAA9B,CAAP;UACA,CAHa,EAIba,IAJa,CAIR3B,yCAAyC,CAACU,WAAD,CAJjC,CAAf;QAKA;;QAED,IAAIkB,SAAS,GAAGxB,OAAO,CAACyB,KAAR,IAAiB,CAAjC;;QACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,YAAY,CAACa,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;UAC7C,MAAML,CAAC,GAAGP,YAAY,CAACY,CAAD,CAAtB;;UACA,IAAIL,CAAC,CAACO,MAAF,IAAYnB,UAAU,CAACoB,WAAX,CAAuBR,CAAvB,MAA8B,IAA9C,EAAoD;YACnDZ,UAAU,CAACqB,WAAX,CAAuBT,CAAvB,EAA0BG,SAAS,EAAnC;UACA;;UACD,IAAIxB,OAAO,CAAC+B,GAAR,IAAeP,SAAS,GAAGxB,OAAO,CAAC+B,GAAvC,EAA4C;QAC5C;MACD,CA9CD;IA+CA,CAjDD;EAkDA;;AA9D6B;;AAgE/BC,MAAM,CAACC,OAAP,GAAiBnC,wBAAjB"},"metadata":{},"sourceType":"script"}